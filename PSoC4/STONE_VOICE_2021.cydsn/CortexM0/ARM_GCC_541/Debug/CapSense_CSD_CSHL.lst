ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_rawFilterData1,26,4
  20              		.comm	CapSense_CSD_rawFilterData2,26,4
  21              		.global	CapSense_CSD_sensorBaseline
  22              		.bss
  23              		.align	2
  24              		.type	CapSense_CSD_sensorBaseline, %object
  25              		.size	CapSense_CSD_sensorBaseline, 26
  26              	CapSense_CSD_sensorBaseline:
  27 0000 00000000 		.space	26
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              		.global	CapSense_CSD_sensorBaselineLow
  29 001a 0000     		.align	2
  30              		.type	CapSense_CSD_sensorBaselineLow, %object
  31              		.size	CapSense_CSD_sensorBaselineLow, 13
  32              	CapSense_CSD_sensorBaselineLow:
  33 001c 00000000 		.space	13
  33      00000000 
  33      00000000 
  33      00
  34              		.global	CapSense_CSD_sensorSignal
  35 0029 000000   		.align	2
  36              		.type	CapSense_CSD_sensorSignal, %object
  37              		.size	CapSense_CSD_sensorSignal, 26
  38              	CapSense_CSD_sensorSignal:
  39 002c 00000000 		.space	26
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	CapSense_CSD_sensorOnMask
  41 0046 0000     		.align	2
  42              		.type	CapSense_CSD_sensorOnMask, %object
  43              		.size	CapSense_CSD_sensorOnMask, 2
  44              	CapSense_CSD_sensorOnMask:
  45 0048 0000     		.space	2
  46              		.comm	CapSense_CSD_lowBaselineResetCnt,13,4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 2


  47              		.global	CapSense_CSD_lowBaselineReset
  48              		.data
  49              		.align	2
  50              		.type	CapSense_CSD_lowBaselineReset, %object
  51              		.size	CapSense_CSD_lowBaselineReset, 13
  52              	CapSense_CSD_lowBaselineReset:
  53 0000 05       		.byte	5
  54 0001 05       		.byte	5
  55 0002 05       		.byte	5
  56 0003 05       		.byte	5
  57 0004 05       		.byte	5
  58 0005 05       		.byte	5
  59 0006 05       		.byte	5
  60 0007 05       		.byte	5
  61 0008 05       		.byte	5
  62 0009 05       		.byte	5
  63 000a 05       		.byte	5
  64 000b 05       		.byte	5
  65 000c 05       		.byte	5
  66              		.global	CapSense_CSD_enableRawFilters
  67              		.type	CapSense_CSD_enableRawFilters, %object
  68              		.size	CapSense_CSD_enableRawFilters, 1
  69              	CapSense_CSD_enableRawFilters:
  70 000d 01       		.byte	1
  71              		.global	CapSense_CSD_fingerThreshold
  72 000e 0000     		.align	2
  73              		.type	CapSense_CSD_fingerThreshold, %object
  74              		.size	CapSense_CSD_fingerThreshold, 26
  75              	CapSense_CSD_fingerThreshold:
  76 0010 6400     		.short	100
  77 0012 6400     		.short	100
  78 0014 6400     		.short	100
  79 0016 6400     		.short	100
  80 0018 6400     		.short	100
  81 001a 6400     		.short	100
  82 001c 6400     		.short	100
  83 001e 6400     		.short	100
  84 0020 6400     		.short	100
  85 0022 6400     		.short	100
  86 0024 6400     		.short	100
  87 0026 6400     		.short	100
  88 0028 6400     		.short	100
  89              		.global	CapSense_CSD_noiseThreshold
  90 002a 0000     		.align	2
  91              		.type	CapSense_CSD_noiseThreshold, %object
  92              		.size	CapSense_CSD_noiseThreshold, 26
  93              	CapSense_CSD_noiseThreshold:
  94 002c 1400     		.short	20
  95 002e 1400     		.short	20
  96 0030 1400     		.short	20
  97 0032 1400     		.short	20
  98 0034 1400     		.short	20
  99 0036 1400     		.short	20
 100 0038 1400     		.short	20
 101 003a 1400     		.short	20
 102 003c 1400     		.short	20
 103 003e 1400     		.short	20
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 3


 104 0040 1400     		.short	20
 105 0042 1400     		.short	20
 106 0044 1400     		.short	20
 107              		.global	CapSense_CSD_negativeNoiseThreshold
 108 0046 0000     		.align	2
 109              		.type	CapSense_CSD_negativeNoiseThreshold, %object
 110              		.size	CapSense_CSD_negativeNoiseThreshold, 26
 111              	CapSense_CSD_negativeNoiseThreshold:
 112 0048 1400     		.short	20
 113 004a 1400     		.short	20
 114 004c 1400     		.short	20
 115 004e 1400     		.short	20
 116 0050 1400     		.short	20
 117 0052 1400     		.short	20
 118 0054 1400     		.short	20
 119 0056 1400     		.short	20
 120 0058 1400     		.short	20
 121 005a 1400     		.short	20
 122 005c 1400     		.short	20
 123 005e 1400     		.short	20
 124 0060 1400     		.short	20
 125              		.global	CapSense_CSD_hysteresis
 126 0062 0000     		.align	2
 127              		.type	CapSense_CSD_hysteresis, %object
 128              		.size	CapSense_CSD_hysteresis, 26
 129              	CapSense_CSD_hysteresis:
 130 0064 0A00     		.short	10
 131 0066 0A00     		.short	10
 132 0068 0A00     		.short	10
 133 006a 0A00     		.short	10
 134 006c 0A00     		.short	10
 135 006e 0A00     		.short	10
 136 0070 0A00     		.short	10
 137 0072 0A00     		.short	10
 138 0074 0A00     		.short	10
 139 0076 0A00     		.short	10
 140 0078 0A00     		.short	10
 141 007a 0A00     		.short	10
 142 007c 0A00     		.short	10
 143              		.global	CapSense_CSD_debounce
 144 007e 0000     		.align	2
 145              		.type	CapSense_CSD_debounce, %object
 146              		.size	CapSense_CSD_debounce, 13
 147              	CapSense_CSD_debounce:
 148 0080 14       		.byte	20
 149 0081 14       		.byte	20
 150 0082 14       		.byte	20
 151 0083 14       		.byte	20
 152 0084 14       		.byte	20
 153 0085 14       		.byte	20
 154 0086 14       		.byte	20
 155 0087 14       		.byte	20
 156 0088 14       		.byte	20
 157 0089 14       		.byte	20
 158 008a 14       		.byte	20
 159 008b 14       		.byte	20
 160 008c 14       		.byte	20
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 4


 161              		.bss
 162 004a 0000     		.align	2
 163              	CapSense_CSD_debounceCounter:
 164 004c 00000000 		.space	14
 164      00000000 
 164      00000000 
 164      0000
 165              		.global	CapSense_CSD_rawDataIndex
 166              		.section	.rodata
 167              		.align	2
 168              		.type	CapSense_CSD_rawDataIndex, %object
 169              		.size	CapSense_CSD_rawDataIndex, 13
 170              	CapSense_CSD_rawDataIndex:
 171 0000 00       		.byte	0
 172 0001 01       		.byte	1
 173 0002 02       		.byte	2
 174 0003 03       		.byte	3
 175 0004 04       		.byte	4
 176 0005 05       		.byte	5
 177 0006 06       		.byte	6
 178 0007 07       		.byte	7
 179 0008 08       		.byte	8
 180 0009 09       		.byte	9
 181 000a 0A       		.byte	10
 182 000b 0B       		.byte	11
 183 000c 0C       		.byte	12
 184              		.global	CapSense_CSD_numberOfSensors
 185 000d 000000   		.align	2
 186              		.type	CapSense_CSD_numberOfSensors, %object
 187              		.size	CapSense_CSD_numberOfSensors, 13
 188              	CapSense_CSD_numberOfSensors:
 189 0010 01       		.byte	1
 190 0011 01       		.byte	1
 191 0012 01       		.byte	1
 192 0013 01       		.byte	1
 193 0014 01       		.byte	1
 194 0015 01       		.byte	1
 195 0016 01       		.byte	1
 196 0017 01       		.byte	1
 197 0018 01       		.byte	1
 198 0019 01       		.byte	1
 199 001a 01       		.byte	1
 200 001b 01       		.byte	1
 201 001c 01       		.byte	1
 202              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 203              		.align	2
 204              		.global	CapSense_CSD_BaseInit
 205              		.code	16
 206              		.thumb_func
 207              		.type	CapSense_CSD_BaseInit, %function
 208              	CapSense_CSD_BaseInit:
 209              	.LFB32:
 210              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 5


   5:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  60:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 6


  62:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_60 CapSense_CSD_config;
  66:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_fingerThreshold[] = {
  74:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 100u, 
  75:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  76:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_noiseThreshold[] = {
  78:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 
  79:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  80:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_negativeNoiseThreshold[] = {
  82:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 
  83:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_hysteresis[] = {
  86:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 
  87:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  90:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 20u, 
  91:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_debounceCounter[] = {
  94:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  95:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  98:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  99:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
 100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2u, /* Button2__BTN */
 101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     3u, /* Button3__BTN */
 102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     4u, /* Button4__BTN */
 103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     5u, /* Button5__BTN */
 104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     6u, /* Button6__BTN */
 105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     7u, /* Button7__BTN */
 106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     8u, /* Button8__BTN */
 107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     9u, /* Button9__BTN */
 108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     10u, /* Button10__BTN */
 109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     11u, /* Button11__BTN */
 110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     12u, /* Button12__BTN */
 111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
 114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
 115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
 116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button2__BTN */
 117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button3__BTN */
 118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button4__BTN */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 7


 119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button5__BTN */
 120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button6__BTN */
 121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button7__BTN */
 122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button8__BTN */
 123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button9__BTN */
 124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button10__BTN */
 125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button11__BTN */
 126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* Button12__BTN */
 127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 211              		.loc 1 167 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 16
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 8


 219 0002 84B0     		sub	sp, sp, #16
 220              		.cfi_def_cfa_offset 24
 221 0004 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
 223 0006 7860     		str	r0, [r7, #4]
 168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 224              		.loc 1 170 0
 225 0008 0F23     		movs	r3, #15
 226 000a FB18     		adds	r3, r7, r3
 227 000c 1A49     		ldr	r1, .L2
 228 000e 7A68     		ldr	r2, [r7, #4]
 229 0010 8A18     		adds	r2, r1, r2
 230 0012 1278     		ldrb	r2, [r2]
 231 0014 1A70     		strb	r2, [r3]
 171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 232              		.loc 1 184 0
 233 0016 194B     		ldr	r3, .L2+4
 234 0018 7A68     		ldr	r2, [r7, #4]
 235 001a 5200     		lsls	r2, r2, #1
 236 001c D15A     		ldrh	r1, [r2, r3]
 237 001e 184B     		ldr	r3, .L2+8
 238 0020 7A68     		ldr	r2, [r7, #4]
 239 0022 5200     		lsls	r2, r2, #1
 240 0024 D152     		strh	r1, [r2, r3]
 185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 241              		.loc 1 185 0
 242 0026 174A     		ldr	r2, .L2+12
 243 0028 7B68     		ldr	r3, [r7, #4]
 244 002a D318     		adds	r3, r2, r3
 245 002c 0022     		movs	r2, #0
 246 002e 1A70     		strb	r2, [r3]
 186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 247              		.loc 1 186 0
 248 0030 154B     		ldr	r3, .L2+16
 249 0032 7A68     		ldr	r2, [r7, #4]
 250 0034 5200     		lsls	r2, r2, #1
 251 0036 0021     		movs	r1, #0
 252 0038 D152     		strh	r1, [r2, r3]
 187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 253              		.loc 1 188 0
 254 003a 0F23     		movs	r3, #15
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 9


 255 003c FB18     		adds	r3, r7, r3
 256 003e 1B78     		ldrb	r3, [r3]
 257 0040 0F22     		movs	r2, #15
 258 0042 BA18     		adds	r2, r7, r2
 259 0044 1278     		ldrb	r2, [r2]
 260 0046 1149     		ldr	r1, .L2+20
 261 0048 895C     		ldrb	r1, [r1, r2]
 262 004a 114A     		ldr	r2, .L2+24
 263 004c D154     		strb	r1, [r2, r3]
 189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 264              		.loc 1 194 0
 265 004e 0B4B     		ldr	r3, .L2+4
 266 0050 7A68     		ldr	r2, [r7, #4]
 267 0052 5200     		lsls	r2, r2, #1
 268 0054 D15A     		ldrh	r1, [r2, r3]
 269 0056 0F4B     		ldr	r3, .L2+28
 270 0058 7A68     		ldr	r2, [r7, #4]
 271 005a 5200     		lsls	r2, r2, #1
 272 005c D152     		strh	r1, [r2, r3]
 195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 273              		.loc 1 195 0
 274 005e 074B     		ldr	r3, .L2+4
 275 0060 7A68     		ldr	r2, [r7, #4]
 276 0062 5200     		lsls	r2, r2, #1
 277 0064 D15A     		ldrh	r1, [r2, r3]
 278 0066 0C4B     		ldr	r3, .L2+32
 279 0068 7A68     		ldr	r2, [r7, #4]
 280 006a 5200     		lsls	r2, r2, #1
 281 006c D152     		strh	r1, [r2, r3]
 196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 282              		.loc 1 215 0
 283 006e C046     		nop
 284 0070 BD46     		mov	sp, r7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 10


 285 0072 04B0     		add	sp, sp, #16
 286              		@ sp needed
 287 0074 80BD     		pop	{r7, pc}
 288              	.L3:
 289 0076 C046     		.align	2
 290              	.L2:
 291 0078 00000000 		.word	CapSense_CSD_widgetNumber
 292 007c 00000000 		.word	CapSense_CSD_sensorRaw
 293 0080 00000000 		.word	CapSense_CSD_sensorBaseline
 294 0084 00000000 		.word	CapSense_CSD_sensorBaselineLow
 295 0088 00000000 		.word	CapSense_CSD_sensorSignal
 296 008c 00000000 		.word	CapSense_CSD_debounce
 297 0090 4C000000 		.word	CapSense_CSD_debounceCounter
 298 0094 00000000 		.word	CapSense_CSD_rawFilterData1
 299 0098 00000000 		.word	CapSense_CSD_rawFilterData2
 300              		.cfi_endproc
 301              	.LFE32:
 302              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 303              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 304              		.align	2
 305              		.global	CapSense_CSD_InitializeSensorBaseline
 306              		.code	16
 307              		.thumb_func
 308              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 309              	CapSense_CSD_InitializeSensorBaseline:
 310              	.LFB33:
 216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 311              		.loc 1 243 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 11


 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 82B0     		sub	sp, sp, #8
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
 244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 324              		.loc 1 245 0
 325 0008 7B68     		ldr	r3, [r7, #4]
 326 000a 1800     		movs	r0, r3
 327 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 328              		.loc 1 246 0
 329 0010 C046     		nop
 330              	.L5:
 331              		.loc 1 246 0 is_stmt 0 discriminator 1
 332 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 333 0016 031E     		subs	r3, r0, #0
 334 0018 FBD1     		bne	.L5
 247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 335              		.loc 1 252 0 is_stmt 1
 336 001a 7B68     		ldr	r3, [r7, #4]
 337 001c 1800     		movs	r0, r3
 338 001e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 339              		.loc 1 253 0
 340 0022 C046     		nop
 341 0024 BD46     		mov	sp, r7
 342 0026 02B0     		add	sp, sp, #8
 343              		@ sp needed
 344 0028 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE33:
 347              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 348 002a C046     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 349              		.align	2
 350              		.global	CapSense_CSD_InitializeAllBaselines
 351              		.code	16
 352              		.thumb_func
 353              		.type	CapSense_CSD_InitializeAllBaselines, %function
 354              	CapSense_CSD_InitializeAllBaselines:
 355              	.LFB34:
 254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 12


 259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 356              		.loc 1 280 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 368              		.loc 1 283 0
 369 0006 0023     		movs	r3, #0
 370 0008 7B60     		str	r3, [r7, #4]
 371 000a 06E0     		b	.L7
 372              	.L8:
 284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 373              		.loc 1 285 0 discriminator 3
 374 000c 7B68     		ldr	r3, [r7, #4]
 375 000e 1800     		movs	r0, r3
 376 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 377              		.loc 1 283 0 discriminator 3
 378 0014 7B68     		ldr	r3, [r7, #4]
 379 0016 0133     		adds	r3, r3, #1
 380 0018 7B60     		str	r3, [r7, #4]
 381              	.L7:
 283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 382              		.loc 1 283 0 is_stmt 0 discriminator 1
 383 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 13


 384 001c 0C2B     		cmp	r3, #12
 385 001e F5D9     		bls	.L8
 286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 386              		.loc 1 287 0 is_stmt 1
 387 0020 C046     		nop
 388 0022 BD46     		mov	sp, r7
 389 0024 02B0     		add	sp, sp, #8
 390              		@ sp needed
 391 0026 80BD     		pop	{r7, pc}
 392              		.cfi_endproc
 393              	.LFE34:
 394              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 395              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 396              		.align	2
 397              		.global	CapSense_CSD_InitializeEnabledBaselines
 398              		.code	16
 399              		.thumb_func
 400              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 401              	CapSense_CSD_InitializeEnabledBaselines:
 402              	.LFB35:
 288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 403              		.loc 1 315 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 8
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407 0000 80B5     		push	{r7, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 14


 411 0002 82B0     		sub	sp, sp, #8
 412              		.cfi_def_cfa_offset 16
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 415              		.loc 1 319 0
 416 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 417              		.loc 1 320 0
 418 000a C046     		nop
 419              	.L10:
 420              		.loc 1 320 0 is_stmt 0 discriminator 1
 421 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 422 0010 031E     		subs	r3, r0, #0
 423 0012 FBD1     		bne	.L10
 321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 424              		.loc 1 325 0 is_stmt 1
 425 0014 0023     		movs	r3, #0
 426 0016 7B60     		str	r3, [r7, #4]
 427 0018 11E0     		b	.L11
 428              	.L13:
 326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 429              		.loc 1 327 0
 430 001a 7A68     		ldr	r2, [r7, #4]
 431 001c 0B4B     		ldr	r3, .L14
 432 001e 1100     		movs	r1, r2
 433 0020 1800     		movs	r0, r3
 434 0022 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 435 0026 0300     		movs	r3, r0
 436 0028 3B60     		str	r3, [r7]
 328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 437              		.loc 1 330 0
 438 002a 3B68     		ldr	r3, [r7]
 439 002c 002B     		cmp	r3, #0
 440 002e 03D0     		beq	.L12
 331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 441              		.loc 1 333 0
 442 0030 7B68     		ldr	r3, [r7, #4]
 443 0032 1800     		movs	r0, r3
 444 0034 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 445              	.L12:
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 446              		.loc 1 325 0 discriminator 2
 447 0038 7B68     		ldr	r3, [r7, #4]
 448 003a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 15


 449 003c 7B60     		str	r3, [r7, #4]
 450              	.L11:
 325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 451              		.loc 1 325 0 is_stmt 0 discriminator 1
 452 003e 7B68     		ldr	r3, [r7, #4]
 453 0040 0C2B     		cmp	r3, #12
 454 0042 EAD9     		bls	.L13
 334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 455              		.loc 1 336 0 is_stmt 1
 456 0044 C046     		nop
 457 0046 BD46     		mov	sp, r7
 458 0048 02B0     		add	sp, sp, #8
 459              		@ sp needed
 460 004a 80BD     		pop	{r7, pc}
 461              	.L15:
 462              		.align	2
 463              	.L14:
 464 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 465              		.cfi_endproc
 466              	.LFE35:
 467              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 468              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 469              		.align	2
 470              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 471              		.code	16
 472              		.thumb_func
 473              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 474              	CapSense_CSD_UpdateBaselineNoThreshold:
 475              	.LFB36:
 337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 16


 363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
 367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 476              		.loc 1 380 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 24
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480 0000 90B5     		push	{r4, r7, lr}
 481              		.cfi_def_cfa_offset 12
 482              		.cfi_offset 4, -12
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 87B0     		sub	sp, sp, #28
 486              		.cfi_def_cfa_offset 40
 487 0004 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 489 0006 7860     		str	r0, [r7, #4]
 381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 490              		.loc 1 385 0
 491 0008 0F23     		movs	r3, #15
 492 000a FB18     		adds	r3, r7, r3
 493 000c 7049     		ldr	r1, .L26
 494 000e 7A68     		ldr	r2, [r7, #4]
 495 0010 8A18     		adds	r2, r1, r2
 496 0012 1278     		ldrb	r2, [r2]
 497 0014 1A70     		strb	r2, [r3]
 386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold;
 387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 498              		.loc 1 394 0
 499 0016 0F23     		movs	r3, #15
 500 0018 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 17


 501 001a 1978     		ldrb	r1, [r3]
 502 001c 0C23     		movs	r3, #12
 503 001e FB18     		adds	r3, r7, r3
 504 0020 6C4A     		ldr	r2, .L26+4
 505 0022 4900     		lsls	r1, r1, #1
 506 0024 8A5A     		ldrh	r2, [r1, r2]
 507 0026 1A80     		strh	r2, [r3]
 395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 508              		.loc 1 395 0
 509 0028 1023     		movs	r3, #16
 510 002a FB18     		adds	r3, r7, r3
 511 002c 6A4A     		ldr	r2, .L26+8
 512 002e 7968     		ldr	r1, [r7, #4]
 513 0030 4900     		lsls	r1, r1, #1
 514 0032 8A5A     		ldrh	r2, [r1, r2]
 515 0034 1A80     		strh	r2, [r3]
 396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 516              		.loc 1 398 0
 517 0036 694B     		ldr	r3, .L26+12
 518 0038 1B78     		ldrb	r3, [r3]
 519 003a 002B     		cmp	r3, #0
 520 003c 26D0     		beq	.L17
 399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 521              		.loc 1 401 0
 522 003e 1223     		movs	r3, #18
 523 0040 FB18     		adds	r3, r7, r3
 524 0042 1022     		movs	r2, #16
 525 0044 BA18     		adds	r2, r7, r2
 526 0046 1288     		ldrh	r2, [r2]
 527 0048 1A80     		strh	r2, [r3]
 402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 528              		.loc 1 402 0
 529 004a 654B     		ldr	r3, .L26+16
 530 004c 7A68     		ldr	r2, [r7, #4]
 531 004e 5200     		lsls	r2, r2, #1
 532 0050 D15A     		ldrh	r1, [r2, r3]
 533 0052 644B     		ldr	r3, .L26+20
 534 0054 7A68     		ldr	r2, [r7, #4]
 535 0056 5200     		lsls	r2, r2, #1
 536 0058 D25A     		ldrh	r2, [r2, r3]
 537 005a 1023     		movs	r3, #16
 538 005c FC18     		adds	r4, r7, r3
 539 005e 1023     		movs	r3, #16
 540 0060 FB18     		adds	r3, r7, r3
 541 0062 1B88     		ldrh	r3, [r3]
 542 0064 1800     		movs	r0, r3
 543 0066 FFF7FEFF 		bl	CapSense_CSD_MedianFilter
 544 006a 0300     		movs	r3, r0
 545 006c 2380     		strh	r3, [r4]
 403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 546              		.loc 1 404 0
 547 006e 5C4B     		ldr	r3, .L26+16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 18


 548 0070 7A68     		ldr	r2, [r7, #4]
 549 0072 5200     		lsls	r2, r2, #1
 550 0074 D15A     		ldrh	r1, [r2, r3]
 551 0076 5B4B     		ldr	r3, .L26+20
 552 0078 7A68     		ldr	r2, [r7, #4]
 553 007a 5200     		lsls	r2, r2, #1
 554 007c D152     		strh	r1, [r2, r3]
 405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 555              		.loc 1 405 0
 556 007e 584B     		ldr	r3, .L26+16
 557 0080 7A68     		ldr	r2, [r7, #4]
 558 0082 5200     		lsls	r2, r2, #1
 559 0084 1221     		movs	r1, #18
 560 0086 7918     		adds	r1, r7, r1
 561 0088 0988     		ldrh	r1, [r1]
 562 008a D152     		strh	r1, [r2, r3]
 563              	.L17:
 406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
 424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 19


 446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 564              		.loc 1 446 0
 565 008c 564B     		ldr	r3, .L26+24
 566 008e 7A68     		ldr	r2, [r7, #4]
 567 0090 5200     		lsls	r2, r2, #1
 568 0092 D35A     		ldrh	r3, [r2, r3]
 569 0094 1022     		movs	r2, #16
 570 0096 BA18     		adds	r2, r7, r2
 571 0098 1288     		ldrh	r2, [r2]
 572 009a 9A42     		cmp	r2, r3
 573 009c 12D3     		bcc	.L18
 447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 574              		.loc 1 448 0
 575 009e 534A     		ldr	r2, .L26+28
 576 00a0 7B68     		ldr	r3, [r7, #4]
 577 00a2 D318     		adds	r3, r2, r3
 578 00a4 0022     		movs	r2, #0
 579 00a6 1A70     		strb	r2, [r3]
 449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 580              		.loc 1 449 0
 581 00a8 4F4B     		ldr	r3, .L26+24
 582 00aa 7A68     		ldr	r2, [r7, #4]
 583 00ac 5200     		lsls	r2, r2, #1
 584 00ae D25A     		ldrh	r2, [r2, r3]
 585 00b0 1223     		movs	r3, #18
 586 00b2 FB18     		adds	r3, r7, r3
 587 00b4 1021     		movs	r1, #16
 588 00b6 7918     		adds	r1, r7, r1
 589 00b8 0988     		ldrh	r1, [r1]
 590 00ba 8A1A     		subs	r2, r1, r2
 591 00bc 1A80     		strh	r2, [r3]
 450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 592              		.loc 1 450 0
 593 00be 0123     		movs	r3, #1
 594 00c0 7B61     		str	r3, [r7, #20]
 595 00c2 0CE0     		b	.L19
 596              	.L18:
 451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 597              		.loc 1 454 0
 598 00c4 484B     		ldr	r3, .L26+24
 599 00c6 7A68     		ldr	r2, [r7, #4]
 600 00c8 5200     		lsls	r2, r2, #1
 601 00ca D15A     		ldrh	r1, [r2, r3]
 602 00cc 1223     		movs	r3, #18
 603 00ce FB18     		adds	r3, r7, r3
 604 00d0 1022     		movs	r2, #16
 605 00d2 BA18     		adds	r2, r7, r2
 606 00d4 1288     		ldrh	r2, [r2]
 607 00d6 8A1A     		subs	r2, r1, r2
 608 00d8 1A80     		strh	r2, [r3]
 455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 609              		.loc 1 455 0
 610 00da 0023     		movs	r3, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 20


 611 00dc 7B61     		str	r3, [r7, #20]
 612              	.L19:
 456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 613              		.loc 1 459 0
 614 00de 7B69     		ldr	r3, [r7, #20]
 615 00e0 002B     		cmp	r3, #0
 616 00e2 2AD1     		bne	.L20
 617              		.loc 1 459 0 is_stmt 0 discriminator 1
 618 00e4 0F23     		movs	r3, #15
 619 00e6 FB18     		adds	r3, r7, r3
 620 00e8 1A78     		ldrb	r2, [r3]
 621 00ea 414B     		ldr	r3, .L26+32
 622 00ec 5200     		lsls	r2, r2, #1
 623 00ee D35A     		ldrh	r3, [r2, r3]
 624 00f0 1222     		movs	r2, #18
 625 00f2 BA18     		adds	r2, r7, r2
 626 00f4 1288     		ldrh	r2, [r2]
 627 00f6 9A42     		cmp	r2, r3
 628 00f8 1FD9     		bls	.L20
 460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 629              		.loc 1 464 0 is_stmt 1
 630 00fa 3C4A     		ldr	r2, .L26+28
 631 00fc 7B68     		ldr	r3, [r7, #4]
 632 00fe D318     		adds	r3, r2, r3
 633 0100 1A78     		ldrb	r2, [r3]
 634 0102 3C49     		ldr	r1, .L26+36
 635 0104 7B68     		ldr	r3, [r7, #4]
 636 0106 CB18     		adds	r3, r1, r3
 637 0108 1B78     		ldrb	r3, [r3]
 638 010a 9A42     		cmp	r2, r3
 639 010c 09D3     		bcc	.L21
 465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 640              		.loc 1 466 0
 641 010e 7B68     		ldr	r3, [r7, #4]
 642 0110 1800     		movs	r0, r3
 643 0112 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 644              		.loc 1 467 0
 645 0116 354A     		ldr	r2, .L26+28
 646 0118 7B68     		ldr	r3, [r7, #4]
 647 011a D318     		adds	r3, r2, r3
 648 011c 0022     		movs	r2, #0
 649 011e 1A70     		strb	r2, [r3]
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 650              		.loc 1 464 0
 651 0120 3AE0     		b	.L23
 652              	.L21:
 468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 21


 470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 653              		.loc 1 471 0
 654 0122 324A     		ldr	r2, .L26+28
 655 0124 7B68     		ldr	r3, [r7, #4]
 656 0126 D318     		adds	r3, r2, r3
 657 0128 1B78     		ldrb	r3, [r3]
 658 012a 0133     		adds	r3, r3, #1
 659 012c D9B2     		uxtb	r1, r3
 660 012e 2F4A     		ldr	r2, .L26+28
 661 0130 7B68     		ldr	r3, [r7, #4]
 662 0132 D318     		adds	r3, r2, r3
 663 0134 0A1C     		adds	r2, r1, #0
 664 0136 1A70     		strb	r2, [r3]
 464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 665              		.loc 1 464 0
 666 0138 2EE0     		b	.L23
 667              	.L20:
 472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 668              		.loc 1 492 0
 669 013a 2B4B     		ldr	r3, .L26+24
 670 013c 7A68     		ldr	r2, [r7, #4]
 671 013e 5200     		lsls	r2, r2, #1
 672 0140 D35A     		ldrh	r3, [r2, r3]
 673 0142 1B02     		lsls	r3, r3, #8
 674 0144 BB60     		str	r3, [r7, #8]
 493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 675              		.loc 1 493 0
 676 0146 2C4A     		ldr	r2, .L26+40
 677 0148 7B68     		ldr	r3, [r7, #4]
 678 014a D318     		adds	r3, r2, r3
 679 014c 1B78     		ldrb	r3, [r3]
 680 014e 1A00     		movs	r2, r3
 681 0150 BB68     		ldr	r3, [r7, #8]
 682 0152 1343     		orrs	r3, r2
 683 0154 BB60     		str	r3, [r7, #8]
 494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 22


 495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 684              		.loc 1 496 0
 685 0156 1023     		movs	r3, #16
 686 0158 FB18     		adds	r3, r7, r3
 687 015a 1B88     		ldrh	r3, [r3]
 688 015c BA68     		ldr	r2, [r7, #8]
 689 015e D318     		adds	r3, r2, r3
 690 0160 BB60     		str	r3, [r7, #8]
 497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 691              		.loc 1 499 0
 692 0162 214B     		ldr	r3, .L26+24
 693 0164 7A68     		ldr	r2, [r7, #4]
 694 0166 5200     		lsls	r2, r2, #1
 695 0168 D35A     		ldrh	r3, [r2, r3]
 696 016a 1A00     		movs	r2, r3
 697 016c BB68     		ldr	r3, [r7, #8]
 698 016e 9B1A     		subs	r3, r3, r2
 699 0170 BB60     		str	r3, [r7, #8]
 500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 700              		.loc 1 502 0
 701 0172 BB68     		ldr	r3, [r7, #8]
 702 0174 1B0A     		lsrs	r3, r3, #8
 703 0176 99B2     		uxth	r1, r3
 704 0178 1B4B     		ldr	r3, .L26+24
 705 017a 7A68     		ldr	r2, [r7, #4]
 706 017c 5200     		lsls	r2, r2, #1
 707 017e D152     		strh	r1, [r2, r3]
 503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 708              		.loc 1 503 0
 709 0180 BB68     		ldr	r3, [r7, #8]
 710 0182 D9B2     		uxtb	r1, r3
 711 0184 1C4A     		ldr	r2, .L26+40
 712 0186 7B68     		ldr	r3, [r7, #4]
 713 0188 D318     		adds	r3, r2, r3
 714 018a 0A1C     		adds	r2, r1, #0
 715 018c 1A70     		strb	r2, [r3]
 504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 716              		.loc 1 505 0
 717 018e 174A     		ldr	r2, .L26+28
 718 0190 7B68     		ldr	r3, [r7, #4]
 719 0192 D318     		adds	r3, r2, r3
 720 0194 0022     		movs	r2, #0
 721 0196 1A70     		strb	r2, [r3]
 722              	.L23:
 506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 23


 723              		.loc 1 512 0
 724 0198 1223     		movs	r3, #18
 725 019a FA18     		adds	r2, r7, r3
 726 019c 0C23     		movs	r3, #12
 727 019e FB18     		adds	r3, r7, r3
 728 01a0 1288     		ldrh	r2, [r2]
 729 01a2 1B88     		ldrh	r3, [r3]
 730 01a4 9A42     		cmp	r2, r3
 731 01a6 0AD9     		bls	.L24
 732              		.loc 1 512 0 is_stmt 0 discriminator 1
 733 01a8 7B69     		ldr	r3, [r7, #20]
 734 01aa 002B     		cmp	r3, #0
 735 01ac 07D0     		beq	.L24
 513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
 521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 736              		.loc 1 525 0 is_stmt 1
 737 01ae 134B     		ldr	r3, .L26+44
 738 01b0 7A68     		ldr	r2, [r7, #4]
 739 01b2 5200     		lsls	r2, r2, #1
 740 01b4 1221     		movs	r1, #18
 741 01b6 7918     		adds	r1, r7, r1
 742 01b8 0988     		ldrh	r1, [r1]
 743 01ba D152     		strh	r1, [r2, r3]
 744 01bc 04E0     		b	.L25
 745              	.L24:
 526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 746              		.loc 1 531 0
 747 01be 0F4B     		ldr	r3, .L26+44
 748 01c0 7A68     		ldr	r2, [r7, #4]
 749 01c2 5200     		lsls	r2, r2, #1
 750 01c4 0021     		movs	r1, #0
 751 01c6 D152     		strh	r1, [r2, r3]
 752              	.L25:
 532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 753              		.loc 1 538 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 24


 754 01c8 C046     		nop
 755 01ca BD46     		mov	sp, r7
 756 01cc 07B0     		add	sp, sp, #28
 757              		@ sp needed
 758 01ce 90BD     		pop	{r4, r7, pc}
 759              	.L27:
 760              		.align	2
 761              	.L26:
 762 01d0 00000000 		.word	CapSense_CSD_widgetNumber
 763 01d4 00000000 		.word	CapSense_CSD_noiseThreshold
 764 01d8 00000000 		.word	CapSense_CSD_sensorRaw
 765 01dc 00000000 		.word	CapSense_CSD_enableRawFilters
 766 01e0 00000000 		.word	CapSense_CSD_rawFilterData1
 767 01e4 00000000 		.word	CapSense_CSD_rawFilterData2
 768 01e8 00000000 		.word	CapSense_CSD_sensorBaseline
 769 01ec 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 770 01f0 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 771 01f4 00000000 		.word	CapSense_CSD_lowBaselineReset
 772 01f8 00000000 		.word	CapSense_CSD_sensorBaselineLow
 773 01fc 00000000 		.word	CapSense_CSD_sensorSignal
 774              		.cfi_endproc
 775              	.LFE36:
 776              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 777              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 778              		.align	2
 779              		.global	CapSense_CSD_UpdateSensorBaseline
 780              		.code	16
 781              		.thumb_func
 782              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 783              	CapSense_CSD_UpdateSensorBaseline:
 784              	.LFB37:
 539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 25


 565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 785              		.loc 1 572 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 8
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789 0000 80B5     		push	{r7, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 82B0     		sub	sp, sp, #8
 794              		.cfi_def_cfa_offset 16
 795 0004 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
 797 0006 7860     		str	r0, [r7, #4]
 573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 798              		.loc 1 587 0
 799 0008 7B68     		ldr	r3, [r7, #4]
 800 000a 1800     		movs	r0, r3
 801 000c FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 802              		.loc 1 593 0
 803 0010 C046     		nop
 804 0012 BD46     		mov	sp, r7
 805 0014 02B0     		add	sp, sp, #8
 806              		@ sp needed
 807 0016 80BD     		pop	{r7, pc}
 808              		.cfi_endproc
 809              	.LFE37:
 810              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 811              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 812              		.align	2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 26


 813              		.global	CapSense_CSD_UpdateEnabledBaselines
 814              		.code	16
 815              		.thumb_func
 816              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 817              	CapSense_CSD_UpdateEnabledBaselines:
 818              	.LFB38:
 594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 819              		.loc 1 626 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 82B0     		sub	sp, sp, #8
 828              		.cfi_def_cfa_offset 16
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 831              		.loc 1 630 0
 832 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 27


 833 0008 7B60     		str	r3, [r7, #4]
 834 000a 11E0     		b	.L30
 835              	.L32:
 631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 836              		.loc 1 632 0
 837 000c 7A68     		ldr	r2, [r7, #4]
 838 000e 0C4B     		ldr	r3, .L33
 839 0010 1100     		movs	r1, r2
 840 0012 1800     		movs	r0, r3
 841 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 842 0018 0300     		movs	r3, r0
 843 001a 3B60     		str	r3, [r7]
 633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 844              		.loc 1 634 0
 845 001c 3B68     		ldr	r3, [r7]
 846 001e 002B     		cmp	r3, #0
 847 0020 03D0     		beq	.L31
 635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 848              		.loc 1 636 0
 849 0022 7B68     		ldr	r3, [r7, #4]
 850 0024 1800     		movs	r0, r3
 851 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 852              	.L31:
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 853              		.loc 1 630 0 discriminator 2
 854 002a 7B68     		ldr	r3, [r7, #4]
 855 002c 0133     		adds	r3, r3, #1
 856 002e 7B60     		str	r3, [r7, #4]
 857              	.L30:
 630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 858              		.loc 1 630 0 is_stmt 0 discriminator 1
 859 0030 7B68     		ldr	r3, [r7, #4]
 860 0032 0C2B     		cmp	r3, #12
 861 0034 EAD9     		bls	.L32
 637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 862              		.loc 1 639 0 is_stmt 1
 863 0036 C046     		nop
 864 0038 BD46     		mov	sp, r7
 865 003a 02B0     		add	sp, sp, #8
 866              		@ sp needed
 867 003c 80BD     		pop	{r7, pc}
 868              	.L34:
 869 003e C046     		.align	2
 870              	.L33:
 871 0040 00000000 		.word	CapSense_CSD_sensorEnableMask
 872              		.cfi_endproc
 873              	.LFE38:
 874              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 875              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_CSD_UpdateWidgetBaseline
 878              		.code	16
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 28


 879              		.thumb_func
 880              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 881              	CapSense_CSD_UpdateWidgetBaseline:
 882              	.LFB39:
 640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 883              		.loc 1 671 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 32
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 88B0     		sub	sp, sp, #32
 892              		.cfi_def_cfa_offset 40
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 29


 896              		.loc 1 679 0
 897 0008 174A     		ldr	r2, .L39
 898 000a 7B68     		ldr	r3, [r7, #4]
 899 000c D318     		adds	r3, r2, r3
 900 000e 1B78     		ldrb	r3, [r3]
 901 0010 BB61     		str	r3, [r7, #24]
 680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 902              		.loc 1 682 0
 903 0012 164A     		ldr	r2, .L39+4
 904 0014 7B68     		ldr	r3, [r7, #4]
 905 0016 D318     		adds	r3, r2, r3
 906 0018 1B78     		ldrb	r3, [r3]
 907 001a 7B61     		str	r3, [r7, #20]
 683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
 685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 908              		.loc 1 685 0
 909 001c 134A     		ldr	r2, .L39+4
 910 001e 7B68     		ldr	r3, [r7, #4]
 911 0020 D318     		adds	r3, r2, r3
 912 0022 1B78     		ldrb	r3, [r3]
 913 0024 1A00     		movs	r2, r3
 914 0026 BB69     		ldr	r3, [r7, #24]
 915 0028 D318     		adds	r3, r2, r3
 916 002a 3B61     		str	r3, [r7, #16]
 686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 917              		.loc 1 687 0
 918 002c 7B69     		ldr	r3, [r7, #20]
 919 002e FB61     		str	r3, [r7, #28]
 920 0030 11E0     		b	.L36
 921              	.L38:
 688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 922              		.loc 1 689 0
 923 0032 FA69     		ldr	r2, [r7, #28]
 924 0034 0E4B     		ldr	r3, .L39+8
 925 0036 1100     		movs	r1, r2
 926 0038 1800     		movs	r0, r3
 927 003a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 928 003e 0300     		movs	r3, r0
 929 0040 FB60     		str	r3, [r7, #12]
 690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 930              		.loc 1 691 0
 931 0042 FB68     		ldr	r3, [r7, #12]
 932 0044 002B     		cmp	r3, #0
 933 0046 03D0     		beq	.L37
 692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 934              		.loc 1 693 0
 935 0048 FB69     		ldr	r3, [r7, #28]
 936 004a 1800     		movs	r0, r3
 937 004c FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 938              	.L37:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 30


 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 939              		.loc 1 687 0 discriminator 2
 940 0050 FB69     		ldr	r3, [r7, #28]
 941 0052 0133     		adds	r3, r3, #1
 942 0054 FB61     		str	r3, [r7, #28]
 943              	.L36:
 687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 944              		.loc 1 687 0 is_stmt 0 discriminator 1
 945 0056 FA69     		ldr	r2, [r7, #28]
 946 0058 3B69     		ldr	r3, [r7, #16]
 947 005a 9A42     		cmp	r2, r3
 948 005c E9D3     		bcc	.L38
 694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 949              		.loc 1 696 0 is_stmt 1
 950 005e C046     		nop
 951 0060 BD46     		mov	sp, r7
 952 0062 08B0     		add	sp, sp, #32
 953              		@ sp needed
 954 0064 80BD     		pop	{r7, pc}
 955              	.L40:
 956 0066 C046     		.align	2
 957              	.L39:
 958 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 959 006c 00000000 		.word	CapSense_CSD_rawDataIndex
 960 0070 00000000 		.word	CapSense_CSD_sensorEnableMask
 961              		.cfi_endproc
 962              	.LFE39:
 963              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 964              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 965              		.align	2
 966              		.global	CapSense_CSD_GetBaselineData
 967              		.code	16
 968              		.thumb_func
 969              		.type	CapSense_CSD_GetBaselineData, %function
 970              	CapSense_CSD_GetBaselineData:
 971              	.LFB40:
 697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 31


 716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 972              		.loc 1 720 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 8
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 82B0     		sub	sp, sp, #8
 981              		.cfi_def_cfa_offset 16
 982 0004 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 984 0006 7860     		str	r0, [r7, #4]
 721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 985              		.loc 1 721 0
 986 0008 034B     		ldr	r3, .L43
 987 000a 7A68     		ldr	r2, [r7, #4]
 988 000c 5200     		lsls	r2, r2, #1
 989 000e D35A     		ldrh	r3, [r2, r3]
 722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 990              		.loc 1 722 0
 991 0010 1800     		movs	r0, r3
 992 0012 BD46     		mov	sp, r7
 993 0014 02B0     		add	sp, sp, #8
 994              		@ sp needed
 995 0016 80BD     		pop	{r7, pc}
 996              	.L44:
 997              		.align	2
 998              	.L43:
 999 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 1000              		.cfi_endproc
 1001              	.LFE40:
 1002              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 1003              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 1004              		.align	2
 1005              		.global	CapSense_CSD_SetBaselineData
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	CapSense_CSD_SetBaselineData, %function
 1009              	CapSense_CSD_SetBaselineData:
 1010              	.LFB41:
 723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 32


 734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1011              		.loc 1 747 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 8
 1014              		@ frame_needed = 1, uses_anonymous_args = 0
 1015 0000 80B5     		push	{r7, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 82B0     		sub	sp, sp, #8
 1020              		.cfi_def_cfa_offset 16
 1021 0004 00AF     		add	r7, sp, #0
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 1024 0008 0A00     		movs	r2, r1
 1025 000a BB1C     		adds	r3, r7, #2
 1026 000c 1A80     		strh	r2, [r3]
 748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 1027              		.loc 1 748 0
 1028 000e 054B     		ldr	r3, .L46
 1029 0010 7A68     		ldr	r2, [r7, #4]
 1030 0012 5200     		lsls	r2, r2, #1
 1031 0014 B91C     		adds	r1, r7, #2
 1032 0016 0988     		ldrh	r1, [r1]
 1033 0018 D152     		strh	r1, [r2, r3]
 749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1034              		.loc 1 749 0
 1035 001a C046     		nop
 1036 001c BD46     		mov	sp, r7
 1037 001e 02B0     		add	sp, sp, #8
 1038              		@ sp needed
 1039 0020 80BD     		pop	{r7, pc}
 1040              	.L47:
 1041 0022 C046     		.align	2
 1042              	.L46:
 1043 0024 00000000 		.word	CapSense_CSD_sensorBaseline
 1044              		.cfi_endproc
 1045              	.LFE41:
 1046              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 1047              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 1048              		.align	2
 1049              		.global	CapSense_CSD_GetDiffCountData
 1050              		.code	16
 1051              		.thumb_func
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 33


 1052              		.type	CapSense_CSD_GetDiffCountData, %function
 1053              	CapSense_CSD_GetDiffCountData:
 1054              	.LFB42:
 750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
 765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetDiffCountData(uint32 sensor)
 774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1055              		.loc 1 774 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 8
 1058              		@ frame_needed = 1, uses_anonymous_args = 0
 1059 0000 80B5     		push	{r7, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
 1063 0002 82B0     		sub	sp, sp, #8
 1064              		.cfi_def_cfa_offset 16
 1065 0004 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
 1068              		.loc 1 775 0
 1069 0008 034B     		ldr	r3, .L50
 1070 000a 7A68     		ldr	r2, [r7, #4]
 1071 000c 5200     		lsls	r2, r2, #1
 1072 000e D35A     		ldrh	r3, [r2, r3]
 776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1073              		.loc 1 776 0
 1074 0010 1800     		movs	r0, r3
 1075 0012 BD46     		mov	sp, r7
 1076 0014 02B0     		add	sp, sp, #8
 1077              		@ sp needed
 1078 0016 80BD     		pop	{r7, pc}
 1079              	.L51:
 1080              		.align	2
 1081              	.L50:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 34


 1082 0018 00000000 		.word	CapSense_CSD_sensorSignal
 1083              		.cfi_endproc
 1084              	.LFE42:
 1085              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 1086              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 1087              		.align	2
 1088              		.global	CapSense_CSD_SetDiffCountData
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	CapSense_CSD_SetDiffCountData, %function
 1092              	CapSense_CSD_SetDiffCountData:
 1093              	.LFB43:
 777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint16 value)
 801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1094              		.loc 1 801 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 0000 80B5     		push	{r7, lr}
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 82B0     		sub	sp, sp, #8
 1103              		.cfi_def_cfa_offset 16
 1104 0004 00AF     		add	r7, sp, #0
 1105              		.cfi_def_cfa_register 7
 1106 0006 7860     		str	r0, [r7, #4]
 1107 0008 0A00     		movs	r2, r1
 1108 000a BB1C     		adds	r3, r7, #2
 1109 000c 1A80     		strh	r2, [r3]
 802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 1110              		.loc 1 802 0
 1111 000e 054B     		ldr	r3, .L53
 1112 0010 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 35


 1113 0012 5200     		lsls	r2, r2, #1
 1114 0014 B91C     		adds	r1, r7, #2
 1115 0016 0988     		ldrh	r1, [r1]
 1116 0018 D152     		strh	r1, [r2, r3]
 803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1117              		.loc 1 803 0
 1118 001a C046     		nop
 1119 001c BD46     		mov	sp, r7
 1120 001e 02B0     		add	sp, sp, #8
 1121              		@ sp needed
 1122 0020 80BD     		pop	{r7, pc}
 1123              	.L54:
 1124 0022 C046     		.align	2
 1125              	.L53:
 1126 0024 00000000 		.word	CapSense_CSD_sensorSignal
 1127              		.cfi_endproc
 1128              	.LFE43:
 1129              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 1130              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 1131              		.align	2
 1132              		.global	CapSense_CSD_GetFingerThreshold
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	CapSense_CSD_GetFingerThreshold, %function
 1136              	CapSense_CSD_GetFingerThreshold:
 1137              	.LFB44:
 804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetFingerThreshold(uint32 widget)
 828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1138              		.loc 1 828 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 8
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 80B5     		push	{r7, lr}
 1143              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 36


 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 82B0     		sub	sp, sp, #8
 1147              		.cfi_def_cfa_offset 16
 1148 0004 00AF     		add	r7, sp, #0
 1149              		.cfi_def_cfa_register 7
 1150 0006 7860     		str	r0, [r7, #4]
 829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 1151              		.loc 1 829 0
 1152 0008 034B     		ldr	r3, .L57
 1153 000a 7A68     		ldr	r2, [r7, #4]
 1154 000c 5200     		lsls	r2, r2, #1
 1155 000e D35A     		ldrh	r3, [r2, r3]
 830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1156              		.loc 1 830 0
 1157 0010 1800     		movs	r0, r3
 1158 0012 BD46     		mov	sp, r7
 1159 0014 02B0     		add	sp, sp, #8
 1160              		@ sp needed
 1161 0016 80BD     		pop	{r7, pc}
 1162              	.L58:
 1163              		.align	2
 1164              	.L57:
 1165 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1166              		.cfi_endproc
 1167              	.LFE44:
 1168              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1169              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1170              		.align	2
 1171              		.global	CapSense_CSD_GetNoiseThreshold
 1172              		.code	16
 1173              		.thumb_func
 1174              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1175              	CapSense_CSD_GetNoiseThreshold:
 1176              	.LFB45:
 831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 37


 853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1177              		.loc 1 855 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 8
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181 0000 80B5     		push	{r7, lr}
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 82B0     		sub	sp, sp, #8
 1186              		.cfi_def_cfa_offset 16
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0006 7860     		str	r0, [r7, #4]
 856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 1190              		.loc 1 856 0
 1191 0008 034B     		ldr	r3, .L61
 1192 000a 7A68     		ldr	r2, [r7, #4]
 1193 000c 5200     		lsls	r2, r2, #1
 1194 000e D35A     		ldrh	r3, [r2, r3]
 857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1195              		.loc 1 857 0
 1196 0010 1800     		movs	r0, r3
 1197 0012 BD46     		mov	sp, r7
 1198 0014 02B0     		add	sp, sp, #8
 1199              		@ sp needed
 1200 0016 80BD     		pop	{r7, pc}
 1201              	.L62:
 1202              		.align	2
 1203              	.L61:
 1204 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1205              		.cfi_endproc
 1206              	.LFE45:
 1207              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1208              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1209              		.align	2
 1210              		.global	CapSense_CSD_GetFingerHysteresis
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1214              	CapSense_CSD_GetFingerHysteresis:
 1215              	.LFB46:
 858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 38


 871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1216              		.loc 1 883 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220 0000 80B5     		push	{r7, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 82B0     		sub	sp, sp, #8
 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 1229              		.loc 1 884 0
 1230 0008 034B     		ldr	r3, .L65
 1231 000a 7A68     		ldr	r2, [r7, #4]
 1232 000c 5200     		lsls	r2, r2, #1
 1233 000e D35A     		ldrh	r3, [r2, r3]
 885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1234              		.loc 1 885 0
 1235 0010 1800     		movs	r0, r3
 1236 0012 BD46     		mov	sp, r7
 1237 0014 02B0     		add	sp, sp, #8
 1238              		@ sp needed
 1239 0016 80BD     		pop	{r7, pc}
 1240              	.L66:
 1241              		.align	2
 1242              	.L65:
 1243 0018 00000000 		.word	CapSense_CSD_hysteresis
 1244              		.cfi_endproc
 1245              	.LFE46:
 1246              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1247              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1248              		.align	2
 1249              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1253              	CapSense_CSD_GetNegativeNoiseThreshold:
 1254              	.LFB47:
 886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 39


 889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1255              		.loc 1 911 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 8
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0000 80B5     		push	{r7, lr}
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 82B0     		sub	sp, sp, #8
 1264              		.cfi_def_cfa_offset 16
 1265 0004 00AF     		add	r7, sp, #0
 1266              		.cfi_def_cfa_register 7
 1267 0006 7860     		str	r0, [r7, #4]
 912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1268              		.loc 1 913 0
 1269 0008 034B     		ldr	r3, .L69
 1270 000a 7A68     		ldr	r2, [r7, #4]
 1271 000c 5200     		lsls	r2, r2, #1
 1272 000e D35A     		ldrh	r3, [r2, r3]
 914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1273              		.loc 1 917 0
 1274 0010 1800     		movs	r0, r3
 1275 0012 BD46     		mov	sp, r7
 1276 0014 02B0     		add	sp, sp, #8
 1277              		@ sp needed
 1278 0016 80BD     		pop	{r7, pc}
 1279              	.L70:
 1280              		.align	2
 1281              	.L69:
 1282 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 40


 1283              		.cfi_endproc
 1284              	.LFE47:
 1285              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1286              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1287              		.align	2
 1288              		.global	CapSense_CSD_SetFingerThreshold
 1289              		.code	16
 1290              		.thumb_func
 1291              		.type	CapSense_CSD_SetFingerThreshold, %function
 1292              	CapSense_CSD_SetFingerThreshold:
 1293              	.LFB48:
 918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint16 value)
 944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1294              		.loc 1 944 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 8
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 82B0     		sub	sp, sp, #8
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0006 7860     		str	r0, [r7, #4]
 1307 0008 0A00     		movs	r2, r1
 1308 000a BB1C     		adds	r3, r7, #2
 1309 000c 1A80     		strh	r2, [r3]
 945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
 1310              		.loc 1 945 0
 1311 000e 054B     		ldr	r3, .L72
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 41


 1312 0010 7A68     		ldr	r2, [r7, #4]
 1313 0012 5200     		lsls	r2, r2, #1
 1314 0014 B91C     		adds	r1, r7, #2
 1315 0016 0988     		ldrh	r1, [r1]
 1316 0018 D152     		strh	r1, [r2, r3]
 946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1317              		.loc 1 946 0
 1318 001a C046     		nop
 1319 001c BD46     		mov	sp, r7
 1320 001e 02B0     		add	sp, sp, #8
 1321              		@ sp needed
 1322 0020 80BD     		pop	{r7, pc}
 1323              	.L73:
 1324 0022 C046     		.align	2
 1325              	.L72:
 1326 0024 00000000 		.word	CapSense_CSD_fingerThreshold
 1327              		.cfi_endproc
 1328              	.LFE48:
 1329              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1330              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1331              		.align	2
 1332              		.global	CapSense_CSD_SetNoiseThreshold
 1333              		.code	16
 1334              		.thumb_func
 1335              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1336              	CapSense_CSD_SetNoiseThreshold:
 1337              	.LFB49:
 947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint16 value)
 972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1338              		.loc 1 972 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 8
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 42


 1342 0000 80B5     		push	{r7, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 82B0     		sub	sp, sp, #8
 1347              		.cfi_def_cfa_offset 16
 1348 0004 00AF     		add	r7, sp, #0
 1349              		.cfi_def_cfa_register 7
 1350 0006 7860     		str	r0, [r7, #4]
 1351 0008 0A00     		movs	r2, r1
 1352 000a BB1C     		adds	r3, r7, #2
 1353 000c 1A80     		strh	r2, [r3]
 973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
 1354              		.loc 1 973 0
 1355 000e 054B     		ldr	r3, .L75
 1356 0010 7A68     		ldr	r2, [r7, #4]
 1357 0012 5200     		lsls	r2, r2, #1
 1358 0014 B91C     		adds	r1, r7, #2
 1359 0016 0988     		ldrh	r1, [r1]
 1360 0018 D152     		strh	r1, [r2, r3]
 974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1361              		.loc 1 974 0
 1362 001a C046     		nop
 1363 001c BD46     		mov	sp, r7
 1364 001e 02B0     		add	sp, sp, #8
 1365              		@ sp needed
 1366 0020 80BD     		pop	{r7, pc}
 1367              	.L76:
 1368 0022 C046     		.align	2
 1369              	.L75:
 1370 0024 00000000 		.word	CapSense_CSD_noiseThreshold
 1371              		.cfi_endproc
 1372              	.LFE49:
 1373              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1374              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1375              		.align	2
 1376              		.global	CapSense_CSD_SetFingerHysteresis
 1377              		.code	16
 1378              		.thumb_func
 1379              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1380              	CapSense_CSD_SetFingerHysteresis:
 1381              	.LFB50:
 975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 43


 990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint16 value)
1000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1382              		.loc 1 1000 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 8
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386 0000 80B5     		push	{r7, lr}
 1387              		.cfi_def_cfa_offset 8
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
 1390 0002 82B0     		sub	sp, sp, #8
 1391              		.cfi_def_cfa_offset 16
 1392 0004 00AF     		add	r7, sp, #0
 1393              		.cfi_def_cfa_register 7
 1394 0006 7860     		str	r0, [r7, #4]
 1395 0008 0A00     		movs	r2, r1
 1396 000a BB1C     		adds	r3, r7, #2
 1397 000c 1A80     		strh	r2, [r3]
1001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 1398              		.loc 1 1001 0
 1399 000e 054B     		ldr	r3, .L78
 1400 0010 7A68     		ldr	r2, [r7, #4]
 1401 0012 5200     		lsls	r2, r2, #1
 1402 0014 B91C     		adds	r1, r7, #2
 1403 0016 0988     		ldrh	r1, [r1]
 1404 0018 D152     		strh	r1, [r2, r3]
1002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1405              		.loc 1 1002 0
 1406 001a C046     		nop
 1407 001c BD46     		mov	sp, r7
 1408 001e 02B0     		add	sp, sp, #8
 1409              		@ sp needed
 1410 0020 80BD     		pop	{r7, pc}
 1411              	.L79:
 1412 0022 C046     		.align	2
 1413              	.L78:
 1414 0024 00000000 		.word	CapSense_CSD_hysteresis
 1415              		.cfi_endproc
 1416              	.LFE50:
 1417              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1418              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1419              		.align	2
 1420              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1424              	CapSense_CSD_SetNegativeNoiseThreshold:
 1425              	.LFB51:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 44


1003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
1007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
1015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
1021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
1023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
1029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1426              		.loc 1 1029 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 8
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 82B0     		sub	sp, sp, #8
 1435              		.cfi_def_cfa_offset 16
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
 1438 0006 7860     		str	r0, [r7, #4]
 1439 0008 0A00     		movs	r2, r1
 1440 000a BB1C     		adds	r3, r7, #2
 1441 000c 1A80     		strh	r2, [r3]
1030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1442              		.loc 1 1030 0
 1443 000e 054B     		ldr	r3, .L81
 1444 0010 7A68     		ldr	r2, [r7, #4]
 1445 0012 5200     		lsls	r2, r2, #1
 1446 0014 B91C     		adds	r1, r7, #2
 1447 0016 0988     		ldrh	r1, [r1]
 1448 0018 D152     		strh	r1, [r2, r3]
1031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1449              		.loc 1 1031 0
 1450 001a C046     		nop
 1451 001c BD46     		mov	sp, r7
 1452 001e 02B0     		add	sp, sp, #8
 1453              		@ sp needed
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 45


 1454 0020 80BD     		pop	{r7, pc}
 1455              	.L82:
 1456 0022 C046     		.align	2
 1457              	.L81:
 1458 0024 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1459              		.cfi_endproc
 1460              	.LFE51:
 1461              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 1462              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1463              		.align	2
 1464              		.global	CapSense_CSD_SetDebounce
 1465              		.code	16
 1466              		.thumb_func
 1467              		.type	CapSense_CSD_SetDebounce, %function
 1468              	CapSense_CSD_SetDebounce:
 1469              	.LFB52:
1032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1470              		.loc 1 1057 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 8
 1473              		@ frame_needed = 1, uses_anonymous_args = 0
 1474 0000 80B5     		push	{r7, lr}
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 0002 82B0     		sub	sp, sp, #8
 1479              		.cfi_def_cfa_offset 16
 1480 0004 00AF     		add	r7, sp, #0
 1481              		.cfi_def_cfa_register 7
 1482 0006 7860     		str	r0, [r7, #4]
 1483 0008 0A00     		movs	r2, r1
 1484 000a FB1C     		adds	r3, r7, #3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 46


 1485 000c 1A70     		strb	r2, [r3]
1058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 1486              		.loc 1 1058 0
 1487 000e 054A     		ldr	r2, .L84
 1488 0010 7B68     		ldr	r3, [r7, #4]
 1489 0012 D318     		adds	r3, r2, r3
 1490 0014 FA1C     		adds	r2, r7, #3
 1491 0016 1278     		ldrb	r2, [r2]
 1492 0018 1A70     		strb	r2, [r3]
1059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1493              		.loc 1 1059 0
 1494 001a C046     		nop
 1495 001c BD46     		mov	sp, r7
 1496 001e 02B0     		add	sp, sp, #8
 1497              		@ sp needed
 1498 0020 80BD     		pop	{r7, pc}
 1499              	.L85:
 1500 0022 C046     		.align	2
 1501              	.L84:
 1502 0024 00000000 		.word	CapSense_CSD_debounce
 1503              		.cfi_endproc
 1504              	.LFE52:
 1505              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1506              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1507              		.align	2
 1508              		.global	CapSense_CSD_SetLowBaselineReset
 1509              		.code	16
 1510              		.thumb_func
 1511              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1512              	CapSense_CSD_SetLowBaselineReset:
 1513              	.LFB53:
1060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 47


 1514              		.loc 1 1085 0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 8
 1517              		@ frame_needed = 1, uses_anonymous_args = 0
 1518 0000 80B5     		push	{r7, lr}
 1519              		.cfi_def_cfa_offset 8
 1520              		.cfi_offset 7, -8
 1521              		.cfi_offset 14, -4
 1522 0002 82B0     		sub	sp, sp, #8
 1523              		.cfi_def_cfa_offset 16
 1524 0004 00AF     		add	r7, sp, #0
 1525              		.cfi_def_cfa_register 7
 1526 0006 7860     		str	r0, [r7, #4]
 1527 0008 0A00     		movs	r2, r1
 1528 000a FB1C     		adds	r3, r7, #3
 1529 000c 1A70     		strb	r2, [r3]
1086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 1530              		.loc 1 1086 0
 1531 000e 054A     		ldr	r2, .L87
 1532 0010 7B68     		ldr	r3, [r7, #4]
 1533 0012 D318     		adds	r3, r2, r3
 1534 0014 FA1C     		adds	r2, r7, #3
 1535 0016 1278     		ldrb	r2, [r2]
 1536 0018 1A70     		strb	r2, [r3]
1087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1537              		.loc 1 1087 0
 1538 001a C046     		nop
 1539 001c BD46     		mov	sp, r7
 1540 001e 02B0     		add	sp, sp, #8
 1541              		@ sp needed
 1542 0020 80BD     		pop	{r7, pc}
 1543              	.L88:
 1544 0022 C046     		.align	2
 1545              	.L87:
 1546 0024 00000000 		.word	CapSense_CSD_lowBaselineReset
 1547              		.cfi_endproc
 1548              	.LFE53:
 1549              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1550              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1551              		.align	2
 1552              		.global	CapSense_CSD_CheckIsSensorActive
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1556              	CapSense_CSD_CheckIsSensorActive:
 1557              	.LFB54:
1088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 48


1099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
1113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
1115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1558              		.loc 1 1131 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 16
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 80B5     		push	{r7, lr}
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 7, -8
 1565              		.cfi_offset 14, -4
 1566 0002 84B0     		sub	sp, sp, #16
 1567              		.cfi_def_cfa_offset 24
 1568 0004 00AF     		add	r7, sp, #0
 1569              		.cfi_def_cfa_register 7
 1570 0006 7860     		str	r0, [r7, #4]
1132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold;
1137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 hysteresis;
1138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1571              		.loc 1 1141 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 49


 1572 0008 0F23     		movs	r3, #15
 1573 000a FB18     		adds	r3, r7, r3
 1574 000c 4249     		ldr	r1, .L98
 1575 000e 7A68     		ldr	r2, [r7, #4]
 1576 0010 8A18     		adds	r2, r1, r2
 1577 0012 1278     		ldrb	r2, [r2]
 1578 0014 1A70     		strb	r2, [r3]
1142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1579              		.loc 1 1143 0
 1580 0016 0F23     		movs	r3, #15
 1581 0018 FB18     		adds	r3, r7, r3
 1582 001a 1978     		ldrb	r1, [r3]
 1583 001c 0C23     		movs	r3, #12
 1584 001e FB18     		adds	r3, r7, r3
 1585 0020 3E4A     		ldr	r2, .L98+4
 1586 0022 4900     		lsls	r1, r1, #1
 1587 0024 8A5A     		ldrh	r2, [r1, r2]
 1588 0026 1A80     		strh	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 1589              		.loc 1 1144 0
 1590 0028 0F23     		movs	r3, #15
 1591 002a FB18     		adds	r3, r7, r3
 1592 002c 1978     		ldrb	r1, [r3]
 1593 002e 0A23     		movs	r3, #10
 1594 0030 FB18     		adds	r3, r7, r3
 1595 0032 3B4A     		ldr	r2, .L98+8
 1596 0034 4900     		lsls	r1, r1, #1
 1597 0036 8A5A     		ldrh	r2, [r1, r2]
 1598 0038 1A80     		strh	r2, [r3]
1145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 1599              		.loc 1 1145 0
 1600 003a 0F23     		movs	r3, #15
 1601 003c FB18     		adds	r3, r7, r3
 1602 003e 1A78     		ldrb	r2, [r3]
 1603 0040 0923     		movs	r3, #9
 1604 0042 FB18     		adds	r3, r7, r3
 1605 0044 3749     		ldr	r1, .L98+12
 1606 0046 8A5C     		ldrb	r2, [r1, r2]
 1607 0048 1A70     		strb	r2, [r3]
1146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = widget;
 1608              		.loc 1 1147 0
 1609 004a 0823     		movs	r3, #8
 1610 004c FB18     		adds	r3, r7, r3
 1611 004e 0F22     		movs	r2, #15
 1612 0050 BA18     		adds	r2, r7, r2
 1613 0052 1278     		ldrb	r2, [r2]
 1614 0054 1A70     		strb	r2, [r3]
1148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1615              		.loc 1 1151 0
 1616 0056 7A68     		ldr	r2, [r7, #4]
 1617 0058 334B     		ldr	r3, .L98+16
 1618 005a 1100     		movs	r1, r2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 50


 1619 005c 1800     		movs	r0, r3
 1620 005e FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1621 0062 031E     		subs	r3, r0, #0
 1622 0064 1CD0     		beq	.L90
1152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1623              		.loc 1 1154 0
 1624 0066 314B     		ldr	r3, .L98+20
 1625 0068 7A68     		ldr	r2, [r7, #4]
 1626 006a 5200     		lsls	r2, r2, #1
 1627 006c D35A     		ldrh	r3, [r2, r3]
 1628 006e 1900     		movs	r1, r3
 1629 0070 0C23     		movs	r3, #12
 1630 0072 FB18     		adds	r3, r7, r3
 1631 0074 1A88     		ldrh	r2, [r3]
 1632 0076 0A23     		movs	r3, #10
 1633 0078 FB18     		adds	r3, r7, r3
 1634 007a 1B88     		ldrh	r3, [r3]
 1635 007c D31A     		subs	r3, r2, r3
 1636 007e 9942     		cmp	r1, r3
 1637 0080 3BDA     		bge	.L92
1155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1638              		.loc 1 1156 0
 1639 0082 7968     		ldr	r1, [r7, #4]
 1640 0084 284B     		ldr	r3, .L98+16
 1641 0086 0022     		movs	r2, #0
 1642 0088 1800     		movs	r0, r3
 1643 008a FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1644              		.loc 1 1158 0
 1645 008e 0823     		movs	r3, #8
 1646 0090 FB18     		adds	r3, r7, r3
 1647 0092 1B78     		ldrb	r3, [r3]
 1648 0094 264A     		ldr	r2, .L98+24
 1649 0096 0921     		movs	r1, #9
 1650 0098 7918     		adds	r1, r7, r1
 1651 009a 0978     		ldrb	r1, [r1]
 1652 009c D154     		strb	r1, [r2, r3]
 1653 009e 2CE0     		b	.L92
 1654              	.L90:
1159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1655              		.loc 1 1164 0
 1656 00a0 224B     		ldr	r3, .L98+20
 1657 00a2 7A68     		ldr	r2, [r7, #4]
 1658 00a4 5200     		lsls	r2, r2, #1
 1659 00a6 D35A     		ldrh	r3, [r2, r3]
 1660 00a8 1900     		movs	r1, r3
 1661 00aa 0C23     		movs	r3, #12
 1662 00ac FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 51


 1663 00ae 1A88     		ldrh	r2, [r3]
 1664 00b0 0A23     		movs	r3, #10
 1665 00b2 FB18     		adds	r3, r7, r3
 1666 00b4 1B88     		ldrh	r3, [r3]
 1667 00b6 D318     		adds	r3, r2, r3
 1668 00b8 9942     		cmp	r1, r3
 1669 00ba 16DB     		blt	.L93
1165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 1670              		.loc 1 1166 0
 1671 00bc 0823     		movs	r3, #8
 1672 00be FB18     		adds	r3, r7, r3
 1673 00c0 1B78     		ldrb	r3, [r3]
 1674 00c2 1B4A     		ldr	r2, .L98+24
 1675 00c4 D25C     		ldrb	r2, [r2, r3]
 1676 00c6 013A     		subs	r2, r2, #1
 1677 00c8 D1B2     		uxtb	r1, r2
 1678 00ca 194A     		ldr	r2, .L98+24
 1679 00cc D154     		strb	r1, [r2, r3]
1167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1680              		.loc 1 1168 0
 1681 00ce 0823     		movs	r3, #8
 1682 00d0 FB18     		adds	r3, r7, r3
 1683 00d2 1B78     		ldrb	r3, [r3]
 1684 00d4 164A     		ldr	r2, .L98+24
 1685 00d6 D35C     		ldrb	r3, [r2, r3]
 1686 00d8 002B     		cmp	r3, #0
 1687 00da 0ED1     		bne	.L92
1169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 1688              		.loc 1 1170 0
 1689 00dc 7968     		ldr	r1, [r7, #4]
 1690 00de 124B     		ldr	r3, .L98+16
 1691 00e0 0122     		movs	r2, #1
 1692 00e2 1800     		movs	r0, r3
 1693 00e4 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1694 00e8 07E0     		b	.L92
 1695              	.L93:
1171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1696              		.loc 1 1176 0
 1697 00ea 0823     		movs	r3, #8
 1698 00ec FB18     		adds	r3, r7, r3
 1699 00ee 1B78     		ldrb	r3, [r3]
 1700 00f0 0F4A     		ldr	r2, .L98+24
 1701 00f2 0921     		movs	r1, #9
 1702 00f4 7918     		adds	r1, r7, r1
 1703 00f6 0978     		ldrb	r1, [r1]
 1704 00f8 D154     		strb	r1, [r2, r3]
 1705              	.L92:
1177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 52


1179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1706              		.loc 1 1180 0
 1707 00fa 7A68     		ldr	r2, [r7, #4]
 1708 00fc 0A4B     		ldr	r3, .L98+16
 1709 00fe 1100     		movs	r1, r2
 1710 0100 1800     		movs	r0, r3
 1711 0102 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1712 0106 031E     		subs	r3, r0, #0
 1713 0108 01D0     		beq	.L95
 1714              		.loc 1 1180 0 is_stmt 0 discriminator 1
 1715 010a 0123     		movs	r3, #1
 1716 010c 00E0     		b	.L97
 1717              	.L95:
 1718              		.loc 1 1180 0 discriminator 2
 1719 010e 0023     		movs	r3, #0
 1720              	.L97:
1181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1721              		.loc 1 1181 0 is_stmt 1 discriminator 5
 1722 0110 1800     		movs	r0, r3
 1723 0112 BD46     		mov	sp, r7
 1724 0114 04B0     		add	sp, sp, #16
 1725              		@ sp needed
 1726 0116 80BD     		pop	{r7, pc}
 1727              	.L99:
 1728              		.align	2
 1729              	.L98:
 1730 0118 00000000 		.word	CapSense_CSD_widgetNumber
 1731 011c 00000000 		.word	CapSense_CSD_fingerThreshold
 1732 0120 00000000 		.word	CapSense_CSD_hysteresis
 1733 0124 00000000 		.word	CapSense_CSD_debounce
 1734 0128 00000000 		.word	CapSense_CSD_sensorOnMask
 1735 012c 00000000 		.word	CapSense_CSD_sensorSignal
 1736 0130 4C000000 		.word	CapSense_CSD_debounceCounter
 1737              		.cfi_endproc
 1738              	.LFE54:
 1739              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1740              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1741              		.align	2
 1742              		.global	CapSense_CSD_CheckIsWidgetActive
 1743              		.code	16
 1744              		.thumb_func
 1745              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1746              	CapSense_CSD_CheckIsWidgetActive:
 1747              	.LFB55:
1182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 53


1194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1748              		.loc 1 1213 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 24
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0000 80B5     		push	{r7, lr}
 1753              		.cfi_def_cfa_offset 8
 1754              		.cfi_offset 7, -8
 1755              		.cfi_offset 14, -4
 1756 0002 86B0     		sub	sp, sp, #24
 1757              		.cfi_def_cfa_offset 32
 1758 0004 00AF     		add	r7, sp, #0
 1759              		.cfi_def_cfa_register 7
 1760 0006 7860     		str	r0, [r7, #4]
1214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1761              		.loc 1 1214 0
 1762 0008 114A     		ldr	r2, .L104
 1763 000a 7B68     		ldr	r3, [r7, #4]
 1764 000c D318     		adds	r3, r2, r3
 1765 000e 1B78     		ldrb	r3, [r3]
 1766 0010 7B61     		str	r3, [r7, #20]
1215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1767              		.loc 1 1215 0
 1768 0012 104A     		ldr	r2, .L104+4
 1769 0014 7B68     		ldr	r3, [r7, #4]
 1770 0016 D318     		adds	r3, r2, r3
 1771 0018 1B78     		ldrb	r3, [r3]
 1772 001a 1A00     		movs	r2, r3
 1773 001c 7B69     		ldr	r3, [r7, #20]
 1774 001e D318     		adds	r3, r2, r3
 1775 0020 FB60     		str	r3, [r7, #12]
1216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1776              		.loc 1 1216 0
 1777 0022 0023     		movs	r3, #0
 1778 0024 3B61     		str	r3, [r7, #16]
 1779              	.L102:
1217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 54


1219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1780              		.loc 1 1221 0
 1781 0026 7B69     		ldr	r3, [r7, #20]
 1782 0028 1800     		movs	r0, r3
 1783 002a FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1784 002e 031E     		subs	r3, r0, #0
 1785 0030 01D0     		beq	.L101
1222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1786              		.loc 1 1223 0
 1787 0032 0123     		movs	r3, #1
 1788 0034 3B61     		str	r3, [r7, #16]
 1789              	.L101:
1224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1790              		.loc 1 1225 0
 1791 0036 7B69     		ldr	r3, [r7, #20]
 1792 0038 0133     		adds	r3, r3, #1
 1793 003a 7B61     		str	r3, [r7, #20]
1226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1794              		.loc 1 1227 0
 1795 003c 7A69     		ldr	r2, [r7, #20]
 1796 003e FB68     		ldr	r3, [r7, #12]
 1797 0040 9A42     		cmp	r2, r3
 1798 0042 F0D3     		bcc	.L102
1228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1799              		.loc 1 1231 0
 1800 0044 3B69     		ldr	r3, [r7, #16]
1232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1801              		.loc 1 1232 0
 1802 0046 1800     		movs	r0, r3
 1803 0048 BD46     		mov	sp, r7
 1804 004a 06B0     		add	sp, sp, #24
 1805              		@ sp needed
 1806 004c 80BD     		pop	{r7, pc}
 1807              	.L105:
 1808 004e C046     		.align	2
 1809              	.L104:
 1810 0050 00000000 		.word	CapSense_CSD_rawDataIndex
 1811 0054 00000000 		.word	CapSense_CSD_numberOfSensors
 1812              		.cfi_endproc
 1813              	.LFE55:
 1814              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1815              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1816              		.align	2
 1817              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1821              	CapSense_CSD_CheckIsAnyWidgetActive:
 1822              	.LFB56:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 55


1233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1823              		.loc 1 1259 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 8
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827 0000 80B5     		push	{r7, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 7, -8
 1830              		.cfi_offset 14, -4
 1831 0002 82B0     		sub	sp, sp, #8
 1832              		.cfi_def_cfa_offset 16
 1833 0004 00AF     		add	r7, sp, #0
 1834              		.cfi_def_cfa_register 7
1260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1835              		.loc 1 1262 0
 1836 0006 0023     		movs	r3, #0
 1837 0008 3B60     		str	r3, [r7]
1263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1838              		.loc 1 1264 0
 1839 000a 0023     		movs	r3, #0
 1840 000c 7B60     		str	r3, [r7, #4]
 1841 000e 0AE0     		b	.L107
 1842              	.L109:
1265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1843              		.loc 1 1266 0
 1844 0010 7B68     		ldr	r3, [r7, #4]
 1845 0012 1800     		movs	r0, r3
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 56


 1846 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1847 0018 031E     		subs	r3, r0, #0
 1848 001a 01D0     		beq	.L108
1267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1849              		.loc 1 1268 0
 1850 001c 0123     		movs	r3, #1
 1851 001e 3B60     		str	r3, [r7]
 1852              	.L108:
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1853              		.loc 1 1264 0 discriminator 2
 1854 0020 7B68     		ldr	r3, [r7, #4]
 1855 0022 0133     		adds	r3, r3, #1
 1856 0024 7B60     		str	r3, [r7, #4]
 1857              	.L107:
1264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1858              		.loc 1 1264 0 is_stmt 0 discriminator 1
 1859 0026 7B68     		ldr	r3, [r7, #4]
 1860 0028 0C2B     		cmp	r3, #12
 1861 002a F1D9     		bls	.L109
1269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1862              		.loc 1 1274 0 is_stmt 1
 1863 002c 3B68     		ldr	r3, [r7]
1275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1864              		.loc 1 1275 0
 1865 002e 1800     		movs	r0, r3
 1866 0030 BD46     		mov	sp, r7
 1867 0032 02B0     		add	sp, sp, #8
 1868              		@ sp needed
 1869 0034 80BD     		pop	{r7, pc}
 1870              		.cfi_endproc
 1871              	.LFE56:
 1872              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1873 0036 C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1874              		.align	2
 1875              		.global	CapSense_CSD_EnableWidget
 1876              		.code	16
 1877              		.thumb_func
 1878              		.type	CapSense_CSD_EnableWidget, %function
 1879              	CapSense_CSD_EnableWidget:
 1880              	.LFB57:
1276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 57


1287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1881              		.loc 1 1306 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 16
 1884              		@ frame_needed = 1, uses_anonymous_args = 0
 1885 0000 80B5     		push	{r7, lr}
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 7, -8
 1888              		.cfi_offset 14, -4
 1889 0002 84B0     		sub	sp, sp, #16
 1890              		.cfi_def_cfa_offset 24
 1891 0004 00AF     		add	r7, sp, #0
 1892              		.cfi_def_cfa_register 7
 1893 0006 7860     		str	r0, [r7, #4]
1307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1894              		.loc 1 1308 0
 1895 0008 0F23     		movs	r3, #15
 1896 000a FB18     		adds	r3, r7, r3
 1897 000c 1549     		ldr	r1, .L113
 1898 000e 7A68     		ldr	r2, [r7, #4]
 1899 0010 8A18     		adds	r2, r1, r2
 1900 0012 1278     		ldrb	r2, [r2]
 1901 0014 1A70     		strb	r2, [r3]
1309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1902              		.loc 1 1309 0
 1903 0016 144A     		ldr	r2, .L113+4
 1904 0018 7B68     		ldr	r3, [r7, #4]
 1905 001a D318     		adds	r3, r2, r3
 1906 001c 1978     		ldrb	r1, [r3]
 1907 001e 0E23     		movs	r3, #14
 1908 0020 FB18     		adds	r3, r7, r3
 1909 0022 0F22     		movs	r2, #15
 1910 0024 BA18     		adds	r2, r7, r2
 1911 0026 1278     		ldrb	r2, [r2]
 1912 0028 8A18     		adds	r2, r1, r2
 1913 002a 1A70     		strb	r2, [r3]
 1914              	.L112:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 58


1310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1915              		.loc 1 1314 0 discriminator 1
 1916 002c 0F23     		movs	r3, #15
 1917 002e FB18     		adds	r3, r7, r3
 1918 0030 1978     		ldrb	r1, [r3]
 1919 0032 0E4B     		ldr	r3, .L113+8
 1920 0034 0122     		movs	r2, #1
 1921 0036 1800     		movs	r0, r3
 1922 0038 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1923              		.loc 1 1315 0 discriminator 1
 1924 003c 0F23     		movs	r3, #15
 1925 003e FB18     		adds	r3, r7, r3
 1926 0040 1A78     		ldrb	r2, [r3]
 1927 0042 0F23     		movs	r3, #15
 1928 0044 FB18     		adds	r3, r7, r3
 1929 0046 0132     		adds	r2, r2, #1
 1930 0048 1A70     		strb	r2, [r3]
1316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1931              		.loc 1 1317 0 discriminator 1
 1932 004a 0F23     		movs	r3, #15
 1933 004c FA18     		adds	r2, r7, r3
 1934 004e 0E23     		movs	r3, #14
 1935 0050 FB18     		adds	r3, r7, r3
 1936 0052 1278     		ldrb	r2, [r2]
 1937 0054 1B78     		ldrb	r3, [r3]
 1938 0056 9A42     		cmp	r2, r3
 1939 0058 E8D3     		bcc	.L112
1318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1940              		.loc 1 1318 0
 1941 005a C046     		nop
 1942 005c BD46     		mov	sp, r7
 1943 005e 04B0     		add	sp, sp, #16
 1944              		@ sp needed
 1945 0060 80BD     		pop	{r7, pc}
 1946              	.L114:
 1947 0062 C046     		.align	2
 1948              	.L113:
 1949 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 1950 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 1951 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1952              		.cfi_endproc
 1953              	.LFE57:
 1954              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1955              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1956              		.align	2
 1957              		.global	CapSense_CSD_DisableWidget
 1958              		.code	16
 1959              		.thumb_func
 1960              		.type	CapSense_CSD_DisableWidget, %function
 1961              	CapSense_CSD_DisableWidget:
 1962              	.LFB58:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 59


1319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1963              		.loc 1 1349 0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 16
 1966              		@ frame_needed = 1, uses_anonymous_args = 0
 1967 0000 80B5     		push	{r7, lr}
 1968              		.cfi_def_cfa_offset 8
 1969              		.cfi_offset 7, -8
 1970              		.cfi_offset 14, -4
 1971 0002 84B0     		sub	sp, sp, #16
 1972              		.cfi_def_cfa_offset 24
 1973 0004 00AF     		add	r7, sp, #0
 1974              		.cfi_def_cfa_register 7
 1975 0006 7860     		str	r0, [r7, #4]
1350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1976              		.loc 1 1350 0
 1977 0008 0F23     		movs	r3, #15
 1978 000a FB18     		adds	r3, r7, r3
 1979 000c 1549     		ldr	r1, .L117
 1980 000e 7A68     		ldr	r2, [r7, #4]
 1981 0010 8A18     		adds	r2, r1, r2
 1982 0012 1278     		ldrb	r2, [r2]
 1983 0014 1A70     		strb	r2, [r3]
1351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1984              		.loc 1 1351 0
 1985 0016 144A     		ldr	r2, .L117+4
 1986 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 60


 1987 001a D318     		adds	r3, r2, r3
 1988 001c 1978     		ldrb	r1, [r3]
 1989 001e 0E23     		movs	r3, #14
 1990 0020 FB18     		adds	r3, r7, r3
 1991 0022 0F22     		movs	r2, #15
 1992 0024 BA18     		adds	r2, r7, r2
 1993 0026 1278     		ldrb	r2, [r2]
 1994 0028 8A18     		adds	r2, r1, r2
 1995 002a 1A70     		strb	r2, [r3]
 1996              	.L116:
1352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1997              		.loc 1 1357 0 discriminator 1
 1998 002c 0F23     		movs	r3, #15
 1999 002e FB18     		adds	r3, r7, r3
 2000 0030 1978     		ldrb	r1, [r3]
 2001 0032 0E4B     		ldr	r3, .L117+8
 2002 0034 0022     		movs	r2, #0
 2003 0036 1800     		movs	r0, r3
 2004 0038 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 2005              		.loc 1 1358 0 discriminator 1
 2006 003c 0F23     		movs	r3, #15
 2007 003e FB18     		adds	r3, r7, r3
 2008 0040 1A78     		ldrb	r2, [r3]
 2009 0042 0F23     		movs	r3, #15
 2010 0044 FB18     		adds	r3, r7, r3
 2011 0046 0132     		adds	r2, r2, #1
 2012 0048 1A70     		strb	r2, [r3]
1359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 2013              		.loc 1 1360 0 discriminator 1
 2014 004a 0F23     		movs	r3, #15
 2015 004c FA18     		adds	r2, r7, r3
 2016 004e 0E23     		movs	r3, #14
 2017 0050 FB18     		adds	r3, r7, r3
 2018 0052 1278     		ldrb	r2, [r2]
 2019 0054 1B78     		ldrb	r3, [r3]
 2020 0056 9A42     		cmp	r2, r3
 2021 0058 E8D3     		bcc	.L116
1361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2022              		.loc 1 1361 0
 2023 005a C046     		nop
 2024 005c BD46     		mov	sp, r7
 2025 005e 04B0     		add	sp, sp, #16
 2026              		@ sp needed
 2027 0060 80BD     		pop	{r7, pc}
 2028              	.L118:
 2029 0062 C046     		.align	2
 2030              	.L117:
 2031 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 2032 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 2033 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 61


 2034              		.cfi_endproc
 2035              	.LFE58:
 2036              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 2037              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 2038              		.align	2
 2039              		.global	CapSense_CSD_MedianFilter
 2040              		.code	16
 2041              		.thumb_func
 2042              		.type	CapSense_CSD_MedianFilter, %function
 2043              	CapSense_CSD_MedianFilter:
 2044              	.LFB59:
1362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uin
1397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
1398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 62


1408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
1412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
1414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 63


1465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
1512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
1517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
1519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
1520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 64


1522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
1525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint16 CapSense_CSD_centroid[3u];
1569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 65


1579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
1580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
1583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
1626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 66


1636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
1643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
1647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
1670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
1671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
1680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
1682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
1686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
1690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 67


1693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
1695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
1699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
1704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
1705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
1708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
1709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
1723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
1726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 68


1750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 69


1807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
1815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1860:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1861:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1862:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1863:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 70


1864:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1865:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1866:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1867:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1868:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1869:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1870:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1871:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1872:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1873:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1874:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1875:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1876:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1877:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1878:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1879:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1880:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1881:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1882:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1883:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1884:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1885:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1886:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1887:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1888:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1889:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1890:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1891:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1892:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1893:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1894:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1895:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1896:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1897:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1898:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1899:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1901:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1902:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1903:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1904:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1905:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1906:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1907:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1908:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1909:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1910:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1911:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1912:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1913:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1915:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1916:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1917:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1918:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1919:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1920:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 71


1921:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1922:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1923:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1924:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1925:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1926:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1927:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1928:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1929:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1930:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
1931:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1932:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1933:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1934:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1935:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1936:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1937:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1938:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1939:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1940:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1941:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1942:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1943:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1944:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1945:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1946:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1947:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1948:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1949:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1950:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1951:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1952:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1953:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1954:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1955:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1956:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1957:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1958:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1959:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1960:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1961:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1962:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1963:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1964:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1965:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1966:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1967:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1968:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1969:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1970:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1971:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1972:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1973:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1974:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1975:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1976:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1977:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 72


1978:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1979:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1980:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1981:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1982:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1983:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1984:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1985:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1986:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1987:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1988:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1989:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1990:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1991:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1992:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1993:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1994:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1995:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint16)CapSense_CSD_fingerThreshold[
1996:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1997:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1998:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
1999:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2000:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
2001:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
2002:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
2003:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2004:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2005:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
2006:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2007:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2008:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
2009:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2010:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2011:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2012:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2013:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
2014:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2015:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2016:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2017:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
2018:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2019:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2020:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
2021:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2022:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2023:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2024:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2025:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2026:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2027:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2028:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2029:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2030:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2031:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2032:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2033:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2034:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 73


2035:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2036:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2037:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2038:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2039:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2040:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2041:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2042:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2043:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2044:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2045:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2046:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2047:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2048:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2049:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2050:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2051:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2052:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2053:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2054:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2055:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2056:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
2057:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2058:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2059:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2060:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2061:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2062:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2063:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2064:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2065:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2066:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2067:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2068:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2069:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2070:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2071:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2072:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2073:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2074:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2075:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2076:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2077:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2078:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2079:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2080:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2081:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2082:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2083:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2084:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2085:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2086:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2087:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2088:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2089:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2090:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2091:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 74


2092:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2093:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2094:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2095:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2096:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2097:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2098:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2099:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2100:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2101:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2102:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2103:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2104:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2105:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2106:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
2107:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2108:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2109:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2110:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2111:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2112:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2113:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2114:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2115:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2116:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2117:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
2118:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2119:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2120:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2121:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2122:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2123:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2124:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2125:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2126:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2127:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2128:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2129:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2130:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2131:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2132:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2133:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2134:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2135:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2136:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2137:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
2138:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2139:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2140:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2141:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2142:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2143:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2144:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2145:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2146:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2147:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2148:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 75


2149:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2150:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2151:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2152:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2153:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2154:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2155:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2156:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2157:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2158:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2159:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2160:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2161:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2162:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2163:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2164:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2165:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2166:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2167:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2168:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2169:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2170:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2171:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2172:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2173:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2175:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2176:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2177:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2178:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2179:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2180:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2181:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2183:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2184:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2185:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2186:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2187:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2188:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2189:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2190:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2191:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2192:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2193:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2195:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2196:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2197:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2198:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2199:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2200:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2201:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2202:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2203:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2204:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2205:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 76


2206:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2207:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2208:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2209:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2210:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2211:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2212:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2213:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2214:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2215:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2216:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2217:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2218:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2219:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2220:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2221:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2222:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2223:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2224:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2225:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2226:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2227:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2228:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2229:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2230:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2231:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2232:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2233:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2234:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2235:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2236:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2237:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2238:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2239:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2240:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2241:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2242:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2243:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2244:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2245:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2246:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2247:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2248:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2249:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2250:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2251:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2252:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2253:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2254:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2255:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2256:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2257:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2258:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2259:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2260:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2261:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2262:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 77


2263:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2264:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2265:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2266:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2267:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2268:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2269:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2270:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2271:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2272:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2273:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2274:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2275:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2276:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2277:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2278:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2279:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2280:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2281:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2282:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2283:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2284:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2285:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2286:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2287:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2288:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2289:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2290:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2291:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2292:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2293:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2294:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2295:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2296:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2298:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2299:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2300:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2302:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2303:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2304:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2305:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2306:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2307:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2308:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
2309:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2310:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2311:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2312:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2314:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2315:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2316:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2317:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2318:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2319:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 78


2320:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2321:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2322:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2323:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2324:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2325:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2326:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2327:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2328:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2329:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2330:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2331:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2332:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2333:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2334:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2335:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2336:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2337:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2338:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2339:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2340:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2341:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2342:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2343:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2344:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2345:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2346:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2347:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2348:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2349:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2350:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2351:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2352:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2353:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2354:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2355:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2356:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2357:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2358:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2359:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2360:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2361:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2362:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2363:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2364:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2365:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2366:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2367:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2368:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2369:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2370:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2371:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2372:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2373:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2374:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2375:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2376:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 79


2377:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2378:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2379:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2380:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2381:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2382:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2383:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2384:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2385:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2386:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2387:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2388:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2389:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2390:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2391:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2392:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2393:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2394:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2395:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2396:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2397:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2398:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2399:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2401:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2045              		.loc 1 2401 0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 16
 2048              		@ frame_needed = 1, uses_anonymous_args = 0
 2049 0000 90B5     		push	{r4, r7, lr}
 2050              		.cfi_def_cfa_offset 12
 2051              		.cfi_offset 4, -12
 2052              		.cfi_offset 7, -8
 2053              		.cfi_offset 14, -4
 2054 0002 85B0     		sub	sp, sp, #20
 2055              		.cfi_def_cfa_offset 32
 2056 0004 00AF     		add	r7, sp, #0
 2057              		.cfi_def_cfa_register 7
 2058 0006 0400     		movs	r4, r0
 2059 0008 0800     		movs	r0, r1
 2060 000a 1100     		movs	r1, r2
 2061 000c BB1D     		adds	r3, r7, #6
 2062 000e 221C     		adds	r2, r4, #0
 2063 0010 1A80     		strh	r2, [r3]
 2064 0012 3B1D     		adds	r3, r7, #4
 2065 0014 021C     		adds	r2, r0, #0
 2066 0016 1A80     		strh	r2, [r3]
 2067 0018 BB1C     		adds	r3, r7, #2
 2068 001a 0A1C     		adds	r2, r1, #0
 2069 001c 1A80     		strh	r2, [r3]
2402:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2403:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2404:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2070              		.loc 1 2404 0
 2071 001e BA1D     		adds	r2, r7, #6
 2072 0020 3B1D     		adds	r3, r7, #4
 2073 0022 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 80


 2074 0024 1B88     		ldrh	r3, [r3]
 2075 0026 9A42     		cmp	r2, r3
 2076 0028 0DD9     		bls	.L120
2405:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2406:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2077              		.loc 1 2406 0
 2078 002a 0E23     		movs	r3, #14
 2079 002c FB18     		adds	r3, r7, r3
 2080 002e 3A1D     		adds	r2, r7, #4
 2081 0030 1288     		ldrh	r2, [r2]
 2082 0032 1A80     		strh	r2, [r3]
2407:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2083              		.loc 1 2407 0
 2084 0034 3B1D     		adds	r3, r7, #4
 2085 0036 BA1D     		adds	r2, r7, #6
 2086 0038 1288     		ldrh	r2, [r2]
 2087 003a 1A80     		strh	r2, [r3]
2408:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2088              		.loc 1 2408 0
 2089 003c BB1D     		adds	r3, r7, #6
 2090 003e 0E22     		movs	r2, #14
 2091 0040 BA18     		adds	r2, r7, r2
 2092 0042 1288     		ldrh	r2, [r2]
 2093 0044 1A80     		strh	r2, [r3]
 2094              	.L120:
2409:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2410:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2411:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2095              		.loc 1 2411 0
 2096 0046 3A1D     		adds	r2, r7, #4
 2097 0048 BB1C     		adds	r3, r7, #2
 2098 004a 1288     		ldrh	r2, [r2]
 2099 004c 1B88     		ldrh	r3, [r3]
 2100 004e 9A42     		cmp	r2, r3
 2101 0050 03D9     		bls	.L121
2412:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2413:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2102              		.loc 1 2413 0
 2103 0052 3B1D     		adds	r3, r7, #4
 2104 0054 BA1C     		adds	r2, r7, #2
 2105 0056 1288     		ldrh	r2, [r2]
 2106 0058 1A80     		strh	r2, [r3]
 2107              	.L121:
2414:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2415:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2416:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2108              		.loc 1 2416 0
 2109 005a 3B1D     		adds	r3, r7, #4
 2110 005c BA1D     		adds	r2, r7, #6
 2111 005e 1088     		ldrh	r0, [r2]
 2112 0060 1B88     		ldrh	r3, [r3]
 2113 0062 99B2     		uxth	r1, r3
 2114 0064 82B2     		uxth	r2, r0
 2115 0066 9142     		cmp	r1, r2
 2116 0068 00D2     		bcs	.L122
 2117 006a 031C     		adds	r3, r0, #0
 2118              	.L122:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 81


 2119 006c 9BB2     		uxth	r3, r3
2417:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2120              		.loc 1 2417 0
 2121 006e 1800     		movs	r0, r3
 2122 0070 BD46     		mov	sp, r7
 2123 0072 05B0     		add	sp, sp, #20
 2124              		@ sp needed
 2125 0074 90BD     		pop	{r4, r7, pc}
 2126              		.cfi_endproc
 2127              	.LFE59:
 2128              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
 2129 0076 C046     		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2130              		.align	2
 2131              		.global	CapSense_CSD_GetWidgetNumber
 2132              		.code	16
 2133              		.thumb_func
 2134              		.type	CapSense_CSD_GetWidgetNumber, %function
 2135              	CapSense_CSD_GetWidgetNumber:
 2136              	.LFB60:
2418:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2419:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2420:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2421:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2422:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2423:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2424:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2425:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2426:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2427:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2428:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2429:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2430:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2431:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2432:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2433:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2434:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2435:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2436:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2437:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2438:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2439:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2440:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2441:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2442:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2443:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2444:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2446:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2447:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2449:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2450:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2451:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2452:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2453:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2454:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2455:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 82


2456:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2457:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2459:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2460:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2461:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2462:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2463:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2464:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2465:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2466:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2467:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2468:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2469:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2470:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2471:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2472:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2473:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2474:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2475:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2476:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2477:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2479:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2480:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2481:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2482:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2483:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2484:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2485:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2486:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2487:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2488:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2489:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2490:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2491:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2492:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2493:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2494:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2495:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2496:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2497:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2498:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2499:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2500:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2501:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2502:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2503:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2504:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2505:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2506:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2507:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2508:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2509:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2510:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2511:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2512:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 83


2513:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2514:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2515:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2516:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2517:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2518:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2519:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2520:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2521:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2522:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2523:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2524:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2525:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2526:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2527:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
2528:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2529:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2530:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2531:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2532:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2533:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2534:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2535:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2536:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2537:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2538:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2539:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2541:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2542:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2543:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2544:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2545:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2546:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2547:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2548:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2549:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2550:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2551:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2552:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2553:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2554:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2555:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2556:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2557:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2558:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2560:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2561:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2562:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
2563:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2564:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
2565:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2566:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2567:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2568:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
2569:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 84


2570:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
2571:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2572:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2573:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2574:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
2575:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2576:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2577:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2578:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2579:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2580:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2581:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2582:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2583:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2584:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2585:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2586:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2587:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2588:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2589:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2590:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2591:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2592:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2593:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2594:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2595:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2596:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2597:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2598:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2599:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2600:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2601:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2602:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2603:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2605:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2606:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2607:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2608:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2609:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2610:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2611:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2612:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2613:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2614:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2615:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2616:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2617:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2618:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2619:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2620:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2621:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2622:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2623:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2624:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2625:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2626:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 85


2627:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2628:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2629:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2630:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2631:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2632:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2633:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2634:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2635:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2636:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2637:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2638:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2639:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2640:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2641:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2643:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2644:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2645:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2646:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2647:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2648:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2649:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2650:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2651:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2652:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2653:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2654:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2655:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2656:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2657:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2658:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2659:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2660:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2661:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2662:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2663:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2664:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2665:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2666:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2667:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2668:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2669:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2670:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2671:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2672:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2673:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2674:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2675:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2676:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2677:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2678:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2679:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2680:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
2681:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2682:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2683:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 86


2684:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2685:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2686:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2687:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2688:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2689:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2690:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2691:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2692:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2693:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2694:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2695:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2696:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2697:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2698:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2699:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2700:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2701:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2702:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2703:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2704:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2705:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2706:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2707:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2708:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2709:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2710:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2711:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2712:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2713:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2714:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2715:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2716:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2717:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2718:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2719:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2720:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2721:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2722:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2723:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2724:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2725:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2726:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2727:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2728:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2729:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2730:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2731:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2732:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2733:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2734:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2735:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2736:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2737:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2738:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2739:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2740:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 87


2741:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2742:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2743:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2744:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2745:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2747:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2748:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2750:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2751:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2754:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2137              		.loc 1 2754 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 8
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141 0000 80B5     		push	{r7, lr}
 2142              		.cfi_def_cfa_offset 8
 2143              		.cfi_offset 7, -8
 2144              		.cfi_offset 14, -4
 2145 0002 82B0     		sub	sp, sp, #8
 2146              		.cfi_def_cfa_offset 16
 2147 0004 00AF     		add	r7, sp, #0
 2148              		.cfi_def_cfa_register 7
 2149 0006 7860     		str	r0, [r7, #4]
2755:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2150              		.loc 1 2755 0
 2151 0008 034A     		ldr	r2, .L126
 2152 000a 7B68     		ldr	r3, [r7, #4]
 2153 000c D318     		adds	r3, r2, r3
 2154 000e 1B78     		ldrb	r3, [r3]
2756:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2155              		.loc 1 2756 0
 2156 0010 1800     		movs	r0, r3
 2157 0012 BD46     		mov	sp, r7
 2158 0014 02B0     		add	sp, sp, #8
 2159              		@ sp needed
 2160 0016 80BD     		pop	{r7, pc}
 2161              	.L127:
 2162              		.align	2
 2163              	.L126:
 2164 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2165              		.cfi_endproc
 2166              	.LFE60:
 2167              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2168              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2169              		.align	2
 2170              		.global	CapSense_CSD_GetLowBaselineReset
 2171              		.code	16
 2172              		.thumb_func
 2173              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2174              	CapSense_CSD_GetLowBaselineReset:
 2175              	.LFB61:
2757:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2758:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 88


2759:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2760:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2761:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2762:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2763:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2764:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2765:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2766:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2767:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2768:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2769:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2770:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2771:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2773:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2774:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2776:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2777:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2778:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2780:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2176              		.loc 1 2780 0
 2177              		.cfi_startproc
 2178              		@ args = 0, pretend = 0, frame = 8
 2179              		@ frame_needed = 1, uses_anonymous_args = 0
 2180 0000 80B5     		push	{r7, lr}
 2181              		.cfi_def_cfa_offset 8
 2182              		.cfi_offset 7, -8
 2183              		.cfi_offset 14, -4
 2184 0002 82B0     		sub	sp, sp, #8
 2185              		.cfi_def_cfa_offset 16
 2186 0004 00AF     		add	r7, sp, #0
 2187              		.cfi_def_cfa_register 7
 2188 0006 7860     		str	r0, [r7, #4]
2781:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 2189              		.loc 1 2781 0
 2190 0008 034A     		ldr	r2, .L130
 2191 000a 7B68     		ldr	r3, [r7, #4]
 2192 000c D318     		adds	r3, r2, r3
 2193 000e 1B78     		ldrb	r3, [r3]
2782:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2194              		.loc 1 2782 0
 2195 0010 1800     		movs	r0, r3
 2196 0012 BD46     		mov	sp, r7
 2197 0014 02B0     		add	sp, sp, #8
 2198              		@ sp needed
 2199 0016 80BD     		pop	{r7, pc}
 2200              	.L131:
 2201              		.align	2
 2202              	.L130:
 2203 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2204              		.cfi_endproc
 2205              	.LFE61:
 2206              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2207              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2208              		.align	2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 89


 2209              		.global	CapSense_CSD_GetDebounce
 2210              		.code	16
 2211              		.thumb_func
 2212              		.type	CapSense_CSD_GetDebounce, %function
 2213              	CapSense_CSD_GetDebounce:
 2214              	.LFB62:
2783:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2784:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2785:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2786:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2787:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2788:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2789:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2790:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2791:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2792:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2793:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2794:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2795:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2796:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2797:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2798:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2799:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2800:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2801:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2802:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2803:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2804:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2806:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2215              		.loc 1 2806 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 8
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              		.cfi_def_cfa_offset 8
 2221              		.cfi_offset 7, -8
 2222              		.cfi_offset 14, -4
 2223 0002 82B0     		sub	sp, sp, #8
 2224              		.cfi_def_cfa_offset 16
 2225 0004 00AF     		add	r7, sp, #0
 2226              		.cfi_def_cfa_register 7
 2227 0006 7860     		str	r0, [r7, #4]
2807:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 2228              		.loc 1 2807 0
 2229 0008 034A     		ldr	r2, .L134
 2230 000a 7B68     		ldr	r3, [r7, #4]
 2231 000c D318     		adds	r3, r2, r3
 2232 000e 1B78     		ldrb	r3, [r3]
2808:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2233              		.loc 1 2808 0
 2234 0010 1800     		movs	r0, r3
 2235 0012 BD46     		mov	sp, r7
 2236 0014 02B0     		add	sp, sp, #8
 2237              		@ sp needed
 2238 0016 80BD     		pop	{r7, pc}
 2239              	.L135:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 90


 2240              		.align	2
 2241              	.L134:
 2242 0018 00000000 		.word	CapSense_CSD_debounce
 2243              		.cfi_endproc
 2244              	.LFE62:
 2245              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2246              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2247              		.align	2
 2248              		.global	CapSense_CSD_EnableRawDataFilters
 2249              		.code	16
 2250              		.thumb_func
 2251              		.type	CapSense_CSD_EnableRawDataFilters, %function
 2252              	CapSense_CSD_EnableRawDataFilters:
 2253              	.LFB63:
2809:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2810:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2811:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2812:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2813:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2814:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2815:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2816:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2817:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2818:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2819:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2820:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2821:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2822:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2823:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2824:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2825:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2826:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2827:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2828:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2829:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2830:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2831:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
2832:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2254              		.loc 1 2832 0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 1, uses_anonymous_args = 0
 2258 0000 80B5     		push	{r7, lr}
 2259              		.cfi_def_cfa_offset 8
 2260              		.cfi_offset 7, -8
 2261              		.cfi_offset 14, -4
 2262 0002 00AF     		add	r7, sp, #0
 2263              		.cfi_def_cfa_register 7
2833:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 2264              		.loc 1 2833 0
 2265 0004 024B     		ldr	r3, .L137
 2266 0006 0122     		movs	r2, #1
 2267 0008 1A70     		strb	r2, [r3]
2834:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2268              		.loc 1 2834 0
 2269 000a C046     		nop
 2270 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 91


 2271              		@ sp needed
 2272 000e 80BD     		pop	{r7, pc}
 2273              	.L138:
 2274              		.align	2
 2275              	.L137:
 2276 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2277              		.cfi_endproc
 2278              	.LFE63:
 2279              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 2280              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 2281              		.align	2
 2282              		.global	CapSense_CSD_DisableRawDataFilters
 2283              		.code	16
 2284              		.thumb_func
 2285              		.type	CapSense_CSD_DisableRawDataFilters, %function
 2286              	CapSense_CSD_DisableRawDataFilters:
 2287              	.LFB64:
2835:Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2836:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2837:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2838:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2839:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2840:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2841:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2842:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2843:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2844:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2845:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2846:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2847:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2848:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2849:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2850:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2851:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2852:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2853:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2854:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2855:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2856:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2857:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2288              		.loc 1 2857 0
 2289              		.cfi_startproc
 2290              		@ args = 0, pretend = 0, frame = 0
 2291              		@ frame_needed = 1, uses_anonymous_args = 0
 2292 0000 80B5     		push	{r7, lr}
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 7, -8
 2295              		.cfi_offset 14, -4
 2296 0002 00AF     		add	r7, sp, #0
 2297              		.cfi_def_cfa_register 7
2858:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 2298              		.loc 1 2858 0
 2299 0004 024B     		ldr	r3, .L140
 2300 0006 0022     		movs	r2, #0
 2301 0008 1A70     		strb	r2, [r3]
2859:Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2302              		.loc 1 2859 0
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 92


 2303 000a C046     		nop
 2304 000c BD46     		mov	sp, r7
 2305              		@ sp needed
 2306 000e 80BD     		pop	{r7, pc}
 2307              	.L141:
 2308              		.align	2
 2309              	.L140:
 2310 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2311              		.cfi_endproc
 2312              	.LFE64:
 2313              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 2314              		.text
 2315              	.Letext0:
 2316              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2317              		.section	.debug_info,"",%progbits
 2318              	.Ldebug_info0:
 2319 0000 6F090000 		.4byte	0x96f
 2320 0004 0400     		.2byte	0x4
 2321 0006 00000000 		.4byte	.Ldebug_abbrev0
 2322 000a 04       		.byte	0x4
 2323 000b 01       		.uleb128 0x1
 2324 000c 44030000 		.4byte	.LASF90
 2325 0010 0C       		.byte	0xc
 2326 0011 BB070000 		.4byte	.LASF91
 2327 0015 72070000 		.4byte	.LASF92
 2328 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2329 001d 00000000 		.4byte	0
 2330 0021 00000000 		.4byte	.Ldebug_line0
 2331 0025 02       		.uleb128 0x2
 2332 0026 01       		.byte	0x1
 2333 0027 06       		.byte	0x6
 2334 0028 D9040000 		.4byte	.LASF0
 2335 002c 02       		.uleb128 0x2
 2336 002d 01       		.byte	0x1
 2337 002e 08       		.byte	0x8
 2338 002f D2030000 		.4byte	.LASF1
 2339 0033 02       		.uleb128 0x2
 2340 0034 02       		.byte	0x2
 2341 0035 05       		.byte	0x5
 2342 0036 76000000 		.4byte	.LASF2
 2343 003a 02       		.uleb128 0x2
 2344 003b 02       		.byte	0x2
 2345 003c 07       		.byte	0x7
 2346 003d BF050000 		.4byte	.LASF3
 2347 0041 02       		.uleb128 0x2
 2348 0042 04       		.byte	0x4
 2349 0043 05       		.byte	0x5
 2350 0044 CA020000 		.4byte	.LASF4
 2351 0048 02       		.uleb128 0x2
 2352 0049 04       		.byte	0x4
 2353 004a 07       		.byte	0x7
 2354 004b 7A060000 		.4byte	.LASF5
 2355 004f 02       		.uleb128 0x2
 2356 0050 08       		.byte	0x8
 2357 0051 05       		.byte	0x5
 2358 0052 60020000 		.4byte	.LASF6
 2359 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 93


 2360 0057 08       		.byte	0x8
 2361 0058 07       		.byte	0x7
 2362 0059 E5040000 		.4byte	.LASF7
 2363 005d 03       		.uleb128 0x3
 2364 005e 04       		.byte	0x4
 2365 005f 05       		.byte	0x5
 2366 0060 696E7400 		.ascii	"int\000"
 2367 0064 02       		.uleb128 0x2
 2368 0065 04       		.byte	0x4
 2369 0066 07       		.byte	0x7
 2370 0067 1D050000 		.4byte	.LASF8
 2371 006b 04       		.uleb128 0x4
 2372 006c BD010000 		.4byte	.LASF9
 2373 0070 02       		.byte	0x2
 2374 0071 D201     		.2byte	0x1d2
 2375 0073 2C000000 		.4byte	0x2c
 2376 0077 04       		.uleb128 0x4
 2377 0078 A8010000 		.4byte	.LASF10
 2378 007c 02       		.byte	0x2
 2379 007d D301     		.2byte	0x1d3
 2380 007f 3A000000 		.4byte	0x3a
 2381 0083 04       		.uleb128 0x4
 2382 0084 52060000 		.4byte	.LASF11
 2383 0088 02       		.byte	0x2
 2384 0089 D401     		.2byte	0x1d4
 2385 008b 48000000 		.4byte	0x48
 2386 008f 02       		.uleb128 0x2
 2387 0090 04       		.byte	0x4
 2388 0091 04       		.byte	0x4
 2389 0092 3B020000 		.4byte	.LASF12
 2390 0096 02       		.uleb128 0x2
 2391 0097 08       		.byte	0x8
 2392 0098 04       		.byte	0x4
 2393 0099 2A080000 		.4byte	.LASF13
 2394 009d 02       		.uleb128 0x2
 2395 009e 01       		.byte	0x1
 2396 009f 08       		.byte	0x8
 2397 00a0 6C050000 		.4byte	.LASF14
 2398 00a4 02       		.uleb128 0x2
 2399 00a5 04       		.byte	0x4
 2400 00a6 07       		.byte	0x7
 2401 00a7 69070000 		.4byte	.LASF15
 2402 00ab 02       		.uleb128 0x2
 2403 00ac 08       		.byte	0x8
 2404 00ad 04       		.byte	0x4
 2405 00ae EB030000 		.4byte	.LASF16
 2406 00b2 05       		.uleb128 0x5
 2407 00b3 6B000000 		.4byte	0x6b
 2408 00b7 06       		.uleb128 0x6
 2409 00b8 D2050000 		.4byte	.LASF17
 2410 00bc 01       		.byte	0x1
 2411 00bd A6       		.byte	0xa6
 2412 00be 00000000 		.4byte	.LFB32
 2413 00c2 9C000000 		.4byte	.LFE32-.LFB32
 2414 00c6 01       		.uleb128 0x1
 2415 00c7 9C       		.byte	0x9c
 2416 00c8 E9000000 		.4byte	0xe9
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 94


 2417 00cc 07       		.uleb128 0x7
 2418 00cd AF010000 		.4byte	.LASF19
 2419 00d1 01       		.byte	0x1
 2420 00d2 A6       		.byte	0xa6
 2421 00d3 83000000 		.4byte	0x83
 2422 00d7 02       		.uleb128 0x2
 2423 00d8 91       		.byte	0x91
 2424 00d9 6C       		.sleb128 -20
 2425 00da 08       		.uleb128 0x8
 2426 00db B6010000 		.4byte	.LASF21
 2427 00df 01       		.byte	0x1
 2428 00e0 AA       		.byte	0xaa
 2429 00e1 6B000000 		.4byte	0x6b
 2430 00e5 02       		.uleb128 0x2
 2431 00e6 91       		.byte	0x91
 2432 00e7 77       		.sleb128 -9
 2433 00e8 00       		.byte	0
 2434 00e9 09       		.uleb128 0x9
 2435 00ea 52010000 		.4byte	.LASF18
 2436 00ee 01       		.byte	0x1
 2437 00ef F2       		.byte	0xf2
 2438 00f0 00000000 		.4byte	.LFB33
 2439 00f4 2A000000 		.4byte	.LFE33-.LFB33
 2440 00f8 01       		.uleb128 0x1
 2441 00f9 9C       		.byte	0x9c
 2442 00fa 0D010000 		.4byte	0x10d
 2443 00fe 07       		.uleb128 0x7
 2444 00ff AF010000 		.4byte	.LASF19
 2445 0103 01       		.byte	0x1
 2446 0104 F2       		.byte	0xf2
 2447 0105 83000000 		.4byte	0x83
 2448 0109 02       		.uleb128 0x2
 2449 010a 91       		.byte	0x91
 2450 010b 74       		.sleb128 -12
 2451 010c 00       		.byte	0
 2452 010d 0A       		.uleb128 0xa
 2453 010e 31080000 		.4byte	.LASF20
 2454 0112 01       		.byte	0x1
 2455 0113 1701     		.2byte	0x117
 2456 0115 00000000 		.4byte	.LFB34
 2457 0119 28000000 		.4byte	.LFE34-.LFB34
 2458 011d 01       		.uleb128 0x1
 2459 011e 9C       		.byte	0x9c
 2460 011f 31010000 		.4byte	0x131
 2461 0123 0B       		.uleb128 0xb
 2462 0124 6900     		.ascii	"i\000"
 2463 0126 01       		.byte	0x1
 2464 0127 1901     		.2byte	0x119
 2465 0129 83000000 		.4byte	0x83
 2466 012d 02       		.uleb128 0x2
 2467 012e 91       		.byte	0x91
 2468 012f 74       		.sleb128 -12
 2469 0130 00       		.byte	0
 2470 0131 0A       		.uleb128 0xa
 2471 0132 7A050000 		.4byte	.LASF22
 2472 0136 01       		.byte	0x1
 2473 0137 3A01     		.2byte	0x13a
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 95


 2474 0139 00000000 		.4byte	.LFB35
 2475 013d 50000000 		.4byte	.LFE35-.LFB35
 2476 0141 01       		.uleb128 0x1
 2477 0142 9C       		.byte	0x9c
 2478 0143 64010000 		.4byte	0x164
 2479 0147 0B       		.uleb128 0xb
 2480 0148 6900     		.ascii	"i\000"
 2481 014a 01       		.byte	0x1
 2482 014b 3C01     		.2byte	0x13c
 2483 014d 83000000 		.4byte	0x83
 2484 0151 02       		.uleb128 0x2
 2485 0152 91       		.byte	0x91
 2486 0153 74       		.sleb128 -12
 2487 0154 0C       		.uleb128 0xc
 2488 0155 5C050000 		.4byte	.LASF23
 2489 0159 01       		.byte	0x1
 2490 015a 3D01     		.2byte	0x13d
 2491 015c 83000000 		.4byte	0x83
 2492 0160 02       		.uleb128 0x2
 2493 0161 91       		.byte	0x91
 2494 0162 70       		.sleb128 -16
 2495 0163 00       		.byte	0
 2496 0164 0A       		.uleb128 0xa
 2497 0165 42070000 		.4byte	.LASF24
 2498 0169 01       		.byte	0x1
 2499 016a 7B01     		.2byte	0x17b
 2500 016c 00000000 		.4byte	.LFB36
 2501 0170 00020000 		.4byte	.LFE36-.LFB36
 2502 0174 01       		.uleb128 0x1
 2503 0175 9C       		.byte	0x9c
 2504 0176 E4010000 		.4byte	0x1e4
 2505 017a 0D       		.uleb128 0xd
 2506 017b AF010000 		.4byte	.LASF19
 2507 017f 01       		.byte	0x1
 2508 0180 7B01     		.2byte	0x17b
 2509 0182 83000000 		.4byte	0x83
 2510 0186 02       		.uleb128 0x2
 2511 0187 91       		.byte	0x91
 2512 0188 5C       		.sleb128 -36
 2513 0189 0C       		.uleb128 0xc
 2514 018a 5B020000 		.4byte	.LASF25
 2515 018e 01       		.byte	0x1
 2516 018f 7D01     		.2byte	0x17d
 2517 0191 83000000 		.4byte	0x83
 2518 0195 02       		.uleb128 0x2
 2519 0196 91       		.byte	0x91
 2520 0197 60       		.sleb128 -32
 2521 0198 0C       		.uleb128 0xc
 2522 0199 8C060000 		.4byte	.LASF26
 2523 019d 01       		.byte	0x1
 2524 019e 7E01     		.2byte	0x17e
 2525 01a0 83000000 		.4byte	0x83
 2526 01a4 02       		.uleb128 0x2
 2527 01a5 91       		.byte	0x91
 2528 01a6 6C       		.sleb128 -20
 2529 01a7 0C       		.uleb128 0xc
 2530 01a8 2A050000 		.4byte	.LASF27
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 96


 2531 01ac 01       		.byte	0x1
 2532 01ad 7F01     		.2byte	0x17f
 2533 01af 77000000 		.4byte	0x77
 2534 01b3 02       		.uleb128 0x2
 2535 01b4 91       		.byte	0x91
 2536 01b5 6A       		.sleb128 -22
 2537 01b6 0C       		.uleb128 0xc
 2538 01b7 9C000000 		.4byte	.LASF28
 2539 01bb 01       		.byte	0x1
 2540 01bc 8001     		.2byte	0x180
 2541 01be 77000000 		.4byte	0x77
 2542 01c2 02       		.uleb128 0x2
 2543 01c3 91       		.byte	0x91
 2544 01c4 68       		.sleb128 -24
 2545 01c5 0C       		.uleb128 0xc
 2546 01c6 B6010000 		.4byte	.LASF21
 2547 01ca 01       		.byte	0x1
 2548 01cb 8101     		.2byte	0x181
 2549 01cd 6B000000 		.4byte	0x6b
 2550 01d1 02       		.uleb128 0x2
 2551 01d2 91       		.byte	0x91
 2552 01d3 67       		.sleb128 -25
 2553 01d4 0C       		.uleb128 0xc
 2554 01d5 1B030000 		.4byte	.LASF29
 2555 01d9 01       		.byte	0x1
 2556 01da 8201     		.2byte	0x182
 2557 01dc 77000000 		.4byte	0x77
 2558 01e0 02       		.uleb128 0x2
 2559 01e1 91       		.byte	0x91
 2560 01e2 64       		.sleb128 -28
 2561 01e3 00       		.byte	0
 2562 01e4 0A       		.uleb128 0xa
 2563 01e5 94040000 		.4byte	.LASF30
 2564 01e9 01       		.byte	0x1
 2565 01ea 3B02     		.2byte	0x23b
 2566 01ec 00000000 		.4byte	.LFB37
 2567 01f0 18000000 		.4byte	.LFE37-.LFB37
 2568 01f4 01       		.uleb128 0x1
 2569 01f5 9C       		.byte	0x9c
 2570 01f6 0A020000 		.4byte	0x20a
 2571 01fa 0D       		.uleb128 0xd
 2572 01fb AF010000 		.4byte	.LASF19
 2573 01ff 01       		.byte	0x1
 2574 0200 3B02     		.2byte	0x23b
 2575 0202 83000000 		.4byte	0x83
 2576 0206 02       		.uleb128 0x2
 2577 0207 91       		.byte	0x91
 2578 0208 74       		.sleb128 -12
 2579 0209 00       		.byte	0
 2580 020a 0A       		.uleb128 0xa
 2581 020b ED000000 		.4byte	.LASF31
 2582 020f 01       		.byte	0x1
 2583 0210 7102     		.2byte	0x271
 2584 0212 00000000 		.4byte	.LFB38
 2585 0216 44000000 		.4byte	.LFE38-.LFB38
 2586 021a 01       		.uleb128 0x1
 2587 021b 9C       		.byte	0x9c
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 97


 2588 021c 3D020000 		.4byte	0x23d
 2589 0220 0B       		.uleb128 0xb
 2590 0221 6900     		.ascii	"i\000"
 2591 0223 01       		.byte	0x1
 2592 0224 7302     		.2byte	0x273
 2593 0226 83000000 		.4byte	0x83
 2594 022a 02       		.uleb128 0x2
 2595 022b 91       		.byte	0x91
 2596 022c 74       		.sleb128 -12
 2597 022d 0C       		.uleb128 0xc
 2598 022e 5C050000 		.4byte	.LASF23
 2599 0232 01       		.byte	0x1
 2600 0233 7402     		.2byte	0x274
 2601 0235 83000000 		.4byte	0x83
 2602 0239 02       		.uleb128 0x2
 2603 023a 91       		.byte	0x91
 2604 023b 70       		.sleb128 -16
 2605 023c 00       		.byte	0
 2606 023d 0A       		.uleb128 0xa
 2607 023e F7030000 		.4byte	.LASF32
 2608 0242 01       		.byte	0x1
 2609 0243 9E02     		.2byte	0x29e
 2610 0245 00000000 		.4byte	.LFB39
 2611 0249 74000000 		.4byte	.LFE39-.LFB39
 2612 024d 01       		.uleb128 0x1
 2613 024e 9C       		.byte	0x9c
 2614 024f AC020000 		.4byte	0x2ac
 2615 0253 0D       		.uleb128 0xd
 2616 0254 B6010000 		.4byte	.LASF21
 2617 0258 01       		.byte	0x1
 2618 0259 9E02     		.2byte	0x29e
 2619 025b 83000000 		.4byte	0x83
 2620 025f 02       		.uleb128 0x2
 2621 0260 91       		.byte	0x91
 2622 0261 5C       		.sleb128 -36
 2623 0262 0C       		.uleb128 0xc
 2624 0263 76080000 		.4byte	.LASF33
 2625 0267 01       		.byte	0x1
 2626 0268 A002     		.2byte	0x2a0
 2627 026a 83000000 		.4byte	0x83
 2628 026e 02       		.uleb128 0x2
 2629 026f 91       		.byte	0x91
 2630 0270 70       		.sleb128 -16
 2631 0271 0C       		.uleb128 0xc
 2632 0272 50050000 		.4byte	.LASF34
 2633 0276 01       		.byte	0x1
 2634 0277 A102     		.2byte	0x2a1
 2635 0279 83000000 		.4byte	0x83
 2636 027d 02       		.uleb128 0x2
 2637 027e 91       		.byte	0x91
 2638 027f 6C       		.sleb128 -20
 2639 0280 0C       		.uleb128 0xc
 2640 0281 02060000 		.4byte	.LASF35
 2641 0285 01       		.byte	0x1
 2642 0286 A202     		.2byte	0x2a2
 2643 0288 83000000 		.4byte	0x83
 2644 028c 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 98


 2645 028d 91       		.byte	0x91
 2646 028e 68       		.sleb128 -24
 2647 028f 0B       		.uleb128 0xb
 2648 0290 6900     		.ascii	"i\000"
 2649 0292 01       		.byte	0x1
 2650 0293 A302     		.2byte	0x2a3
 2651 0295 83000000 		.4byte	0x83
 2652 0299 02       		.uleb128 0x2
 2653 029a 91       		.byte	0x91
 2654 029b 74       		.sleb128 -12
 2655 029c 0C       		.uleb128 0xc
 2656 029d 5C050000 		.4byte	.LASF23
 2657 02a1 01       		.byte	0x1
 2658 02a2 A402     		.2byte	0x2a4
 2659 02a4 83000000 		.4byte	0x83
 2660 02a8 02       		.uleb128 0x2
 2661 02a9 91       		.byte	0x91
 2662 02aa 64       		.sleb128 -28
 2663 02ab 00       		.byte	0
 2664 02ac 0E       		.uleb128 0xe
 2665 02ad 1C000000 		.4byte	.LASF38
 2666 02b1 01       		.byte	0x1
 2667 02b2 CF02     		.2byte	0x2cf
 2668 02b4 77000000 		.4byte	0x77
 2669 02b8 00000000 		.4byte	.LFB40
 2670 02bc 1C000000 		.4byte	.LFE40-.LFB40
 2671 02c0 01       		.uleb128 0x1
 2672 02c1 9C       		.byte	0x9c
 2673 02c2 D6020000 		.4byte	0x2d6
 2674 02c6 0D       		.uleb128 0xd
 2675 02c7 AF010000 		.4byte	.LASF19
 2676 02cb 01       		.byte	0x1
 2677 02cc CF02     		.2byte	0x2cf
 2678 02ce 83000000 		.4byte	0x83
 2679 02d2 02       		.uleb128 0x2
 2680 02d3 91       		.byte	0x91
 2681 02d4 74       		.sleb128 -12
 2682 02d5 00       		.byte	0
 2683 02d6 0F       		.uleb128 0xf
 2684 02d7 35010000 		.4byte	.LASF36
 2685 02db 01       		.byte	0x1
 2686 02dc EA02     		.2byte	0x2ea
 2687 02de 00000000 		.4byte	.LFB41
 2688 02e2 28000000 		.4byte	.LFE41-.LFB41
 2689 02e6 01       		.uleb128 0x1
 2690 02e7 9C       		.byte	0x9c
 2691 02e8 0B030000 		.4byte	0x30b
 2692 02ec 0D       		.uleb128 0xd
 2693 02ed AF010000 		.4byte	.LASF19
 2694 02f1 01       		.byte	0x1
 2695 02f2 EA02     		.2byte	0x2ea
 2696 02f4 83000000 		.4byte	0x83
 2697 02f8 02       		.uleb128 0x2
 2698 02f9 91       		.byte	0x91
 2699 02fa 74       		.sleb128 -12
 2700 02fb 0D       		.uleb128 0xd
 2701 02fc 30010000 		.4byte	.LASF37
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 99


 2702 0300 01       		.byte	0x1
 2703 0301 EA02     		.2byte	0x2ea
 2704 0303 77000000 		.4byte	0x77
 2705 0307 02       		.uleb128 0x2
 2706 0308 91       		.byte	0x91
 2707 0309 72       		.sleb128 -14
 2708 030a 00       		.byte	0
 2709 030b 0E       		.uleb128 0xe
 2710 030c D6060000 		.4byte	.LASF39
 2711 0310 01       		.byte	0x1
 2712 0311 0503     		.2byte	0x305
 2713 0313 77000000 		.4byte	0x77
 2714 0317 00000000 		.4byte	.LFB42
 2715 031b 1C000000 		.4byte	.LFE42-.LFB42
 2716 031f 01       		.uleb128 0x1
 2717 0320 9C       		.byte	0x9c
 2718 0321 35030000 		.4byte	0x335
 2719 0325 0D       		.uleb128 0xd
 2720 0326 AF010000 		.4byte	.LASF19
 2721 032a 01       		.byte	0x1
 2722 032b 0503     		.2byte	0x305
 2723 032d 83000000 		.4byte	0x83
 2724 0331 02       		.uleb128 0x2
 2725 0332 91       		.byte	0x91
 2726 0333 74       		.sleb128 -12
 2727 0334 00       		.byte	0
 2728 0335 0F       		.uleb128 0xf
 2729 0336 FD020000 		.4byte	.LASF40
 2730 033a 01       		.byte	0x1
 2731 033b 2003     		.2byte	0x320
 2732 033d 00000000 		.4byte	.LFB43
 2733 0341 28000000 		.4byte	.LFE43-.LFB43
 2734 0345 01       		.uleb128 0x1
 2735 0346 9C       		.byte	0x9c
 2736 0347 6A030000 		.4byte	0x36a
 2737 034b 0D       		.uleb128 0xd
 2738 034c AF010000 		.4byte	.LASF19
 2739 0350 01       		.byte	0x1
 2740 0351 2003     		.2byte	0x320
 2741 0353 83000000 		.4byte	0x83
 2742 0357 02       		.uleb128 0x2
 2743 0358 91       		.byte	0x91
 2744 0359 74       		.sleb128 -12
 2745 035a 0D       		.uleb128 0xd
 2746 035b 85010000 		.4byte	.LASF41
 2747 035f 01       		.byte	0x1
 2748 0360 2003     		.2byte	0x320
 2749 0362 77000000 		.4byte	0x77
 2750 0366 02       		.uleb128 0x2
 2751 0367 91       		.byte	0x91
 2752 0368 72       		.sleb128 -14
 2753 0369 00       		.byte	0
 2754 036a 0E       		.uleb128 0xe
 2755 036b 0A080000 		.4byte	.LASF42
 2756 036f 01       		.byte	0x1
 2757 0370 3B03     		.2byte	0x33b
 2758 0372 77000000 		.4byte	0x77
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 100


 2759 0376 00000000 		.4byte	.LFB44
 2760 037a 1C000000 		.4byte	.LFE44-.LFB44
 2761 037e 01       		.uleb128 0x1
 2762 037f 9C       		.byte	0x9c
 2763 0380 94030000 		.4byte	0x394
 2764 0384 0D       		.uleb128 0xd
 2765 0385 B6010000 		.4byte	.LASF21
 2766 0389 01       		.byte	0x1
 2767 038a 3B03     		.2byte	0x33b
 2768 038c 83000000 		.4byte	0x83
 2769 0390 02       		.uleb128 0x2
 2770 0391 91       		.byte	0x91
 2771 0392 74       		.sleb128 -12
 2772 0393 00       		.byte	0
 2773 0394 0E       		.uleb128 0xe
 2774 0395 AC000000 		.4byte	.LASF43
 2775 0399 01       		.byte	0x1
 2776 039a 5603     		.2byte	0x356
 2777 039c 77000000 		.4byte	0x77
 2778 03a0 00000000 		.4byte	.LFB45
 2779 03a4 1C000000 		.4byte	.LFE45-.LFB45
 2780 03a8 01       		.uleb128 0x1
 2781 03a9 9C       		.byte	0x9c
 2782 03aa BE030000 		.4byte	0x3be
 2783 03ae 0D       		.uleb128 0xd
 2784 03af B6010000 		.4byte	.LASF21
 2785 03b3 01       		.byte	0x1
 2786 03b4 5603     		.2byte	0x356
 2787 03b6 83000000 		.4byte	0x83
 2788 03ba 02       		.uleb128 0x2
 2789 03bb 91       		.byte	0x91
 2790 03bc 74       		.sleb128 -12
 2791 03bd 00       		.byte	0
 2792 03be 0E       		.uleb128 0xe
 2793 03bf 55080000 		.4byte	.LASF44
 2794 03c3 01       		.byte	0x1
 2795 03c4 7203     		.2byte	0x372
 2796 03c6 77000000 		.4byte	0x77
 2797 03ca 00000000 		.4byte	.LFB46
 2798 03ce 1C000000 		.4byte	.LFE46-.LFB46
 2799 03d2 01       		.uleb128 0x1
 2800 03d3 9C       		.byte	0x9c
 2801 03d4 E8030000 		.4byte	0x3e8
 2802 03d8 0D       		.uleb128 0xd
 2803 03d9 B6010000 		.4byte	.LASF21
 2804 03dd 01       		.byte	0x1
 2805 03de 7203     		.2byte	0x372
 2806 03e0 83000000 		.4byte	0x83
 2807 03e4 02       		.uleb128 0x2
 2808 03e5 91       		.byte	0x91
 2809 03e6 74       		.sleb128 -12
 2810 03e7 00       		.byte	0
 2811 03e8 0E       		.uleb128 0xe
 2812 03e9 3A040000 		.4byte	.LASF45
 2813 03ed 01       		.byte	0x1
 2814 03ee 8E03     		.2byte	0x38e
 2815 03f0 77000000 		.4byte	0x77
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 101


 2816 03f4 00000000 		.4byte	.LFB47
 2817 03f8 1C000000 		.4byte	.LFE47-.LFB47
 2818 03fc 01       		.uleb128 0x1
 2819 03fd 9C       		.byte	0x9c
 2820 03fe 12040000 		.4byte	0x412
 2821 0402 0D       		.uleb128 0xd
 2822 0403 B6010000 		.4byte	.LASF21
 2823 0407 01       		.byte	0x1
 2824 0408 8E03     		.2byte	0x38e
 2825 040a 83000000 		.4byte	0x83
 2826 040e 02       		.uleb128 0x2
 2827 040f 91       		.byte	0x91
 2828 0410 74       		.sleb128 -12
 2829 0411 00       		.byte	0
 2830 0412 0F       		.uleb128 0xf
 2831 0413 03020000 		.4byte	.LASF46
 2832 0417 01       		.byte	0x1
 2833 0418 AF03     		.2byte	0x3af
 2834 041a 00000000 		.4byte	.LFB48
 2835 041e 28000000 		.4byte	.LFE48-.LFB48
 2836 0422 01       		.uleb128 0x1
 2837 0423 9C       		.byte	0x9c
 2838 0424 47040000 		.4byte	0x447
 2839 0428 0D       		.uleb128 0xd
 2840 0429 B6010000 		.4byte	.LASF21
 2841 042d 01       		.byte	0x1
 2842 042e AF03     		.2byte	0x3af
 2843 0430 83000000 		.4byte	0x83
 2844 0434 02       		.uleb128 0x2
 2845 0435 91       		.byte	0x91
 2846 0436 74       		.sleb128 -12
 2847 0437 0D       		.uleb128 0xd
 2848 0438 85010000 		.4byte	.LASF41
 2849 043c 01       		.byte	0x1
 2850 043d AF03     		.2byte	0x3af
 2851 043f 77000000 		.4byte	0x77
 2852 0443 02       		.uleb128 0x2
 2853 0444 91       		.byte	0x91
 2854 0445 72       		.sleb128 -14
 2855 0446 00       		.byte	0
 2856 0447 0F       		.uleb128 0xf
 2857 0448 11010000 		.4byte	.LASF47
 2858 044c 01       		.byte	0x1
 2859 044d CB03     		.2byte	0x3cb
 2860 044f 00000000 		.4byte	.LFB49
 2861 0453 28000000 		.4byte	.LFE49-.LFB49
 2862 0457 01       		.uleb128 0x1
 2863 0458 9C       		.byte	0x9c
 2864 0459 7C040000 		.4byte	0x47c
 2865 045d 0D       		.uleb128 0xd
 2866 045e B6010000 		.4byte	.LASF21
 2867 0462 01       		.byte	0x1
 2868 0463 CB03     		.2byte	0x3cb
 2869 0465 83000000 		.4byte	0x83
 2870 0469 02       		.uleb128 0x2
 2871 046a 91       		.byte	0x91
 2872 046b 74       		.sleb128 -12
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 102


 2873 046c 0D       		.uleb128 0xd
 2874 046d 85010000 		.4byte	.LASF41
 2875 0471 01       		.byte	0x1
 2876 0472 CB03     		.2byte	0x3cb
 2877 0474 77000000 		.4byte	0x77
 2878 0478 02       		.uleb128 0x2
 2879 0479 91       		.byte	0x91
 2880 047a 72       		.sleb128 -14
 2881 047b 00       		.byte	0
 2882 047c 0F       		.uleb128 0xf
 2883 047d 59060000 		.4byte	.LASF48
 2884 0481 01       		.byte	0x1
 2885 0482 E703     		.2byte	0x3e7
 2886 0484 00000000 		.4byte	.LFB50
 2887 0488 28000000 		.4byte	.LFE50-.LFB50
 2888 048c 01       		.uleb128 0x1
 2889 048d 9C       		.byte	0x9c
 2890 048e B1040000 		.4byte	0x4b1
 2891 0492 0D       		.uleb128 0xd
 2892 0493 B6010000 		.4byte	.LASF21
 2893 0497 01       		.byte	0x1
 2894 0498 E703     		.2byte	0x3e7
 2895 049a 83000000 		.4byte	0x83
 2896 049e 02       		.uleb128 0x2
 2897 049f 91       		.byte	0x91
 2898 04a0 74       		.sleb128 -12
 2899 04a1 0D       		.uleb128 0xd
 2900 04a2 85010000 		.4byte	.LASF41
 2901 04a6 01       		.byte	0x1
 2902 04a7 E703     		.2byte	0x3e7
 2903 04a9 77000000 		.4byte	0x77
 2904 04ad 02       		.uleb128 0x2
 2905 04ae 91       		.byte	0x91
 2906 04af 72       		.sleb128 -14
 2907 04b0 00       		.byte	0
 2908 04b1 0F       		.uleb128 0xf
 2909 04b2 0D060000 		.4byte	.LASF49
 2910 04b6 01       		.byte	0x1
 2911 04b7 0404     		.2byte	0x404
 2912 04b9 00000000 		.4byte	.LFB51
 2913 04bd 28000000 		.4byte	.LFE51-.LFB51
 2914 04c1 01       		.uleb128 0x1
 2915 04c2 9C       		.byte	0x9c
 2916 04c3 E6040000 		.4byte	0x4e6
 2917 04c7 0D       		.uleb128 0xd
 2918 04c8 B6010000 		.4byte	.LASF21
 2919 04cc 01       		.byte	0x1
 2920 04cd 0404     		.2byte	0x404
 2921 04cf 83000000 		.4byte	0x83
 2922 04d3 02       		.uleb128 0x2
 2923 04d4 91       		.byte	0x91
 2924 04d5 74       		.sleb128 -12
 2925 04d6 0D       		.uleb128 0xd
 2926 04d7 85010000 		.4byte	.LASF41
 2927 04db 01       		.byte	0x1
 2928 04dc 0404     		.2byte	0x404
 2929 04de 77000000 		.4byte	0x77
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 103


 2930 04e2 02       		.uleb128 0x2
 2931 04e3 91       		.byte	0x91
 2932 04e4 72       		.sleb128 -14
 2933 04e5 00       		.byte	0
 2934 04e6 0F       		.uleb128 0xf
 2935 04e7 29070000 		.4byte	.LASF50
 2936 04eb 01       		.byte	0x1
 2937 04ec 2004     		.2byte	0x420
 2938 04ee 00000000 		.4byte	.LFB52
 2939 04f2 28000000 		.4byte	.LFE52-.LFB52
 2940 04f6 01       		.uleb128 0x1
 2941 04f7 9C       		.byte	0x9c
 2942 04f8 1B050000 		.4byte	0x51b
 2943 04fc 0D       		.uleb128 0xd
 2944 04fd B6010000 		.4byte	.LASF21
 2945 0501 01       		.byte	0x1
 2946 0502 2004     		.2byte	0x420
 2947 0504 83000000 		.4byte	0x83
 2948 0508 02       		.uleb128 0x2
 2949 0509 91       		.byte	0x91
 2950 050a 74       		.sleb128 -12
 2951 050b 0D       		.uleb128 0xd
 2952 050c 85010000 		.4byte	.LASF41
 2953 0510 01       		.byte	0x1
 2954 0511 2004     		.2byte	0x420
 2955 0513 6B000000 		.4byte	0x6b
 2956 0517 02       		.uleb128 0x2
 2957 0518 91       		.byte	0x91
 2958 0519 73       		.sleb128 -13
 2959 051a 00       		.byte	0
 2960 051b 0F       		.uleb128 0xf
 2961 051c DC020000 		.4byte	.LASF51
 2962 0520 01       		.byte	0x1
 2963 0521 3C04     		.2byte	0x43c
 2964 0523 00000000 		.4byte	.LFB53
 2965 0527 28000000 		.4byte	.LFE53-.LFB53
 2966 052b 01       		.uleb128 0x1
 2967 052c 9C       		.byte	0x9c
 2968 052d 50050000 		.4byte	0x550
 2969 0531 0D       		.uleb128 0xd
 2970 0532 AF010000 		.4byte	.LASF19
 2971 0536 01       		.byte	0x1
 2972 0537 3C04     		.2byte	0x43c
 2973 0539 83000000 		.4byte	0x83
 2974 053d 02       		.uleb128 0x2
 2975 053e 91       		.byte	0x91
 2976 053f 74       		.sleb128 -12
 2977 0540 0D       		.uleb128 0xd
 2978 0541 85010000 		.4byte	.LASF41
 2979 0545 01       		.byte	0x1
 2980 0546 3C04     		.2byte	0x43c
 2981 0548 6B000000 		.4byte	0x6b
 2982 054c 02       		.uleb128 0x2
 2983 054d 91       		.byte	0x91
 2984 054e 73       		.sleb128 -13
 2985 054f 00       		.byte	0
 2986 0550 10       		.uleb128 0x10
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 104


 2987 0551 FC040000 		.4byte	.LASF52
 2988 0555 01       		.byte	0x1
 2989 0556 6A04     		.2byte	0x46a
 2990 0558 83000000 		.4byte	0x83
 2991 055c 00000000 		.4byte	.LFB54
 2992 0560 34010000 		.4byte	.LFE54-.LFB54
 2993 0564 01       		.uleb128 0x1
 2994 0565 9C       		.byte	0x9c
 2995 0566 C5050000 		.4byte	0x5c5
 2996 056a 0D       		.uleb128 0xd
 2997 056b AF010000 		.4byte	.LASF19
 2998 056f 01       		.byte	0x1
 2999 0570 6A04     		.2byte	0x46a
 3000 0572 83000000 		.4byte	0x83
 3001 0576 02       		.uleb128 0x2
 3002 0577 91       		.byte	0x91
 3003 0578 6C       		.sleb128 -20
 3004 0579 0C       		.uleb128 0xc
 3005 057a B6010000 		.4byte	.LASF21
 3006 057e 01       		.byte	0x1
 3007 057f 6C04     		.2byte	0x46c
 3008 0581 6B000000 		.4byte	0x6b
 3009 0585 02       		.uleb128 0x2
 3010 0586 91       		.byte	0x91
 3011 0587 77       		.sleb128 -9
 3012 0588 0C       		.uleb128 0xc
 3013 0589 D3020000 		.4byte	.LASF53
 3014 058d 01       		.byte	0x1
 3015 058e 6D04     		.2byte	0x46d
 3016 0590 6B000000 		.4byte	0x6b
 3017 0594 02       		.uleb128 0x2
 3018 0595 91       		.byte	0x91
 3019 0596 71       		.sleb128 -15
 3020 0597 0C       		.uleb128 0xc
 3021 0598 FC070000 		.4byte	.LASF54
 3022 059c 01       		.byte	0x1
 3023 059d 6E04     		.2byte	0x46e
 3024 059f 6B000000 		.4byte	0x6b
 3025 05a3 02       		.uleb128 0x2
 3026 05a4 91       		.byte	0x91
 3027 05a5 70       		.sleb128 -16
 3028 05a6 0C       		.uleb128 0xc
 3029 05a7 BE080000 		.4byte	.LASF55
 3030 05ab 01       		.byte	0x1
 3031 05ac 7004     		.2byte	0x470
 3032 05ae 77000000 		.4byte	0x77
 3033 05b2 02       		.uleb128 0x2
 3034 05b3 91       		.byte	0x91
 3035 05b4 74       		.sleb128 -12
 3036 05b5 0C       		.uleb128 0xc
 3037 05b6 E0030000 		.4byte	.LASF56
 3038 05ba 01       		.byte	0x1
 3039 05bb 7104     		.2byte	0x471
 3040 05bd 77000000 		.4byte	0x77
 3041 05c1 02       		.uleb128 0x2
 3042 05c2 91       		.byte	0x91
 3043 05c3 72       		.sleb128 -14
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 105


 3044 05c4 00       		.byte	0
 3045 05c5 10       		.uleb128 0x10
 3046 05c6 19040000 		.4byte	.LASF57
 3047 05ca 01       		.byte	0x1
 3048 05cb BC04     		.2byte	0x4bc
 3049 05cd 83000000 		.4byte	0x83
 3050 05d1 00000000 		.4byte	.LFB55
 3051 05d5 58000000 		.4byte	.LFE55-.LFB55
 3052 05d9 01       		.uleb128 0x1
 3053 05da 9C       		.byte	0x9c
 3054 05db 1C060000 		.4byte	0x61c
 3055 05df 0D       		.uleb128 0xd
 3056 05e0 B6010000 		.4byte	.LASF21
 3057 05e4 01       		.byte	0x1
 3058 05e5 BC04     		.2byte	0x4bc
 3059 05e7 83000000 		.4byte	0x83
 3060 05eb 02       		.uleb128 0x2
 3061 05ec 91       		.byte	0x91
 3062 05ed 64       		.sleb128 -28
 3063 05ee 0C       		.uleb128 0xc
 3064 05ef 71050000 		.4byte	.LASF58
 3065 05f3 01       		.byte	0x1
 3066 05f4 BE04     		.2byte	0x4be
 3067 05f6 83000000 		.4byte	0x83
 3068 05fa 02       		.uleb128 0x2
 3069 05fb 91       		.byte	0x91
 3070 05fc 74       		.sleb128 -12
 3071 05fd 0C       		.uleb128 0xc
 3072 05fe 78010000 		.4byte	.LASF59
 3073 0602 01       		.byte	0x1
 3074 0603 BF04     		.2byte	0x4bf
 3075 0605 83000000 		.4byte	0x83
 3076 0609 02       		.uleb128 0x2
 3077 060a 91       		.byte	0x91
 3078 060b 6C       		.sleb128 -20
 3079 060c 0C       		.uleb128 0xc
 3080 060d 53000000 		.4byte	.LASF60
 3081 0611 01       		.byte	0x1
 3082 0612 C004     		.2byte	0x4c0
 3083 0614 83000000 		.4byte	0x83
 3084 0618 02       		.uleb128 0x2
 3085 0619 91       		.byte	0x91
 3086 061a 70       		.sleb128 -16
 3087 061b 00       		.byte	0
 3088 061c 10       		.uleb128 0x10
 3089 061d 8A020000 		.4byte	.LASF61
 3090 0621 01       		.byte	0x1
 3091 0622 EA04     		.2byte	0x4ea
 3092 0624 83000000 		.4byte	0x83
 3093 0628 00000000 		.4byte	.LFB56
 3094 062c 36000000 		.4byte	.LFE56-.LFB56
 3095 0630 01       		.uleb128 0x1
 3096 0631 9C       		.byte	0x9c
 3097 0632 53060000 		.4byte	0x653
 3098 0636 0B       		.uleb128 0xb
 3099 0637 6900     		.ascii	"i\000"
 3100 0639 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 106


 3101 063a ED04     		.2byte	0x4ed
 3102 063c 83000000 		.4byte	0x83
 3103 0640 02       		.uleb128 0x2
 3104 0641 91       		.byte	0x91
 3105 0642 74       		.sleb128 -12
 3106 0643 0C       		.uleb128 0xc
 3107 0644 53000000 		.4byte	.LASF60
 3108 0648 01       		.byte	0x1
 3109 0649 EE04     		.2byte	0x4ee
 3110 064b 83000000 		.4byte	0x83
 3111 064f 02       		.uleb128 0x2
 3112 0650 91       		.byte	0x91
 3113 0651 70       		.sleb128 -16
 3114 0652 00       		.byte	0
 3115 0653 0A       		.uleb128 0xa
 3116 0654 87080000 		.4byte	.LASF62
 3117 0658 01       		.byte	0x1
 3118 0659 1905     		.2byte	0x519
 3119 065b 00000000 		.4byte	.LFB57
 3120 065f 70000000 		.4byte	.LFE57-.LFB57
 3121 0663 01       		.uleb128 0x1
 3122 0664 9C       		.byte	0x9c
 3123 0665 97060000 		.4byte	0x697
 3124 0669 0D       		.uleb128 0xd
 3125 066a B6010000 		.4byte	.LASF21
 3126 066e 01       		.byte	0x1
 3127 066f 1905     		.2byte	0x519
 3128 0671 83000000 		.4byte	0x83
 3129 0675 02       		.uleb128 0x2
 3130 0676 91       		.byte	0x91
 3131 0677 6C       		.sleb128 -20
 3132 0678 0C       		.uleb128 0xc
 3133 0679 71050000 		.4byte	.LASF58
 3134 067d 01       		.byte	0x1
 3135 067e 1C05     		.2byte	0x51c
 3136 0680 6B000000 		.4byte	0x6b
 3137 0684 02       		.uleb128 0x2
 3138 0685 91       		.byte	0x91
 3139 0686 77       		.sleb128 -9
 3140 0687 0C       		.uleb128 0xc
 3141 0688 78010000 		.4byte	.LASF59
 3142 068c 01       		.byte	0x1
 3143 068d 1D05     		.2byte	0x51d
 3144 068f 6B000000 		.4byte	0x6b
 3145 0693 02       		.uleb128 0x2
 3146 0694 91       		.byte	0x91
 3147 0695 76       		.sleb128 -10
 3148 0696 00       		.byte	0
 3149 0697 0A       		.uleb128 0xa
 3150 0698 CE080000 		.4byte	.LASF63
 3151 069c 01       		.byte	0x1
 3152 069d 4405     		.2byte	0x544
 3153 069f 00000000 		.4byte	.LFB58
 3154 06a3 70000000 		.4byte	.LFE58-.LFB58
 3155 06a7 01       		.uleb128 0x1
 3156 06a8 9C       		.byte	0x9c
 3157 06a9 DB060000 		.4byte	0x6db
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 107


 3158 06ad 0D       		.uleb128 0xd
 3159 06ae B6010000 		.4byte	.LASF21
 3160 06b2 01       		.byte	0x1
 3161 06b3 4405     		.2byte	0x544
 3162 06b5 83000000 		.4byte	0x83
 3163 06b9 02       		.uleb128 0x2
 3164 06ba 91       		.byte	0x91
 3165 06bb 6C       		.sleb128 -20
 3166 06bc 0C       		.uleb128 0xc
 3167 06bd 71050000 		.4byte	.LASF58
 3168 06c1 01       		.byte	0x1
 3169 06c2 4605     		.2byte	0x546
 3170 06c4 6B000000 		.4byte	0x6b
 3171 06c8 02       		.uleb128 0x2
 3172 06c9 91       		.byte	0x91
 3173 06ca 77       		.sleb128 -9
 3174 06cb 0C       		.uleb128 0xc
 3175 06cc 78010000 		.4byte	.LASF59
 3176 06d0 01       		.byte	0x1
 3177 06d1 4705     		.2byte	0x547
 3178 06d3 6B000000 		.4byte	0x6b
 3179 06d7 02       		.uleb128 0x2
 3180 06d8 91       		.byte	0x91
 3181 06d9 76       		.sleb128 -10
 3182 06da 00       		.byte	0
 3183 06db 0E       		.uleb128 0xe
 3184 06dc 41020000 		.4byte	.LASF64
 3185 06e0 01       		.byte	0x1
 3186 06e1 6009     		.2byte	0x960
 3187 06e3 77000000 		.4byte	0x77
 3188 06e7 00000000 		.4byte	.LFB59
 3189 06eb 76000000 		.4byte	.LFE59-.LFB59
 3190 06ef 01       		.uleb128 0x1
 3191 06f0 9C       		.byte	0x9c
 3192 06f1 2F070000 		.4byte	0x72f
 3193 06f5 11       		.uleb128 0x11
 3194 06f6 783100   		.ascii	"x1\000"
 3195 06f9 01       		.byte	0x1
 3196 06fa 6009     		.2byte	0x960
 3197 06fc 77000000 		.4byte	0x77
 3198 0700 02       		.uleb128 0x2
 3199 0701 91       		.byte	0x91
 3200 0702 66       		.sleb128 -26
 3201 0703 11       		.uleb128 0x11
 3202 0704 783200   		.ascii	"x2\000"
 3203 0707 01       		.byte	0x1
 3204 0708 6009     		.2byte	0x960
 3205 070a 77000000 		.4byte	0x77
 3206 070e 02       		.uleb128 0x2
 3207 070f 91       		.byte	0x91
 3208 0710 64       		.sleb128 -28
 3209 0711 11       		.uleb128 0x11
 3210 0712 783300   		.ascii	"x3\000"
 3211 0715 01       		.byte	0x1
 3212 0716 6009     		.2byte	0x960
 3213 0718 77000000 		.4byte	0x77
 3214 071c 02       		.uleb128 0x2
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 108


 3215 071d 91       		.byte	0x91
 3216 071e 62       		.sleb128 -30
 3217 071f 0B       		.uleb128 0xb
 3218 0720 746D7000 		.ascii	"tmp\000"
 3219 0724 01       		.byte	0x1
 3220 0725 6209     		.2byte	0x962
 3221 0727 77000000 		.4byte	0x77
 3222 072b 02       		.uleb128 0x2
 3223 072c 91       		.byte	0x91
 3224 072d 6E       		.sleb128 -18
 3225 072e 00       		.byte	0
 3226 072f 0E       		.uleb128 0xe
 3227 0730 8B010000 		.4byte	.LASF65
 3228 0734 01       		.byte	0x1
 3229 0735 C10A     		.2byte	0xac1
 3230 0737 83000000 		.4byte	0x83
 3231 073b 00000000 		.4byte	.LFB60
 3232 073f 1C000000 		.4byte	.LFE60-.LFB60
 3233 0743 01       		.uleb128 0x1
 3234 0744 9C       		.byte	0x9c
 3235 0745 59070000 		.4byte	0x759
 3236 0749 0D       		.uleb128 0xd
 3237 074a AF010000 		.4byte	.LASF19
 3238 074e 01       		.byte	0x1
 3239 074f C10A     		.2byte	0xac1
 3240 0751 83000000 		.4byte	0x83
 3241 0755 02       		.uleb128 0x2
 3242 0756 91       		.byte	0x91
 3243 0757 74       		.sleb128 -12
 3244 0758 00       		.byte	0
 3245 0759 0E       		.uleb128 0xe
 3246 075a E2010000 		.4byte	.LASF66
 3247 075e 01       		.byte	0x1
 3248 075f DB0A     		.2byte	0xadb
 3249 0761 6B000000 		.4byte	0x6b
 3250 0765 00000000 		.4byte	.LFB61
 3251 0769 1C000000 		.4byte	.LFE61-.LFB61
 3252 076d 01       		.uleb128 0x1
 3253 076e 9C       		.byte	0x9c
 3254 076f 83070000 		.4byte	0x783
 3255 0773 0D       		.uleb128 0xd
 3256 0774 AF010000 		.4byte	.LASF19
 3257 0778 01       		.byte	0x1
 3258 0779 DB0A     		.2byte	0xadb
 3259 077b 83000000 		.4byte	0x83
 3260 077f 02       		.uleb128 0x2
 3261 0780 91       		.byte	0x91
 3262 0781 74       		.sleb128 -12
 3263 0782 00       		.byte	0
 3264 0783 0E       		.uleb128 0xe
 3265 0784 61040000 		.4byte	.LASF67
 3266 0788 01       		.byte	0x1
 3267 0789 F50A     		.2byte	0xaf5
 3268 078b 6B000000 		.4byte	0x6b
 3269 078f 00000000 		.4byte	.LFB62
 3270 0793 1C000000 		.4byte	.LFE62-.LFB62
 3271 0797 01       		.uleb128 0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 109


 3272 0798 9C       		.byte	0x9c
 3273 0799 AD070000 		.4byte	0x7ad
 3274 079d 0D       		.uleb128 0xd
 3275 079e B6010000 		.4byte	.LASF21
 3276 07a2 01       		.byte	0x1
 3277 07a3 F50A     		.2byte	0xaf5
 3278 07a5 83000000 		.4byte	0x83
 3279 07a9 02       		.uleb128 0x2
 3280 07aa 91       		.byte	0x91
 3281 07ab 74       		.sleb128 -12
 3282 07ac 00       		.byte	0
 3283 07ad 12       		.uleb128 0x12
 3284 07ae CB000000 		.4byte	.LASF68
 3285 07b2 01       		.byte	0x1
 3286 07b3 0F0B     		.2byte	0xb0f
 3287 07b5 00000000 		.4byte	.LFB63
 3288 07b9 14000000 		.4byte	.LFE63-.LFB63
 3289 07bd 01       		.uleb128 0x1
 3290 07be 9C       		.byte	0x9c
 3291 07bf 12       		.uleb128 0x12
 3292 07c0 B6040000 		.4byte	.LASF69
 3293 07c4 01       		.byte	0x1
 3294 07c5 280B     		.2byte	0xb28
 3295 07c7 00000000 		.4byte	.LFB64
 3296 07cb 14000000 		.4byte	.LFE64-.LFB64
 3297 07cf 01       		.uleb128 0x1
 3298 07d0 9C       		.byte	0x9c
 3299 07d1 13       		.uleb128 0x13
 3300 07d2 6B000000 		.4byte	0x6b
 3301 07d6 E1070000 		.4byte	0x7e1
 3302 07da 14       		.uleb128 0x14
 3303 07db A4000000 		.4byte	0xa4
 3304 07df 0D       		.byte	0xd
 3305 07e0 00       		.byte	0
 3306 07e1 08       		.uleb128 0x8
 3307 07e2 A1080000 		.4byte	.LASF70
 3308 07e6 01       		.byte	0x1
 3309 07e7 5D       		.byte	0x5d
 3310 07e8 D1070000 		.4byte	0x7d1
 3311 07ec 05       		.uleb128 0x5
 3312 07ed 03       		.byte	0x3
 3313 07ee 4C000000 		.4byte	CapSense_CSD_debounceCounter
 3314 07f2 13       		.uleb128 0x13
 3315 07f3 77000000 		.4byte	0x77
 3316 07f7 02080000 		.4byte	0x802
 3317 07fb 14       		.uleb128 0x14
 3318 07fc A4000000 		.4byte	0xa4
 3319 0800 0C       		.byte	0xc
 3320 0801 00       		.byte	0
 3321 0802 15       		.uleb128 0x15
 3322 0803 12070000 		.4byte	.LASF71
 3323 0807 01       		.byte	0x1
 3324 0808 2C       		.byte	0x2c
 3325 0809 F2070000 		.4byte	0x7f2
 3326 080d 13       		.uleb128 0x13
 3327 080e 6B000000 		.4byte	0x6b
 3328 0812 1D080000 		.4byte	0x81d
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 110


 3329 0816 14       		.uleb128 0x14
 3330 0817 A4000000 		.4byte	0xa4
 3331 081b 01       		.byte	0x1
 3332 081c 00       		.byte	0
 3333 081d 15       		.uleb128 0x15
 3334 081e 34060000 		.4byte	.LASF72
 3335 0822 01       		.byte	0x1
 3336 0823 2D       		.byte	0x2d
 3337 0824 0D080000 		.4byte	0x80d
 3338 0828 13       		.uleb128 0x13
 3339 0829 B2000000 		.4byte	0xb2
 3340 082d 38080000 		.4byte	0x838
 3341 0831 14       		.uleb128 0x14
 3342 0832 A4000000 		.4byte	0xa4
 3343 0836 0C       		.byte	0xc
 3344 0837 00       		.byte	0
 3345 0838 15       		.uleb128 0x15
 3346 0839 2A030000 		.4byte	.LASF73
 3347 083d 01       		.byte	0x1
 3348 083e 2E       		.byte	0x2e
 3349 083f 43080000 		.4byte	0x843
 3350 0843 05       		.uleb128 0x5
 3351 0844 28080000 		.4byte	0x828
 3352 0848 16       		.uleb128 0x16
 3353 0849 00000000 		.4byte	.LASF74
 3354 084d 01       		.byte	0x1
 3355 084e 34       		.byte	0x34
 3356 084f F2070000 		.4byte	0x7f2
 3357 0853 05       		.uleb128 0x5
 3358 0854 03       		.byte	0x3
 3359 0855 00000000 		.4byte	CapSense_CSD_sensorBaseline
 3360 0859 13       		.uleb128 0x13
 3361 085a 6B000000 		.4byte	0x6b
 3362 085e 69080000 		.4byte	0x869
 3363 0862 14       		.uleb128 0x14
 3364 0863 A4000000 		.4byte	0xa4
 3365 0867 0C       		.byte	0xc
 3366 0868 00       		.byte	0
 3367 0869 16       		.uleb128 0x16
 3368 086a C3010000 		.4byte	.LASF75
 3369 086e 01       		.byte	0x1
 3370 086f 35       		.byte	0x35
 3371 0870 59080000 		.4byte	0x859
 3372 0874 05       		.uleb128 0x5
 3373 0875 03       		.byte	0x3
 3374 0876 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 3375 087a 16       		.uleb128 0x16
 3376 087b E8050000 		.4byte	.LASF76
 3377 087f 01       		.byte	0x1
 3378 0880 36       		.byte	0x36
 3379 0881 F2070000 		.4byte	0x7f2
 3380 0885 05       		.uleb128 0x5
 3381 0886 03       		.byte	0x3
 3382 0887 00000000 		.4byte	CapSense_CSD_sensorSignal
 3383 088b 16       		.uleb128 0x16
 3384 088c 39000000 		.4byte	.LASF77
 3385 0890 01       		.byte	0x1
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 111


 3386 0891 37       		.byte	0x37
 3387 0892 0D080000 		.4byte	0x80d
 3388 0896 05       		.uleb128 0x5
 3389 0897 03       		.byte	0x3
 3390 0898 00000000 		.4byte	CapSense_CSD_sensorOnMask
 3391 089c 16       		.uleb128 0x16
 3392 089d 91060000 		.4byte	.LASF78
 3393 08a1 01       		.byte	0x1
 3394 08a2 39       		.byte	0x39
 3395 08a3 59080000 		.4byte	0x859
 3396 08a7 05       		.uleb128 0x5
 3397 08a8 03       		.byte	0x3
 3398 08a9 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 3399 08ad 16       		.uleb128 0x16
 3400 08ae 32050000 		.4byte	.LASF79
 3401 08b2 01       		.byte	0x1
 3402 08b3 3A       		.byte	0x3a
 3403 08b4 59080000 		.4byte	0x859
 3404 08b8 05       		.uleb128 0x5
 3405 08b9 03       		.byte	0x3
 3406 08ba 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 3407 08be 16       		.uleb128 0x16
 3408 08bf A2050000 		.4byte	.LASF80
 3409 08c3 01       		.byte	0x1
 3410 08c4 49       		.byte	0x49
 3411 08c5 F2070000 		.4byte	0x7f2
 3412 08c9 05       		.uleb128 0x5
 3413 08ca 03       		.byte	0x3
 3414 08cb 00000000 		.4byte	CapSense_CSD_fingerThreshold
 3415 08cf 16       		.uleb128 0x16
 3416 08d0 6E020000 		.4byte	.LASF81
 3417 08d4 01       		.byte	0x1
 3418 08d5 4D       		.byte	0x4d
 3419 08d6 F2070000 		.4byte	0x7f2
 3420 08da 05       		.uleb128 0x5
 3421 08db 03       		.byte	0x3
 3422 08dc 00000000 		.4byte	CapSense_CSD_noiseThreshold
 3423 08e0 16       		.uleb128 0x16
 3424 08e1 B2060000 		.4byte	.LASF82
 3425 08e5 01       		.byte	0x1
 3426 08e6 51       		.byte	0x51
 3427 08e7 F2070000 		.4byte	0x7f2
 3428 08eb 05       		.uleb128 0x5
 3429 08ec 03       		.byte	0x3
 3430 08ed 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 3431 08f1 16       		.uleb128 0x16
 3432 08f2 23020000 		.4byte	.LASF83
 3433 08f6 01       		.byte	0x1
 3434 08f7 55       		.byte	0x55
 3435 08f8 F2070000 		.4byte	0x7f2
 3436 08fc 05       		.uleb128 0x5
 3437 08fd 03       		.byte	0x3
 3438 08fe 00000000 		.4byte	CapSense_CSD_hysteresis
 3439 0902 16       		.uleb128 0x16
 3440 0903 E6070000 		.4byte	.LASF84
 3441 0907 01       		.byte	0x1
 3442 0908 59       		.byte	0x59
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 112


 3443 0909 59080000 		.4byte	0x859
 3444 090d 05       		.uleb128 0x5
 3445 090e 03       		.byte	0x3
 3446 090f 00000000 		.4byte	CapSense_CSD_debounce
 3447 0913 16       		.uleb128 0x16
 3448 0914 7A040000 		.4byte	.LASF85
 3449 0918 01       		.byte	0x1
 3450 0919 61       		.byte	0x61
 3451 091a 24090000 		.4byte	0x924
 3452 091e 05       		.uleb128 0x5
 3453 091f 03       		.byte	0x3
 3454 0920 00000000 		.4byte	CapSense_CSD_rawDataIndex
 3455 0924 05       		.uleb128 0x5
 3456 0925 28080000 		.4byte	0x828
 3457 0929 16       		.uleb128 0x16
 3458 092a 59000000 		.4byte	.LASF86
 3459 092e 01       		.byte	0x1
 3460 092f 71       		.byte	0x71
 3461 0930 3A090000 		.4byte	0x93a
 3462 0934 05       		.uleb128 0x5
 3463 0935 03       		.byte	0x3
 3464 0936 00000000 		.4byte	CapSense_CSD_numberOfSensors
 3465 093a 05       		.uleb128 0x5
 3466 093b 28080000 		.4byte	0x828
 3467 093f 16       		.uleb128 0x16
 3468 0940 80000000 		.4byte	.LASF87
 3469 0944 01       		.byte	0x1
 3470 0945 1E       		.byte	0x1e
 3471 0946 F2070000 		.4byte	0x7f2
 3472 094a 05       		.uleb128 0x5
 3473 094b 03       		.byte	0x3
 3474 094c 00000000 		.4byte	CapSense_CSD_rawFilterData1
 3475 0950 16       		.uleb128 0x16
 3476 0951 AE020000 		.4byte	.LASF88
 3477 0955 01       		.byte	0x1
 3478 0956 1F       		.byte	0x1f
 3479 0957 F2070000 		.4byte	0x7f2
 3480 095b 05       		.uleb128 0x5
 3481 095c 03       		.byte	0x3
 3482 095d 00000000 		.4byte	CapSense_CSD_rawFilterData2
 3483 0961 16       		.uleb128 0x16
 3484 0962 F4060000 		.4byte	.LASF89
 3485 0966 01       		.byte	0x1
 3486 0967 45       		.byte	0x45
 3487 0968 6B000000 		.4byte	0x6b
 3488 096c 05       		.uleb128 0x5
 3489 096d 03       		.byte	0x3
 3490 096e 00000000 		.4byte	CapSense_CSD_enableRawFilters
 3491 0972 00       		.byte	0
 3492              		.section	.debug_abbrev,"",%progbits
 3493              	.Ldebug_abbrev0:
 3494 0000 01       		.uleb128 0x1
 3495 0001 11       		.uleb128 0x11
 3496 0002 01       		.byte	0x1
 3497 0003 25       		.uleb128 0x25
 3498 0004 0E       		.uleb128 0xe
 3499 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 113


 3500 0006 0B       		.uleb128 0xb
 3501 0007 03       		.uleb128 0x3
 3502 0008 0E       		.uleb128 0xe
 3503 0009 1B       		.uleb128 0x1b
 3504 000a 0E       		.uleb128 0xe
 3505 000b 55       		.uleb128 0x55
 3506 000c 17       		.uleb128 0x17
 3507 000d 11       		.uleb128 0x11
 3508 000e 01       		.uleb128 0x1
 3509 000f 10       		.uleb128 0x10
 3510 0010 17       		.uleb128 0x17
 3511 0011 00       		.byte	0
 3512 0012 00       		.byte	0
 3513 0013 02       		.uleb128 0x2
 3514 0014 24       		.uleb128 0x24
 3515 0015 00       		.byte	0
 3516 0016 0B       		.uleb128 0xb
 3517 0017 0B       		.uleb128 0xb
 3518 0018 3E       		.uleb128 0x3e
 3519 0019 0B       		.uleb128 0xb
 3520 001a 03       		.uleb128 0x3
 3521 001b 0E       		.uleb128 0xe
 3522 001c 00       		.byte	0
 3523 001d 00       		.byte	0
 3524 001e 03       		.uleb128 0x3
 3525 001f 24       		.uleb128 0x24
 3526 0020 00       		.byte	0
 3527 0021 0B       		.uleb128 0xb
 3528 0022 0B       		.uleb128 0xb
 3529 0023 3E       		.uleb128 0x3e
 3530 0024 0B       		.uleb128 0xb
 3531 0025 03       		.uleb128 0x3
 3532 0026 08       		.uleb128 0x8
 3533 0027 00       		.byte	0
 3534 0028 00       		.byte	0
 3535 0029 04       		.uleb128 0x4
 3536 002a 16       		.uleb128 0x16
 3537 002b 00       		.byte	0
 3538 002c 03       		.uleb128 0x3
 3539 002d 0E       		.uleb128 0xe
 3540 002e 3A       		.uleb128 0x3a
 3541 002f 0B       		.uleb128 0xb
 3542 0030 3B       		.uleb128 0x3b
 3543 0031 05       		.uleb128 0x5
 3544 0032 49       		.uleb128 0x49
 3545 0033 13       		.uleb128 0x13
 3546 0034 00       		.byte	0
 3547 0035 00       		.byte	0
 3548 0036 05       		.uleb128 0x5
 3549 0037 26       		.uleb128 0x26
 3550 0038 00       		.byte	0
 3551 0039 49       		.uleb128 0x49
 3552 003a 13       		.uleb128 0x13
 3553 003b 00       		.byte	0
 3554 003c 00       		.byte	0
 3555 003d 06       		.uleb128 0x6
 3556 003e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 114


 3557 003f 01       		.byte	0x1
 3558 0040 3F       		.uleb128 0x3f
 3559 0041 19       		.uleb128 0x19
 3560 0042 03       		.uleb128 0x3
 3561 0043 0E       		.uleb128 0xe
 3562 0044 3A       		.uleb128 0x3a
 3563 0045 0B       		.uleb128 0xb
 3564 0046 3B       		.uleb128 0x3b
 3565 0047 0B       		.uleb128 0xb
 3566 0048 27       		.uleb128 0x27
 3567 0049 19       		.uleb128 0x19
 3568 004a 11       		.uleb128 0x11
 3569 004b 01       		.uleb128 0x1
 3570 004c 12       		.uleb128 0x12
 3571 004d 06       		.uleb128 0x6
 3572 004e 40       		.uleb128 0x40
 3573 004f 18       		.uleb128 0x18
 3574 0050 9742     		.uleb128 0x2117
 3575 0052 19       		.uleb128 0x19
 3576 0053 01       		.uleb128 0x1
 3577 0054 13       		.uleb128 0x13
 3578 0055 00       		.byte	0
 3579 0056 00       		.byte	0
 3580 0057 07       		.uleb128 0x7
 3581 0058 05       		.uleb128 0x5
 3582 0059 00       		.byte	0
 3583 005a 03       		.uleb128 0x3
 3584 005b 0E       		.uleb128 0xe
 3585 005c 3A       		.uleb128 0x3a
 3586 005d 0B       		.uleb128 0xb
 3587 005e 3B       		.uleb128 0x3b
 3588 005f 0B       		.uleb128 0xb
 3589 0060 49       		.uleb128 0x49
 3590 0061 13       		.uleb128 0x13
 3591 0062 02       		.uleb128 0x2
 3592 0063 18       		.uleb128 0x18
 3593 0064 00       		.byte	0
 3594 0065 00       		.byte	0
 3595 0066 08       		.uleb128 0x8
 3596 0067 34       		.uleb128 0x34
 3597 0068 00       		.byte	0
 3598 0069 03       		.uleb128 0x3
 3599 006a 0E       		.uleb128 0xe
 3600 006b 3A       		.uleb128 0x3a
 3601 006c 0B       		.uleb128 0xb
 3602 006d 3B       		.uleb128 0x3b
 3603 006e 0B       		.uleb128 0xb
 3604 006f 49       		.uleb128 0x49
 3605 0070 13       		.uleb128 0x13
 3606 0071 02       		.uleb128 0x2
 3607 0072 18       		.uleb128 0x18
 3608 0073 00       		.byte	0
 3609 0074 00       		.byte	0
 3610 0075 09       		.uleb128 0x9
 3611 0076 2E       		.uleb128 0x2e
 3612 0077 01       		.byte	0x1
 3613 0078 3F       		.uleb128 0x3f
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 115


 3614 0079 19       		.uleb128 0x19
 3615 007a 03       		.uleb128 0x3
 3616 007b 0E       		.uleb128 0xe
 3617 007c 3A       		.uleb128 0x3a
 3618 007d 0B       		.uleb128 0xb
 3619 007e 3B       		.uleb128 0x3b
 3620 007f 0B       		.uleb128 0xb
 3621 0080 27       		.uleb128 0x27
 3622 0081 19       		.uleb128 0x19
 3623 0082 11       		.uleb128 0x11
 3624 0083 01       		.uleb128 0x1
 3625 0084 12       		.uleb128 0x12
 3626 0085 06       		.uleb128 0x6
 3627 0086 40       		.uleb128 0x40
 3628 0087 18       		.uleb128 0x18
 3629 0088 9642     		.uleb128 0x2116
 3630 008a 19       		.uleb128 0x19
 3631 008b 01       		.uleb128 0x1
 3632 008c 13       		.uleb128 0x13
 3633 008d 00       		.byte	0
 3634 008e 00       		.byte	0
 3635 008f 0A       		.uleb128 0xa
 3636 0090 2E       		.uleb128 0x2e
 3637 0091 01       		.byte	0x1
 3638 0092 3F       		.uleb128 0x3f
 3639 0093 19       		.uleb128 0x19
 3640 0094 03       		.uleb128 0x3
 3641 0095 0E       		.uleb128 0xe
 3642 0096 3A       		.uleb128 0x3a
 3643 0097 0B       		.uleb128 0xb
 3644 0098 3B       		.uleb128 0x3b
 3645 0099 05       		.uleb128 0x5
 3646 009a 27       		.uleb128 0x27
 3647 009b 19       		.uleb128 0x19
 3648 009c 11       		.uleb128 0x11
 3649 009d 01       		.uleb128 0x1
 3650 009e 12       		.uleb128 0x12
 3651 009f 06       		.uleb128 0x6
 3652 00a0 40       		.uleb128 0x40
 3653 00a1 18       		.uleb128 0x18
 3654 00a2 9642     		.uleb128 0x2116
 3655 00a4 19       		.uleb128 0x19
 3656 00a5 01       		.uleb128 0x1
 3657 00a6 13       		.uleb128 0x13
 3658 00a7 00       		.byte	0
 3659 00a8 00       		.byte	0
 3660 00a9 0B       		.uleb128 0xb
 3661 00aa 34       		.uleb128 0x34
 3662 00ab 00       		.byte	0
 3663 00ac 03       		.uleb128 0x3
 3664 00ad 08       		.uleb128 0x8
 3665 00ae 3A       		.uleb128 0x3a
 3666 00af 0B       		.uleb128 0xb
 3667 00b0 3B       		.uleb128 0x3b
 3668 00b1 05       		.uleb128 0x5
 3669 00b2 49       		.uleb128 0x49
 3670 00b3 13       		.uleb128 0x13
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 116


 3671 00b4 02       		.uleb128 0x2
 3672 00b5 18       		.uleb128 0x18
 3673 00b6 00       		.byte	0
 3674 00b7 00       		.byte	0
 3675 00b8 0C       		.uleb128 0xc
 3676 00b9 34       		.uleb128 0x34
 3677 00ba 00       		.byte	0
 3678 00bb 03       		.uleb128 0x3
 3679 00bc 0E       		.uleb128 0xe
 3680 00bd 3A       		.uleb128 0x3a
 3681 00be 0B       		.uleb128 0xb
 3682 00bf 3B       		.uleb128 0x3b
 3683 00c0 05       		.uleb128 0x5
 3684 00c1 49       		.uleb128 0x49
 3685 00c2 13       		.uleb128 0x13
 3686 00c3 02       		.uleb128 0x2
 3687 00c4 18       		.uleb128 0x18
 3688 00c5 00       		.byte	0
 3689 00c6 00       		.byte	0
 3690 00c7 0D       		.uleb128 0xd
 3691 00c8 05       		.uleb128 0x5
 3692 00c9 00       		.byte	0
 3693 00ca 03       		.uleb128 0x3
 3694 00cb 0E       		.uleb128 0xe
 3695 00cc 3A       		.uleb128 0x3a
 3696 00cd 0B       		.uleb128 0xb
 3697 00ce 3B       		.uleb128 0x3b
 3698 00cf 05       		.uleb128 0x5
 3699 00d0 49       		.uleb128 0x49
 3700 00d1 13       		.uleb128 0x13
 3701 00d2 02       		.uleb128 0x2
 3702 00d3 18       		.uleb128 0x18
 3703 00d4 00       		.byte	0
 3704 00d5 00       		.byte	0
 3705 00d6 0E       		.uleb128 0xe
 3706 00d7 2E       		.uleb128 0x2e
 3707 00d8 01       		.byte	0x1
 3708 00d9 3F       		.uleb128 0x3f
 3709 00da 19       		.uleb128 0x19
 3710 00db 03       		.uleb128 0x3
 3711 00dc 0E       		.uleb128 0xe
 3712 00dd 3A       		.uleb128 0x3a
 3713 00de 0B       		.uleb128 0xb
 3714 00df 3B       		.uleb128 0x3b
 3715 00e0 05       		.uleb128 0x5
 3716 00e1 27       		.uleb128 0x27
 3717 00e2 19       		.uleb128 0x19
 3718 00e3 49       		.uleb128 0x49
 3719 00e4 13       		.uleb128 0x13
 3720 00e5 11       		.uleb128 0x11
 3721 00e6 01       		.uleb128 0x1
 3722 00e7 12       		.uleb128 0x12
 3723 00e8 06       		.uleb128 0x6
 3724 00e9 40       		.uleb128 0x40
 3725 00ea 18       		.uleb128 0x18
 3726 00eb 9742     		.uleb128 0x2117
 3727 00ed 19       		.uleb128 0x19
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 117


 3728 00ee 01       		.uleb128 0x1
 3729 00ef 13       		.uleb128 0x13
 3730 00f0 00       		.byte	0
 3731 00f1 00       		.byte	0
 3732 00f2 0F       		.uleb128 0xf
 3733 00f3 2E       		.uleb128 0x2e
 3734 00f4 01       		.byte	0x1
 3735 00f5 3F       		.uleb128 0x3f
 3736 00f6 19       		.uleb128 0x19
 3737 00f7 03       		.uleb128 0x3
 3738 00f8 0E       		.uleb128 0xe
 3739 00f9 3A       		.uleb128 0x3a
 3740 00fa 0B       		.uleb128 0xb
 3741 00fb 3B       		.uleb128 0x3b
 3742 00fc 05       		.uleb128 0x5
 3743 00fd 27       		.uleb128 0x27
 3744 00fe 19       		.uleb128 0x19
 3745 00ff 11       		.uleb128 0x11
 3746 0100 01       		.uleb128 0x1
 3747 0101 12       		.uleb128 0x12
 3748 0102 06       		.uleb128 0x6
 3749 0103 40       		.uleb128 0x40
 3750 0104 18       		.uleb128 0x18
 3751 0105 9742     		.uleb128 0x2117
 3752 0107 19       		.uleb128 0x19
 3753 0108 01       		.uleb128 0x1
 3754 0109 13       		.uleb128 0x13
 3755 010a 00       		.byte	0
 3756 010b 00       		.byte	0
 3757 010c 10       		.uleb128 0x10
 3758 010d 2E       		.uleb128 0x2e
 3759 010e 01       		.byte	0x1
 3760 010f 3F       		.uleb128 0x3f
 3761 0110 19       		.uleb128 0x19
 3762 0111 03       		.uleb128 0x3
 3763 0112 0E       		.uleb128 0xe
 3764 0113 3A       		.uleb128 0x3a
 3765 0114 0B       		.uleb128 0xb
 3766 0115 3B       		.uleb128 0x3b
 3767 0116 05       		.uleb128 0x5
 3768 0117 27       		.uleb128 0x27
 3769 0118 19       		.uleb128 0x19
 3770 0119 49       		.uleb128 0x49
 3771 011a 13       		.uleb128 0x13
 3772 011b 11       		.uleb128 0x11
 3773 011c 01       		.uleb128 0x1
 3774 011d 12       		.uleb128 0x12
 3775 011e 06       		.uleb128 0x6
 3776 011f 40       		.uleb128 0x40
 3777 0120 18       		.uleb128 0x18
 3778 0121 9642     		.uleb128 0x2116
 3779 0123 19       		.uleb128 0x19
 3780 0124 01       		.uleb128 0x1
 3781 0125 13       		.uleb128 0x13
 3782 0126 00       		.byte	0
 3783 0127 00       		.byte	0
 3784 0128 11       		.uleb128 0x11
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 118


 3785 0129 05       		.uleb128 0x5
 3786 012a 00       		.byte	0
 3787 012b 03       		.uleb128 0x3
 3788 012c 08       		.uleb128 0x8
 3789 012d 3A       		.uleb128 0x3a
 3790 012e 0B       		.uleb128 0xb
 3791 012f 3B       		.uleb128 0x3b
 3792 0130 05       		.uleb128 0x5
 3793 0131 49       		.uleb128 0x49
 3794 0132 13       		.uleb128 0x13
 3795 0133 02       		.uleb128 0x2
 3796 0134 18       		.uleb128 0x18
 3797 0135 00       		.byte	0
 3798 0136 00       		.byte	0
 3799 0137 12       		.uleb128 0x12
 3800 0138 2E       		.uleb128 0x2e
 3801 0139 00       		.byte	0
 3802 013a 3F       		.uleb128 0x3f
 3803 013b 19       		.uleb128 0x19
 3804 013c 03       		.uleb128 0x3
 3805 013d 0E       		.uleb128 0xe
 3806 013e 3A       		.uleb128 0x3a
 3807 013f 0B       		.uleb128 0xb
 3808 0140 3B       		.uleb128 0x3b
 3809 0141 05       		.uleb128 0x5
 3810 0142 27       		.uleb128 0x27
 3811 0143 19       		.uleb128 0x19
 3812 0144 11       		.uleb128 0x11
 3813 0145 01       		.uleb128 0x1
 3814 0146 12       		.uleb128 0x12
 3815 0147 06       		.uleb128 0x6
 3816 0148 40       		.uleb128 0x40
 3817 0149 18       		.uleb128 0x18
 3818 014a 9742     		.uleb128 0x2117
 3819 014c 19       		.uleb128 0x19
 3820 014d 00       		.byte	0
 3821 014e 00       		.byte	0
 3822 014f 13       		.uleb128 0x13
 3823 0150 01       		.uleb128 0x1
 3824 0151 01       		.byte	0x1
 3825 0152 49       		.uleb128 0x49
 3826 0153 13       		.uleb128 0x13
 3827 0154 01       		.uleb128 0x1
 3828 0155 13       		.uleb128 0x13
 3829 0156 00       		.byte	0
 3830 0157 00       		.byte	0
 3831 0158 14       		.uleb128 0x14
 3832 0159 21       		.uleb128 0x21
 3833 015a 00       		.byte	0
 3834 015b 49       		.uleb128 0x49
 3835 015c 13       		.uleb128 0x13
 3836 015d 2F       		.uleb128 0x2f
 3837 015e 0B       		.uleb128 0xb
 3838 015f 00       		.byte	0
 3839 0160 00       		.byte	0
 3840 0161 15       		.uleb128 0x15
 3841 0162 34       		.uleb128 0x34
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 119


 3842 0163 00       		.byte	0
 3843 0164 03       		.uleb128 0x3
 3844 0165 0E       		.uleb128 0xe
 3845 0166 3A       		.uleb128 0x3a
 3846 0167 0B       		.uleb128 0xb
 3847 0168 3B       		.uleb128 0x3b
 3848 0169 0B       		.uleb128 0xb
 3849 016a 49       		.uleb128 0x49
 3850 016b 13       		.uleb128 0x13
 3851 016c 3F       		.uleb128 0x3f
 3852 016d 19       		.uleb128 0x19
 3853 016e 3C       		.uleb128 0x3c
 3854 016f 19       		.uleb128 0x19
 3855 0170 00       		.byte	0
 3856 0171 00       		.byte	0
 3857 0172 16       		.uleb128 0x16
 3858 0173 34       		.uleb128 0x34
 3859 0174 00       		.byte	0
 3860 0175 03       		.uleb128 0x3
 3861 0176 0E       		.uleb128 0xe
 3862 0177 3A       		.uleb128 0x3a
 3863 0178 0B       		.uleb128 0xb
 3864 0179 3B       		.uleb128 0x3b
 3865 017a 0B       		.uleb128 0xb
 3866 017b 49       		.uleb128 0x49
 3867 017c 13       		.uleb128 0x13
 3868 017d 3F       		.uleb128 0x3f
 3869 017e 19       		.uleb128 0x19
 3870 017f 02       		.uleb128 0x2
 3871 0180 18       		.uleb128 0x18
 3872 0181 00       		.byte	0
 3873 0182 00       		.byte	0
 3874 0183 00       		.byte	0
 3875              		.section	.debug_aranges,"",%progbits
 3876 0000 1C010000 		.4byte	0x11c
 3877 0004 0200     		.2byte	0x2
 3878 0006 00000000 		.4byte	.Ldebug_info0
 3879 000a 04       		.byte	0x4
 3880 000b 00       		.byte	0
 3881 000c 0000     		.2byte	0
 3882 000e 0000     		.2byte	0
 3883 0010 00000000 		.4byte	.LFB32
 3884 0014 9C000000 		.4byte	.LFE32-.LFB32
 3885 0018 00000000 		.4byte	.LFB33
 3886 001c 2A000000 		.4byte	.LFE33-.LFB33
 3887 0020 00000000 		.4byte	.LFB34
 3888 0024 28000000 		.4byte	.LFE34-.LFB34
 3889 0028 00000000 		.4byte	.LFB35
 3890 002c 50000000 		.4byte	.LFE35-.LFB35
 3891 0030 00000000 		.4byte	.LFB36
 3892 0034 00020000 		.4byte	.LFE36-.LFB36
 3893 0038 00000000 		.4byte	.LFB37
 3894 003c 18000000 		.4byte	.LFE37-.LFB37
 3895 0040 00000000 		.4byte	.LFB38
 3896 0044 44000000 		.4byte	.LFE38-.LFB38
 3897 0048 00000000 		.4byte	.LFB39
 3898 004c 74000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 120


 3899 0050 00000000 		.4byte	.LFB40
 3900 0054 1C000000 		.4byte	.LFE40-.LFB40
 3901 0058 00000000 		.4byte	.LFB41
 3902 005c 28000000 		.4byte	.LFE41-.LFB41
 3903 0060 00000000 		.4byte	.LFB42
 3904 0064 1C000000 		.4byte	.LFE42-.LFB42
 3905 0068 00000000 		.4byte	.LFB43
 3906 006c 28000000 		.4byte	.LFE43-.LFB43
 3907 0070 00000000 		.4byte	.LFB44
 3908 0074 1C000000 		.4byte	.LFE44-.LFB44
 3909 0078 00000000 		.4byte	.LFB45
 3910 007c 1C000000 		.4byte	.LFE45-.LFB45
 3911 0080 00000000 		.4byte	.LFB46
 3912 0084 1C000000 		.4byte	.LFE46-.LFB46
 3913 0088 00000000 		.4byte	.LFB47
 3914 008c 1C000000 		.4byte	.LFE47-.LFB47
 3915 0090 00000000 		.4byte	.LFB48
 3916 0094 28000000 		.4byte	.LFE48-.LFB48
 3917 0098 00000000 		.4byte	.LFB49
 3918 009c 28000000 		.4byte	.LFE49-.LFB49
 3919 00a0 00000000 		.4byte	.LFB50
 3920 00a4 28000000 		.4byte	.LFE50-.LFB50
 3921 00a8 00000000 		.4byte	.LFB51
 3922 00ac 28000000 		.4byte	.LFE51-.LFB51
 3923 00b0 00000000 		.4byte	.LFB52
 3924 00b4 28000000 		.4byte	.LFE52-.LFB52
 3925 00b8 00000000 		.4byte	.LFB53
 3926 00bc 28000000 		.4byte	.LFE53-.LFB53
 3927 00c0 00000000 		.4byte	.LFB54
 3928 00c4 34010000 		.4byte	.LFE54-.LFB54
 3929 00c8 00000000 		.4byte	.LFB55
 3930 00cc 58000000 		.4byte	.LFE55-.LFB55
 3931 00d0 00000000 		.4byte	.LFB56
 3932 00d4 36000000 		.4byte	.LFE56-.LFB56
 3933 00d8 00000000 		.4byte	.LFB57
 3934 00dc 70000000 		.4byte	.LFE57-.LFB57
 3935 00e0 00000000 		.4byte	.LFB58
 3936 00e4 70000000 		.4byte	.LFE58-.LFB58
 3937 00e8 00000000 		.4byte	.LFB59
 3938 00ec 76000000 		.4byte	.LFE59-.LFB59
 3939 00f0 00000000 		.4byte	.LFB60
 3940 00f4 1C000000 		.4byte	.LFE60-.LFB60
 3941 00f8 00000000 		.4byte	.LFB61
 3942 00fc 1C000000 		.4byte	.LFE61-.LFB61
 3943 0100 00000000 		.4byte	.LFB62
 3944 0104 1C000000 		.4byte	.LFE62-.LFB62
 3945 0108 00000000 		.4byte	.LFB63
 3946 010c 14000000 		.4byte	.LFE63-.LFB63
 3947 0110 00000000 		.4byte	.LFB64
 3948 0114 14000000 		.4byte	.LFE64-.LFB64
 3949 0118 00000000 		.4byte	0
 3950 011c 00000000 		.4byte	0
 3951              		.section	.debug_ranges,"",%progbits
 3952              	.Ldebug_ranges0:
 3953 0000 00000000 		.4byte	.LFB32
 3954 0004 9C000000 		.4byte	.LFE32
 3955 0008 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 121


 3956 000c 2A000000 		.4byte	.LFE33
 3957 0010 00000000 		.4byte	.LFB34
 3958 0014 28000000 		.4byte	.LFE34
 3959 0018 00000000 		.4byte	.LFB35
 3960 001c 50000000 		.4byte	.LFE35
 3961 0020 00000000 		.4byte	.LFB36
 3962 0024 00020000 		.4byte	.LFE36
 3963 0028 00000000 		.4byte	.LFB37
 3964 002c 18000000 		.4byte	.LFE37
 3965 0030 00000000 		.4byte	.LFB38
 3966 0034 44000000 		.4byte	.LFE38
 3967 0038 00000000 		.4byte	.LFB39
 3968 003c 74000000 		.4byte	.LFE39
 3969 0040 00000000 		.4byte	.LFB40
 3970 0044 1C000000 		.4byte	.LFE40
 3971 0048 00000000 		.4byte	.LFB41
 3972 004c 28000000 		.4byte	.LFE41
 3973 0050 00000000 		.4byte	.LFB42
 3974 0054 1C000000 		.4byte	.LFE42
 3975 0058 00000000 		.4byte	.LFB43
 3976 005c 28000000 		.4byte	.LFE43
 3977 0060 00000000 		.4byte	.LFB44
 3978 0064 1C000000 		.4byte	.LFE44
 3979 0068 00000000 		.4byte	.LFB45
 3980 006c 1C000000 		.4byte	.LFE45
 3981 0070 00000000 		.4byte	.LFB46
 3982 0074 1C000000 		.4byte	.LFE46
 3983 0078 00000000 		.4byte	.LFB47
 3984 007c 1C000000 		.4byte	.LFE47
 3985 0080 00000000 		.4byte	.LFB48
 3986 0084 28000000 		.4byte	.LFE48
 3987 0088 00000000 		.4byte	.LFB49
 3988 008c 28000000 		.4byte	.LFE49
 3989 0090 00000000 		.4byte	.LFB50
 3990 0094 28000000 		.4byte	.LFE50
 3991 0098 00000000 		.4byte	.LFB51
 3992 009c 28000000 		.4byte	.LFE51
 3993 00a0 00000000 		.4byte	.LFB52
 3994 00a4 28000000 		.4byte	.LFE52
 3995 00a8 00000000 		.4byte	.LFB53
 3996 00ac 28000000 		.4byte	.LFE53
 3997 00b0 00000000 		.4byte	.LFB54
 3998 00b4 34010000 		.4byte	.LFE54
 3999 00b8 00000000 		.4byte	.LFB55
 4000 00bc 58000000 		.4byte	.LFE55
 4001 00c0 00000000 		.4byte	.LFB56
 4002 00c4 36000000 		.4byte	.LFE56
 4003 00c8 00000000 		.4byte	.LFB57
 4004 00cc 70000000 		.4byte	.LFE57
 4005 00d0 00000000 		.4byte	.LFB58
 4006 00d4 70000000 		.4byte	.LFE58
 4007 00d8 00000000 		.4byte	.LFB59
 4008 00dc 76000000 		.4byte	.LFE59
 4009 00e0 00000000 		.4byte	.LFB60
 4010 00e4 1C000000 		.4byte	.LFE60
 4011 00e8 00000000 		.4byte	.LFB61
 4012 00ec 1C000000 		.4byte	.LFE61
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 122


 4013 00f0 00000000 		.4byte	.LFB62
 4014 00f4 1C000000 		.4byte	.LFE62
 4015 00f8 00000000 		.4byte	.LFB63
 4016 00fc 14000000 		.4byte	.LFE63
 4017 0100 00000000 		.4byte	.LFB64
 4018 0104 14000000 		.4byte	.LFE64
 4019 0108 00000000 		.4byte	0
 4020 010c 00000000 		.4byte	0
 4021              		.section	.debug_line,"",%progbits
 4022              	.Ldebug_line0:
 4023 0000 A7030000 		.section	.debug_str,"MS",%progbits,1
 4023      02004E00 
 4023      00000201 
 4023      FB0E0D00 
 4023      01010101 
 4024              	.LASF74:
 4025 0000 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 4025      656E7365 
 4025      5F435344 
 4025      5F73656E 
 4025      736F7242 
 4026              	.LASF38:
 4027 001c 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 4027      656E7365 
 4027      5F435344 
 4027      5F476574 
 4027      42617365 
 4028              	.LASF77:
 4029 0039 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 4029      656E7365 
 4029      5F435344 
 4029      5F73656E 
 4029      736F724F 
 4030              	.LASF60:
 4031 0053 73746174 		.ascii	"state\000"
 4031      6500
 4032              	.LASF86:
 4033 0059 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 4033      656E7365 
 4033      5F435344 
 4033      5F6E756D 
 4033      6265724F 
 4034              	.LASF2:
 4035 0076 73686F72 		.ascii	"short int\000"
 4035      7420696E 
 4035      7400
 4036              	.LASF87:
 4037 0080 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 4037      656E7365 
 4037      5F435344 
 4037      5F726177 
 4037      46696C74 
 4038              	.LASF28:
 4039 009c 66696C74 		.ascii	"filteredRawData\000"
 4039      65726564 
 4039      52617744 
 4039      61746100 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 123


 4040              	.LASF43:
 4041 00ac 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 4041      656E7365 
 4041      5F435344 
 4041      5F476574 
 4041      4E6F6973 
 4042              	.LASF68:
 4043 00cb 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 4043      656E7365 
 4043      5F435344 
 4043      5F456E61 
 4043      626C6552 
 4044              	.LASF31:
 4045 00ed 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 4045      656E7365 
 4045      5F435344 
 4045      5F557064 
 4045      61746545 
 4046              	.LASF47:
 4047 0111 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 4047      656E7365 
 4047      5F435344 
 4047      5F536574 
 4047      4E6F6973 
 4048              	.LASF37:
 4049 0130 64617461 		.ascii	"data\000"
 4049      00
 4050              	.LASF36:
 4051 0135 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 4051      656E7365 
 4051      5F435344 
 4051      5F536574 
 4051      42617365 
 4052              	.LASF18:
 4053 0152 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 4053      656E7365 
 4053      5F435344 
 4053      5F496E69 
 4053      7469616C 
 4054              	.LASF59:
 4055 0178 6E756D4F 		.ascii	"numOfSensors\000"
 4055      6653656E 
 4055      736F7273 
 4055      00
 4056              	.LASF41:
 4057 0185 76616C75 		.ascii	"value\000"
 4057      6500
 4058              	.LASF65:
 4059 018b 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 4059      656E7365 
 4059      5F435344 
 4059      5F476574 
 4059      57696467 
 4060              	.LASF10:
 4061 01a8 75696E74 		.ascii	"uint16\000"
 4061      313600
 4062              	.LASF19:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 124


 4063 01af 73656E73 		.ascii	"sensor\000"
 4063      6F7200
 4064              	.LASF21:
 4065 01b6 77696467 		.ascii	"widget\000"
 4065      657400
 4066              	.LASF9:
 4067 01bd 75696E74 		.ascii	"uint8\000"
 4067      3800
 4068              	.LASF75:
 4069 01c3 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 4069      656E7365 
 4069      5F435344 
 4069      5F73656E 
 4069      736F7242 
 4070              	.LASF66:
 4071 01e2 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 4071      656E7365 
 4071      5F435344 
 4071      5F476574 
 4071      4C6F7742 
 4072              	.LASF46:
 4073 0203 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 4073      656E7365 
 4073      5F435344 
 4073      5F536574 
 4073      46696E67 
 4074              	.LASF83:
 4075 0223 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 4075      656E7365 
 4075      5F435344 
 4075      5F687973 
 4075      74657265 
 4076              	.LASF12:
 4077 023b 666C6F61 		.ascii	"float\000"
 4077      7400
 4078              	.LASF64:
 4079 0241 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 4079      656E7365 
 4079      5F435344 
 4079      5F4D6564 
 4079      69616E46 
 4080              	.LASF25:
 4081 025b 63616C63 		.ascii	"calc\000"
 4081      00
 4082              	.LASF6:
 4083 0260 6C6F6E67 		.ascii	"long long int\000"
 4083      206C6F6E 
 4083      6720696E 
 4083      7400
 4084              	.LASF81:
 4085 026e 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 4085      656E7365 
 4085      5F435344 
 4085      5F6E6F69 
 4085      73655468 
 4086              	.LASF61:
 4087 028a 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 125


 4087      656E7365 
 4087      5F435344 
 4087      5F436865 
 4087      636B4973 
 4088              	.LASF88:
 4089 02ae 43617053 		.ascii	"CapSense_CSD_rawFilterData2\000"
 4089      656E7365 
 4089      5F435344 
 4089      5F726177 
 4089      46696C74 
 4090              	.LASF4:
 4091 02ca 6C6F6E67 		.ascii	"long int\000"
 4091      20696E74 
 4091      00
 4092              	.LASF53:
 4093 02d3 6465626F 		.ascii	"debounce\000"
 4093      756E6365 
 4093      00
 4094              	.LASF51:
 4095 02dc 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 4095      656E7365 
 4095      5F435344 
 4095      5F536574 
 4095      4C6F7742 
 4096              	.LASF40:
 4097 02fd 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 4097      656E7365 
 4097      5F435344 
 4097      5F536574 
 4097      44696666 
 4098              	.LASF29:
 4099 031b 6E6F6973 		.ascii	"noiseThreshold\000"
 4099      65546872 
 4099      6573686F 
 4099      6C6400
 4100              	.LASF73:
 4101 032a 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 4101      656E7365 
 4101      5F435344 
 4101      5F776964 
 4101      6765744E 
 4102              	.LASF90:
 4103 0344 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4103      43313120 
 4103      352E342E 
 4103      31203230 
 4103      31363036 
 4104 0377 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4104      20726576 
 4104      6973696F 
 4104      6E203233 
 4104      37373135 
 4105 03aa 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4105      66756E63 
 4105      74696F6E 
 4105      2D736563 
 4105      74696F6E 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 126


 4106              	.LASF1:
 4107 03d2 756E7369 		.ascii	"unsigned char\000"
 4107      676E6564 
 4107      20636861 
 4107      7200
 4108              	.LASF56:
 4109 03e0 68797374 		.ascii	"hysteresis\000"
 4109      65726573 
 4109      697300
 4110              	.LASF16:
 4111 03eb 6C6F6E67 		.ascii	"long double\000"
 4111      20646F75 
 4111      626C6500 
 4112              	.LASF32:
 4113 03f7 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 4113      656E7365 
 4113      5F435344 
 4113      5F557064 
 4113      61746557 
 4114              	.LASF57:
 4115 0419 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 4115      656E7365 
 4115      5F435344 
 4115      5F436865 
 4115      636B4973 
 4116              	.LASF45:
 4117 043a 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 4117      656E7365 
 4117      5F435344 
 4117      5F476574 
 4117      4E656761 
 4118              	.LASF67:
 4119 0461 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 4119      656E7365 
 4119      5F435344 
 4119      5F476574 
 4119      4465626F 
 4120              	.LASF85:
 4121 047a 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 4121      656E7365 
 4121      5F435344 
 4121      5F726177 
 4121      44617461 
 4122              	.LASF30:
 4123 0494 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 4123      656E7365 
 4123      5F435344 
 4123      5F557064 
 4123      61746553 
 4124              	.LASF69:
 4125 04b6 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 4125      656E7365 
 4125      5F435344 
 4125      5F446973 
 4125      61626C65 
 4126              	.LASF0:
 4127 04d9 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 127


 4127      65642063 
 4127      68617200 
 4128              	.LASF7:
 4129 04e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4129      206C6F6E 
 4129      6720756E 
 4129      7369676E 
 4129      65642069 
 4130              	.LASF52:
 4131 04fc 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 4131      656E7365 
 4131      5F435344 
 4131      5F436865 
 4131      636B4973 
 4132              	.LASF8:
 4133 051d 756E7369 		.ascii	"unsigned int\000"
 4133      676E6564 
 4133      20696E74 
 4133      00
 4134              	.LASF27:
 4135 052a 74656D70 		.ascii	"tempRaw\000"
 4135      52617700 
 4136              	.LASF79:
 4137 0532 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 4137      656E7365 
 4137      5F435344 
 4137      5F6C6F77 
 4137      42617365 
 4138              	.LASF34:
 4139 0550 66697273 		.ascii	"firstSensor\000"
 4139      7453656E 
 4139      736F7200 
 4140              	.LASF23:
 4141 055c 69735365 		.ascii	"isSensorEnabled\000"
 4141      6E736F72 
 4141      456E6162 
 4141      6C656400 
 4142              	.LASF14:
 4143 056c 63686172 		.ascii	"char\000"
 4143      00
 4144              	.LASF58:
 4145 0571 72617749 		.ascii	"rawIndex\000"
 4145      6E646578 
 4145      00
 4146              	.LASF22:
 4147 057a 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 4147      656E7365 
 4147      5F435344 
 4147      5F496E69 
 4147      7469616C 
 4148              	.LASF80:
 4149 05a2 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 4149      656E7365 
 4149      5F435344 
 4149      5F66696E 
 4149      67657254 
 4150              	.LASF3:
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 128


 4151 05bf 73686F72 		.ascii	"short unsigned int\000"
 4151      7420756E 
 4151      7369676E 
 4151      65642069 
 4151      6E7400
 4152              	.LASF17:
 4153 05d2 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 4153      656E7365 
 4153      5F435344 
 4153      5F426173 
 4153      65496E69 
 4154              	.LASF76:
 4155 05e8 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 4155      656E7365 
 4155      5F435344 
 4155      5F73656E 
 4155      736F7253 
 4156              	.LASF35:
 4157 0602 6C617374 		.ascii	"lastSensor\000"
 4157      53656E73 
 4157      6F7200
 4158              	.LASF49:
 4159 060d 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 4159      656E7365 
 4159      5F435344 
 4159      5F536574 
 4159      4E656761 
 4160              	.LASF72:
 4161 0634 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 4161      656E7365 
 4161      5F435344 
 4161      5F73656E 
 4161      736F7245 
 4162              	.LASF11:
 4163 0652 75696E74 		.ascii	"uint32\000"
 4163      333200
 4164              	.LASF48:
 4165 0659 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 4165      656E7365 
 4165      5F435344 
 4165      5F536574 
 4165      46696E67 
 4166              	.LASF5:
 4167 067a 6C6F6E67 		.ascii	"long unsigned int\000"
 4167      20756E73 
 4167      69676E65 
 4167      6420696E 
 4167      7400
 4168              	.LASF26:
 4169 068c 7369676E 		.ascii	"sign\000"
 4169      00
 4170              	.LASF78:
 4171 0691 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 4171      656E7365 
 4171      5F435344 
 4171      5F6C6F77 
 4171      42617365 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 129


 4172              	.LASF82:
 4173 06b2 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 4173      656E7365 
 4173      5F435344 
 4173      5F6E6567 
 4173      61746976 
 4174              	.LASF39:
 4175 06d6 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 4175      656E7365 
 4175      5F435344 
 4175      5F476574 
 4175      44696666 
 4176              	.LASF89:
 4177 06f4 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 4177      656E7365 
 4177      5F435344 
 4177      5F656E61 
 4177      626C6552 
 4178              	.LASF71:
 4179 0712 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 4179      656E7365 
 4179      5F435344 
 4179      5F73656E 
 4179      736F7252 
 4180              	.LASF50:
 4181 0729 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 4181      656E7365 
 4181      5F435344 
 4181      5F536574 
 4181      4465626F 
 4182              	.LASF24:
 4183 0742 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 4183      656E7365 
 4183      5F435344 
 4183      5F557064 
 4183      61746542 
 4184              	.LASF15:
 4185 0769 73697A65 		.ascii	"sizetype\000"
 4185      74797065 
 4185      00
 4186              	.LASF92:
 4187 0772 433A5C55 		.ascii	"C:\\Users\\SHOZO\\Documents\\PSoC Creator\\STONE_VO"
 4187      73657273 
 4187      5C53484F 
 4187      5A4F5C44 
 4187      6F63756D 
 4188 07a0 4943455C 		.ascii	"ICE\\STONE_VOICE_2021.cydsn\000"
 4188      53544F4E 
 4188      455F564F 
 4188      4943455F 
 4188      32303231 
 4189              	.LASF91:
 4190 07bb 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 4190      72617465 
 4190      645F536F 
 4190      75726365 
 4190      5C50536F 
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 130


 4191              	.LASF84:
 4192 07e6 43617053 		.ascii	"CapSense_CSD_debounce\000"
 4192      656E7365 
 4192      5F435344 
 4192      5F646562 
 4192      6F756E63 
 4193              	.LASF54:
 4194 07fc 6465626F 		.ascii	"debounceIndex\000"
 4194      756E6365 
 4194      496E6465 
 4194      7800
 4195              	.LASF42:
 4196 080a 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 4196      656E7365 
 4196      5F435344 
 4196      5F476574 
 4196      46696E67 
 4197              	.LASF13:
 4198 082a 646F7562 		.ascii	"double\000"
 4198      6C6500
 4199              	.LASF20:
 4200 0831 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 4200      656E7365 
 4200      5F435344 
 4200      5F496E69 
 4200      7469616C 
 4201              	.LASF44:
 4202 0855 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 4202      656E7365 
 4202      5F435344 
 4202      5F476574 
 4202      46696E67 
 4203              	.LASF33:
 4204 0876 73656E73 		.ascii	"sensorsPerWidget\000"
 4204      6F727350 
 4204      65725769 
 4204      64676574 
 4204      00
 4205              	.LASF62:
 4206 0887 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 4206      656E7365 
 4206      5F435344 
 4206      5F456E61 
 4206      626C6557 
 4207              	.LASF70:
 4208 08a1 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 4208      656E7365 
 4208      5F435344 
 4208      5F646562 
 4208      6F756E63 
 4209              	.LASF55:
 4210 08be 66696E67 		.ascii	"fingerThreshold\000"
 4210      65725468 
 4210      72657368 
 4210      6F6C6400 
 4211              	.LASF63:
 4212 08ce 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
ARM GAS  C:\Users\SHOZO\AppData\Local\Temp\ccGGKGa0.s 			page 131


 4212      656E7365 
 4212      5F435344 
 4212      5F446973 
 4212      61626C65 
 4213              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
